# MM Shop - Local Development
# ==========================

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: mm-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: mm_shop_dev
      POSTGRES_USER: mm_user
      POSTGRES_PASSWORD: dev_password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - mm-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: mm-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - mm-network

  # MM API
  api:
    build:
      context: .
      dockerfile: Dockerfile.api.release
    container_name: mm-api-dev
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - GIN_MODE=debug
      - DEBUG=true
      - LOG_LEVEL=debug
      - DATABASE_URL=postgres://mm_user:dev_password@postgres:5432/mm_shop_dev?sslmode=disable
      - REDIS_URL=redis://redis:6379/0
      - CORS_ALLOW_ORIGINS=*
      - PUBLIC_HOST=localhost
      - JWT_SECRET=dev-secret-key-change-in-production
    volumes:
      - ./images:/app/images
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - mm-network

  # MM Admin Panel
  admin:
    build:
      context: .
      dockerfile: Dockerfile.admin.dev
    container_name: mm-admin-dev
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      api:
        condition: service_started
    networks:
      - mm-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PgAdmin - БД менеджер
  pgadmin:
    image: dpage/pgadmin4
    container_name: mm-pgadmin-dev
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@mm.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    depends_on:
      postgres:
        condition: service_started
    networks:
      - mm-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/misc/ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  mm-network:
    driver: bridge

