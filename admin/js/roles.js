// ===== ROLES.JS - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏ =====

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–æ–ª–µ–π
async function loadRoles() {
    console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–æ–ª–∏...');
    try {
        const response = await window.api.fetchData('/api/v1/admin/roles/');
        console.log('üì° –û—Ç–≤–µ—Ç API –¥–ª—è —Ä–æ–ª–µ–π:', response);
        if (response.success) {
            console.log('‚úÖ –†–æ–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ:', response.data.roles);
            displayRoles(response.data.roles);
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ API –¥–ª—è —Ä–æ–ª–µ–π:', response);
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–æ–ª–µ–π:', error);
        if (window.ui && window.ui.showMessage) {
            window.ui.showMessage('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–æ–ª–µ–π', 'error');
        }
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–æ–ª–µ–π
function displayRoles(roles) {
    console.log('üîÑ displayRoles –≤—ã–∑–≤–∞–Ω–∞ —Å –¥–∞–Ω–Ω—ã–º–∏:', roles);
    const tbody = document.getElementById('roles-table-body');
    
    if (!tbody) {
        console.error('‚ùå tbody –¥–ª—è —Ä–æ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        return;
    }

    tbody.innerHTML = '';
    
    if (!roles || roles.length === 0) {
        tbody.innerHTML = `
            <tr>
                <td colspan="7" class="text-center">
                    <div style="padding: 40px 20px;">
                        <i class="fas fa-user-shield" style="font-size: 48px; color: #ccc; margin-bottom: 15px;"></i>
                        <div style="font-size: 18px; color: #666; margin-bottom: 10px;">–†–æ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</div>
                        <div style="font-size: 14px; color: #999;">–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é —Ä–æ–ª—å, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å —Ä–æ–ª—å"</div>
                    </div>
                </td>
            </tr>
        `;
        return;
    }
    
    roles.forEach((role, index) => {
        const row = document.createElement('tr');
        row.style.animationDelay = `${index * 0.1}s`;
        
        row.innerHTML = `
            <td>
                <div style="display: flex; align-items: center; gap: 12px;">
                    <div style="width: 45px; height: 45px; border-radius: 50%; background: linear-gradient(135deg, #f093fb, #f5576c); display: flex; align-items: center; justify-content: center; color: white; font-size: 18px;">
                        <i class="fas fa-user-shield"></i>
                    </div>
                    <div>
                        <div style="font-weight: 700; color: #333; font-size: 15px;">${role.displayName}</div>
                        <div style="font-size: 11px; color: #888; font-family: monospace;">${role.name}</div>
                    </div>
                </div>
            </td>
            <td>${role.displayName}</td>
            <td>
                <div style="display: flex; align-items: center; gap: 10px;">
                    <i class="fas fa-info-circle" style="color: #4ecdc4;"></i>
                    <span style="font-weight: 500; max-width: 200px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;" title="${role.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}">
                        ${role.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}
                    </span>
                </div>
            </td>
            <td>
                <div style="display: flex; align-items: center; gap: 8px;">
                    <i class="fas fa-key" style="color: #f093fb;"></i>
                    <span style="font-size: 13px; color: #666;">
                        ${role.permissions ? role.permissions.split(',').length : 0} —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
                    </span>
                </div>
            </td>
            <td>
                <span class="badge ${role.isActive ? 'role-user' : 'role-admin'}" style="background: ${role.isActive ? 'linear-gradient(135deg, #4ecdc4, #44a08d)' : 'linear-gradient(135deg, #ff6b6b, #ee5a24)'};">
                    <i class="fas ${role.isActive ? 'fa-check-circle' : 'fa-times-circle'}"></i>
                    ${role.isActive ? '–ê–∫—Ç–∏–≤–Ω–∞' : '–ù–µ–∞–∫—Ç–∏–≤–Ω–∞'}
                </span>
            </td>
            <td>
                <div style="display: flex; align-items: center; gap: 8px;">
                    <i class="fas fa-users" style="color: #45b7d1;"></i>
                    <span class="badge" style="background: linear-gradient(135deg, #45b7d1, #96ceb4); color: white;">
                        ${role.userCount || 0}
                    </span>
                </div>
            </td>
            <td>
                <div style="display: flex; gap: 6px;">
                    <button class="btn-sm btn-primary" onclick="window.roles.viewRole('${role.id}')" title="–ü—Ä–æ—Å–º–æ—Ç—Ä">
                        <i class="fas fa-eye"></i>
                    </button>
                    <button class="btn-sm btn-secondary" onclick="window.roles.editRole('${role.id}')" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å" ${role.isSystem ? 'disabled' : ''}>
                        <i class="fas fa-edit"></i>
                    </button>
                    <button class="btn-sm btn-danger" onclick="window.roles.deleteRole('${role.id}')" title="–£–¥–∞–ª–∏—Ç—å" ${role.isSystem ? 'disabled' : ''}>
                        <i class="fas fa-trash"></i>
                    </button>
                </div>
            </td>
        `;
        tbody.appendChild(row);
    });
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ä–æ–ª–∏
function openRoleModal() {
    document.getElementById('role-modal').style.display = 'block';
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ä–æ–ª–∏
function closeRoleModal() {
    document.getElementById('role-modal').style.display = 'none';
    document.getElementById('role-form').reset();
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã —Ä–æ–ª–∏
async function handleRoleSubmit(e) {
    e.preventDefault();
    
    const formData = {
        name: document.getElementById('role-name').value,
        displayName: document.getElementById('role-display-name').value,
        description: document.getElementById('role-description').value,
        permissions: document.getElementById('role-permissions').value || '{}'
    };
    
    try {
        const adminToken = window.storage ? window.storage.getAdminToken() : adminToken;
        
        const response = await fetch(`${API_BASE_URL}/api/v1/admin/roles/`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${adminToken}`
            },
            body: JSON.stringify(formData)
        });
        
        const data = await response.json();
        
        if (response.ok && data.success) {
            if (window.ui && window.ui.showMessage) {
                window.ui.showMessage('–†–æ–ª—å —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!', 'success');
            }
            closeRoleModal();
            loadRoles();
        } else {
            if (window.ui && window.ui.showMessage) {
                window.ui.showMessage(data.message || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ–ª–∏', 'error');
            }
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ–ª–∏:', error);
        if (window.ui && window.ui.showMessage) {
            window.ui.showMessage('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ–ª–∏', 'error');
        }
    }
}

// –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–æ–ª–∏
async function viewRole(id) {
    try {
        const response = await window.api.fetchData(`/api/v1/admin/roles/${id}`);
        const role = response.data;
        
        if (window.ui && window.ui.showModal) {
            window.ui.showModal('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–æ–ª–∏', `
                <div style="padding: 20px;">
                    <h4>${role.displayName}</h4>
                    <p><strong>–ù–∞–∑–≤–∞–Ω–∏–µ:</strong> ${role.name}</p>
                    <p><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> ${role.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}</p>
                    <p><strong>–†–∞–∑—Ä–µ—à–µ–Ω–∏—è:</strong> ${role.permissions || '–ù–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π'}</p>
                    <p><strong>–°—Ç–∞—Ç—É—Å:</strong> ${role.isActive ? '–ê–∫—Ç–∏–≤–Ω–∞' : '–ù–µ–∞–∫—Ç–∏–≤–Ω–∞'}</p>
                    <p><strong>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —ç—Ç–æ–π —Ä–æ–ª—å—é:</strong> ${role.userCount || 0}</p>
                </div>
            `);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–æ–ª–∏:', error);
        if (window.ui && window.ui.showMessage) {
            window.ui.showMessage('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–æ–ª–∏', 'error');
        }
    }
}

// –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–æ–ª–∏
async function editRole(id) {
    console.log('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–æ–ª–∏:', id);
    if (window.ui && window.ui.showMessage) {
        window.ui.showMessage('–§—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–æ–ª–∏ –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞', 'info');
    }
}

// –£–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–∏
async function deleteRole(id) {
    if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É —Ä–æ–ª—å?')) {
        return;
    }
    
    try {
        await window.api.fetchData(`/api/v1/admin/roles/${id}`, {
            method: 'DELETE'
        });
        
        if (window.ui && window.ui.showMessage) {
            window.ui.showMessage('–†–æ–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞', 'success');
        }
        loadRoles();
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ä–æ–ª–∏:', error);
        if (window.ui && window.ui.showMessage) {
            window.ui.showMessage('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ä–æ–ª–∏', 'error');
        }
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç
window.roles = {
    loadRoles,
    displayRoles,
    openRoleModal,
    closeRoleModal,
    handleRoleSubmit,
    viewRole,
    editRole,
    deleteRole
};


