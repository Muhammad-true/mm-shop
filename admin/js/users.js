// ===== USERS.JS - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ =====

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
async function loadUsers() {
    console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    try {
        const response = await window.api.fetchData('/api/v1/admin/users/');
        console.log('üì° –û—Ç–≤–µ—Ç API –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', response);
        if (response.success) {
            console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ:', response.data.users);
            displayUsers(response.data.users);
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ API –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', response);
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
        if (window.ui && window.ui.showMessage) {
            window.ui.showMessage('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', 'error');
        }
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
function displayUsers(users) {
    console.log('üîç displayUsers –≤—ã–∑–≤–∞–Ω–∞ —Å –¥–∞–Ω–Ω—ã–º–∏:', users);
    
    const tbody = document.getElementById('users-table-body');
    console.log('üîç –ù–∞–π–¥–µ–Ω tbody:', tbody);
    
    if (!tbody) {
        console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç users-table-body –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        return;
    }

    tbody.innerHTML = '';
    
    if (!users || users.length === 0) {
        tbody.innerHTML = `
            <tr>
                <td colspan="7" class="text-center">
                    <div style="padding: 40px 20px;">
                        <i class="fas fa-users" style="font-size: 48px; color: #ccc; margin-bottom: 15px;"></i>
                        <div style="font-size: 18px; color: #666; margin-bottom: 10px;">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</div>
                        <div style="font-size: 14px; color: #999;">–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"</div>
                    </div>
                </td>
            </tr>
        `;
        return;
    }
    
    users.forEach((user, index) => {
        const row = document.createElement('tr');
        row.style.animationDelay = `${index * 0.1}s`;
        
        const rowHtml = `
            <td>
                <div style="display: flex; align-items: center; gap: 12px;">
                    <div style="width: 45px; height: 45px; border-radius: 50%; background: linear-gradient(135deg, #667eea, #764ba2); display: flex; align-items: center; justify-content: center; color: white; font-weight: bold; font-size: 18px;">
                        ${user.name ? user.name.charAt(0).toUpperCase() : 'U'}
                    </div>
                    <div>
                        <div style="font-weight: 700; color: #333; font-size: 15px;">${user.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                        <div style="font-size: 11px; color: #888; font-family: monospace;">${user.id ? user.id.substring(0, 8) + '...' : 'N/A'}</div>
                    </div>
                </div>
            </td>
            <td>
                <div style="display: flex; align-items: center; gap: 10px;">
                    <i class="fas fa-envelope" style="color: #667eea;"></i>
                    <span>${user.email || 'N/A'}</span>
                </div>
            </td>
            <td>
                <div style="display: flex; align-items: center; gap: 10px;">
                    <i class="fas fa-phone" style="color: #4ecdc4;"></i>
                    <span>${user.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                </div>
            </td>
            <td>
                <span class="badge role-${user.role?.name || 'user'}">
                    <i class="fas fa-user-shield"></i>
                    ${user.role?.displayName || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
                </span>
            </td>
            <td>
                <span class="badge ${user.isActive ? 'role-user' : 'role-admin'}" style="background: ${user.isActive ? 'linear-gradient(135deg, #4ecdc4, #44a08d)' : 'linear-gradient(135deg, #ff6b6b, #ee5a24)'};">
                    <i class="fas ${user.isActive ? 'fa-check-circle' : 'fa-times-circle'}"></i>
                    ${user.isActive ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}
                </span>
            </td>
            <td>
                <div style="display: flex; align-items: center; gap: 8px;">
                    <i class="fas fa-calendar" style="color: #f093fb;"></i>
                    <span style="font-size: 13px; color: #666;">
                        ${user.createdAt ? new Date(user.createdAt).toLocaleDateString('ru-RU', { day: '2-digit', month: '2-digit', year: 'numeric' }) : 'N/A'}
                    </span>
                </div>
            </td>
            <td>
                <div style="display: flex; gap: 6px;">
                    <button class="btn-sm btn-primary" onclick="window.users.viewUser('${user.id}')" title="–ü—Ä–æ—Å–º–æ—Ç—Ä">
                        <i class="fas fa-eye"></i>
                    </button>
                    <button class="btn-sm btn-secondary" onclick="window.users.editUser('${user.id}')" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">
                        <i class="fas fa-edit"></i>
                    </button>
                    <button class="btn-sm btn-danger" onclick="window.users.deleteUser('${user.id}')" title="–£–¥–∞–ª–∏—Ç—å">
                        <i class="fas fa-trash"></i>
                    </button>
                </div>
            </td>
        `;
        
        row.innerHTML = rowHtml;
        tbody.appendChild(row);
    });
    
    console.log('‚úÖ displayUsers –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
}

// –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function viewUser(id) {
    try {
        const response = await window.api.fetchData(`/api/v1/admin/users/${id}`);
        const user = response.data;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        if (window.ui && window.ui.showModal) {
            window.ui.showModal('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ', `
                <div class="user-details-modal">
                    <div class="user-avatar-large">
                        ${user.avatar ? `<img src="${user.avatar}" alt="${user.name}">` : `<i class="fas fa-user-circle"></i>`}
                    </div>
                    <div class="user-info-grid">
                        <div class="info-item">
                            <label>–ò–º—è:</label>
                            <span>${user.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
                        </div>
                        <div class="info-item">
                            <label>Email:</label>
                            <span>${user.email}</span>
                        </div>
                        <div class="info-item">
                            <label>–¢–µ–ª–µ—Ñ–æ–Ω:</label>
                            <span>${user.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                        </div>
                        <div class="info-item">
                            <label>–†–æ–ª—å:</label>
                            <span>${user.role?.displayName || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}</span>
                        </div>
                        <div class="info-item">
                            <label>–°—Ç–∞—Ç—É—Å:</label>
                            <span>${user.isActive ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}</span>
                        </div>
                        <div class="info-item">
                            <label>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</label>
                            <span>${new Date(user.created_at).toLocaleString()}</span>
                        </div>
                    </div>
                </div>
            `);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        if (window.ui && window.ui.showMessage) {
            window.ui.showMessage('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'error');
        }
    }
}

// –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function editUser(id) {
    try {
        const response = await window.api.fetchData(`/api/v1/admin/users/${id}`);
        const user = response.data;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        const modal = document.createElement('div');
        modal.className = 'modal';
        modal.style.display = 'block';
        
        modal.innerHTML = `
            <div class="modal-content" style="max-width: 500px;">
                <div class="modal-header">
                    <h3><i class="fas fa-edit"></i> –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h3>
                    <span class="close" onclick="this.closest('.modal').remove()">&times;</span>
                </div>
                <form id="edit-user-form">
                    <div class="form-group">
                        <label>–ò–º—è</label>
                        <input type="text" id="edit-user-name" value="${user.name || ''}" class="form-input">
                    </div>
                    <div class="form-group">
                        <label>Email</label>
                        <input type="email" id="edit-user-email" value="${user.email}" class="form-input" readonly>
                    </div>
                    <div class="form-group">
                        <label>–¢–µ–ª–µ—Ñ–æ–Ω</label>
                        <input type="tel" id="edit-user-phone" value="${user.phone || ''}" class="form-input">
                    </div>
                    <div class="form-group">
                        <label>–†–æ–ª—å</label>
                        <select id="edit-user-role" class="form-input">
                            <option value="user" ${user.role === 'user' ? 'selected' : ''}>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</option>
                            <option value="moderator" ${user.role === 'moderator' ? 'selected' : ''}>–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä</option>
                            <option value="admin" ${user.role === 'admin' ? 'selected' : ''}>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label>
                            <input type="checkbox" id="edit-user-active" ${user.isActive ? 'checked' : ''}>
                            –ê–∫—Ç–∏–≤–µ–Ω
                        </label>
                    </div>
                    <div class="modal-actions">
                        <button type="submit" class="btn btn-primary">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                        <button type="button" class="btn btn-secondary" onclick="this.closest('.modal').remove()">–û—Ç–º–µ–Ω–∞</button>
                    </div>
                </form>
            </div>
        `;
        
        document.body.appendChild(modal);
        
        document.getElementById('edit-user-form').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const formData = {
                name: document.getElementById('edit-user-name').value,
                phone: document.getElementById('edit-user-phone').value,
                role: document.getElementById('edit-user-role').value,
                isActive: document.getElementById('edit-user-active').checked
            };
            
            try {
                await window.api.fetchData(`/api/v1/admin/users/${id}`, {
                    method: 'PUT',
                    body: JSON.stringify(formData)
                });
                
                if (window.ui && window.ui.showMessage) {
                    window.ui.showMessage('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω', 'success');
                }
                document.querySelector('.modal').remove();
                loadUsers();
                
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
                if (window.ui && window.ui.showMessage) {
                    window.ui.showMessage('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'error');
                }
            }
        });
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        if (window.ui && window.ui.showMessage) {
            window.ui.showMessage('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'error');
        }
    }
}

// –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function deleteUser(id) {
    if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) {
        return;
    }
    
    try {
        await window.api.fetchData(`/api/v1/admin/users/${id}`, {
            method: 'DELETE'
        });
        
        if (window.ui && window.ui.showMessage) {
            window.ui.showMessage('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω', 'success');
        }
        loadUsers();
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        if (window.ui && window.ui.showMessage) {
            window.ui.showMessage('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'error');
        }
    }
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function openUserModal() {
    document.getElementById('user-modal').style.display = 'block';
    loadRolesForSelect();
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function closeUserModal() {
    document.getElementById('user-modal').style.display = 'none';
    document.getElementById('user-form').reset();
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–æ–ª–µ–π –¥–ª—è —Å–µ–ª–µ–∫—Ç–∞
async function loadRolesForSelect() {
    try {
        console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–æ–ª–∏ –¥–ª—è —Å–µ–ª–µ–∫—Ç–∞...');
        const response = await window.api.fetchData('/api/v1/admin/roles/');
        
        if (response.success && response.data && response.data.roles) {
            const roleSelect = document.getElementById('modal-user-role');
            
            if (roleSelect) {
                roleSelect.innerHTML = '<option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å</option>';
                
                response.data.roles.forEach(role => {
                    const option = document.createElement('option');
                    option.value = role.id;
                    option.textContent = role.displayName || role.name;
                    roleSelect.appendChild(option);
                });
                
                console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${response.data.roles.length} —Ä–æ–ª–µ–π –≤ —Å–µ–ª–µ–∫—Ç`);
            }
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–æ–ª–µ–π –¥–ª—è —Å–µ–ª–µ–∫—Ç–∞:', error);
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function handleUserSubmit(e) {
    e.preventDefault();
    
    const formData = {
        name: document.getElementById('modal-user-name').value,
        email: document.getElementById('modal-user-email').value,
        password: document.getElementById('modal-user-password').value,
        phone: document.getElementById('modal-user-phone').value,
        isActive: document.getElementById('user-active').checked
    };
    
    const roleId = document.getElementById('modal-user-role').value;
    if (roleId) {
        formData.roleId = roleId;
    }
    
    try {
        const adminToken = window.storage ? window.storage.getAdminToken() : adminToken;
        
        const response = await fetch(`${API_BASE_URL}/api/v1/admin/users/`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${adminToken}`
            },
            body: JSON.stringify(formData)
        });
        
        const data = await response.json();
        
        if (response.ok && data.success) {
            if (window.ui && window.ui.showMessage) {
                window.ui.showMessage('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!', 'success');
            }
            closeUserModal();
            loadUsers();
        } else {
            if (window.ui && window.ui.showMessage) {
                window.ui.showMessage(data.message || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'error');
            }
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        if (window.ui && window.ui.showMessage) {
            window.ui.showMessage('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'error');
        }
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç
window.users = {
    loadUsers,
    displayUsers,
    viewUser,
    editUser,
    deleteUser,
    openUserModal,
    closeUserModal,
    loadRolesForSelect,
    handleUserSubmit
};

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
window.openUserModal = openUserModal;
window.closeUserModal = closeUserModal;

