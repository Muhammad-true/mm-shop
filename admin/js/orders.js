// ===== ORDERS.JS - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏ =====

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∑–∞–∫–∞–∑–æ–≤
let currentOrdersPage = 1;
let currentOrdersFilters = {};
let ordersStats = {};

// –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–∫–∞–∑–æ–≤
async function loadOrders(page = 1, filters = {}) {
    try {
        currentOrdersPage = page;
        currentOrdersFilters = filters;
        // –°–±—Ä–æ—Å –∫—ç—à–∞ –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –º–∞–≥–∞–∑–∏–Ω–æ–≤ –∏ –æ—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –ø–µ—Ä–µ–¥ –Ω–æ–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π
        window.shopOwners = undefined;
        const container = document.getElementById('orders-table');
        if (container) {
            container.innerHTML = '<p style="text-align:center;padding:20px;color:#777;">–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–∫–∞–∑–æ–≤...</p>';
        }

        const userRole = localStorage.getItem('userRole') || 'admin';
        console.log('üîç –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤:', userRole);
        
        let endpoint;
        if (userRole === 'super_admin' || userRole === 'admin') {
            endpoint = '/api/v1/admin/orders';
            console.log('üëë –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –∑–∞–∫–∞–∑–æ–≤');
        } else if (userRole === 'shop_owner') {
            endpoint = '/api/v1/shop/orders/';
            console.log('üè™ –ò—Å–ø–æ–ª—å–∑—É–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç –≤–ª–∞–¥–µ–ª—å—Ü–∞ –º–∞–≥–∞–∑–∏–Ω–∞ –¥–ª—è –∑–∞–∫–∞–∑–æ–≤');
        } else {
            endpoint = '/api/v1/admin/orders';
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
        const params = new URLSearchParams({
            page: page,
            limit: 20,
            ...filters
        });
        
        const fullEndpoint = `${endpoint}?${params.toString()}`;
        console.log('üì° –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–∫–∞–∑–æ–≤:', fullEndpoint);
        
        const response = await window.api.fetchData(fullEndpoint);
        console.log('üì¶ –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', response);
        console.log('üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:', {
            success: response.success,
            hasData: !!response.data,
            ordersCount: response.data?.orders?.length || 0,
            pagination: response.data?.pagination
        });
        
        if (response.data) {
            if (response.data.shop_owners) {
                window.shopOwners = response.data.shop_owners;
            }
            const orders = response.data.orders || [];
            console.log('‚úÖ –ó–∞–∫–∞–∑–æ–≤ –∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—é:', orders.length);
            
            // –õ–æ–≥–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            if (orders.length > 0) {
                console.log('üìã –ü—Ä–∏–º–µ—Ä –ø–µ—Ä–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞:', {
                    id: orders[0].id,
                    user_id: orders[0].user_id,
                    items_count: orders[0].order_items?.length || 0,
                    total: orders[0].total_amount
                });
            }
            
            displayOrders(orders, response.data.pagination, response.data.stats);
        } else {
            console.warn('‚ö†Ô∏è response.data –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!');
            displayOrders([], {}, {});
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤:', error);
        if (window.ui && window.ui.showMessage) {
            window.ui.showMessage('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤: ' + error.message, 'error');
        }
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤
function displayOrders(orders, pagination = {}, stats = {}) {
    console.log('üìä –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤:', {
        ordersCount: orders.length,
        pagination: pagination,
        stats: stats
    });
    
    const container = document.getElementById('orders-table');
    
    if (!container) {
        console.warn('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä orders-table –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }
    
    ordersStats = stats;
    
    if (orders.length === 0) {
        container.innerHTML = `
            <p style="text-align: center; padding: 40px;">–ó–∞–∫–∞–∑–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>
        `;
        return;
    }
    
    const statusLabels = {
        'pending': '–û–∂–∏–¥–∞–µ—Ç',
        'confirmed': '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω',
        'preparing': '–ì–æ—Ç–æ–≤–∏—Ç—Å—è',
        'inDelivery': '–í –¥–æ—Å—Ç–∞–≤–∫–µ',
        'delivered': '–î–æ—Å—Ç–∞–≤–ª–µ–Ω',
        'completed': '–ó–∞–≤–µ—Ä—à–µ–Ω',
        'cancelled': '–û—Ç–º–µ–Ω–µ–Ω'
    };
    
    const table = `
        <div style="background: white; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); overflow: hidden;">
            <table class="data-table">
                <thead>
                    <tr>
                        <th>‚Ññ –ó–∞–∫–∞–∑–∞</th>
                        <th>–ö–ª–∏–µ–Ω—Ç</th>
                        <th>–¢–µ–ª–µ—Ñ–æ–Ω</th>
                        <th>–ú–∞–≥–∞–∑–∏–Ω</th>
                        <th>–¢–æ–≤–∞—Ä—ã</th>
                        <th>–°—É–º–º–∞</th>
                        <th>–°—Ç–∞—Ç—É—Å</th>
                        <th>–î–∞—Ç–∞</th>
                        <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                    </tr>
                </thead>
                <tbody>
                    ${orders.map(order => `
                        <tr>
                            <td><strong>${order.order_number || order.id?.substring(0, 8)}</strong></td>
                            <td>
                                <div>
                                    <div><strong>${order.recipient_name || order.user?.name || 'N/A'}</strong></div>
                                    ${order.user?.is_guest ? '<small style="color: #999;">üé≠ –ì–æ—Å—Ç—å</small>' : ''}
                                </div>
                            </td>
                            <td><a href="tel:${order.phone}" style="color: #667eea;">${order.phone}</a></td>
                            <td>
                                <div>
                                    <div><strong>${order.shop_owner?.name || 'N/A'}</strong></div>
                                    <small style="color: #999;">${order.shop_owner?.phone || ''}</small>
                                </div>
                            </td>
                            <td>${order.order_items?.length || 0} —à—Ç.</td>
                            <td><strong>${order.total_amount || 0} ${order.currency || 'TJS'}</strong></td>
                            <td>
                                <span class="status-badge ${order.status}" style="padding: 5px 10px; border-radius: 12px; font-size: 12px; font-weight: 600;">
                                    ${statusLabels[order.status] || order.status}
                                </span>
                            </td>
                            <td>${new Date(order.created_at).toLocaleString('ru-RU', {day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit'})}</td>
                            <td>
                                <div class="action-buttons" style="display: flex; gap: 5px;">
                                    <button class="action-btn view" onclick="viewOrderDetails('${order.id}')" title="–ü—Ä–æ—Å–º–æ—Ç—Ä">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <button class="action-btn edit" onclick="changeOrderStatus('${order.id}')" title="–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    ${order.status === 'pending' ? `
                                        <button class="action-btn success" onclick="confirmOrder('${order.id}')" title="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å">
                                            <i class="fas fa-check"></i>
                                        </button>
                                        <button class="action-btn danger" onclick="rejectOrder('${order.id}')" title="–û—Ç–∫–ª–æ–Ω–∏—Ç—å">
                                            <i class="fas fa-times"></i>
                                        </button>
                                    ` : ''}
                                </div>
                            </td>
                        </tr>
                    `).join('')}
                </tbody>
            </table>
        </div>
        ${pagination.totalPages > 1 ? createPagination(pagination) : ''}
    `;
    
    container.innerHTML = table;
}

// –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
function createPagination(pagination) {
    const { page, totalPages } = pagination;
    let pages = '';
    
    for (let i = 1; i <= totalPages; i++) {
        if (i === page) {
            pages += `<button class="pagination-btn active">${i}</button>`;
        } else if (i === 1 || i === totalPages || (i >= page - 2 && i <= page + 2)) {
            pages += `<button class="pagination-btn" onclick="window.orders.loadOrders(${i}, currentOrdersFilters)">${i}</button>`;
        } else if (i === page - 3 || i === page + 3) {
            pages += `<span>...</span>`;
        }
    }
    
    return `
        <div class="pagination" style="display: flex; justify-content: center; gap: 5px; margin-top: 20px; padding: 20px;">
            ${page > 1 ? `<button class="pagination-btn" onclick="window.orders.loadOrders(${page - 1}, currentOrdersFilters)"><i class="fas fa-chevron-left"></i></button>` : ''}
            ${pages}
            ${page < totalPages ? `<button class="pagination-btn" onclick="window.orders.loadOrders(${page + 1}, currentOrdersFilters)"><i class="fas fa-chevron-right"></i></button>` : ''}
        </div>
    `;
}

// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
async function confirmOrder(orderId) {
    if (!confirm('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —ç—Ç–æ—Ç –∑–∞–∫–∞–∑?')) return;
    
    try {
        const userRole = localStorage.getItem('userRole') || 'admin';
        let endpoint, method, body;
        
        if (userRole === 'shop_owner') {
            // –í–ª–∞–¥–µ–ª–µ—Ü –º–∞–≥–∞–∑–∏–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç PUT /shop/orders/:id/status
            endpoint = `/api/v1/shop/orders/${orderId}/status`;
            method = 'PUT';
            body = JSON.stringify({ status: 'confirmed' });
        } else {
            // –ê–¥–º–∏–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç POST /admin/orders/:id/confirm
            endpoint = `/api/v1/admin/orders/${orderId}/confirm`;
            method = 'POST';
            body = null;
        }
        
        const response = await window.api.fetchData(endpoint, {
            method: method,
            body: body
        });
        
        if (response.success) {
            if (window.ui && window.ui.showMessage) {
                window.ui.showMessage('–ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!', 'success');
            }
            loadOrders(currentOrdersPage, currentOrdersFilters);
        } else {
            if (window.ui && window.ui.showMessage) {
                window.ui.showMessage(response.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞', 'error');
            }
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        if (window.ui && window.ui.showMessage) {
            window.ui.showMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞', 'error');
        }
    }
}

// –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
async function rejectOrder(orderId) {
    if (!confirm('–û—Ç–∫–ª–æ–Ω–∏—Ç—å —ç—Ç–æ—Ç –∑–∞–∫–∞–∑?')) return;
    
    try {
        const userRole = localStorage.getItem('userRole') || 'admin';
        let endpoint, method, body;
        
        if (userRole === 'shop_owner') {
            // –í–ª–∞–¥–µ–ª–µ—Ü –º–∞–≥–∞–∑–∏–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç PUT /shop/orders/:id/status
            endpoint = `/api/v1/shop/orders/${orderId}/status`;
            method = 'PUT';
            body = JSON.stringify({ status: 'cancelled' });
        } else {
            // –ê–¥–º–∏–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç POST /admin/orders/:id/reject
            endpoint = `/api/v1/admin/orders/${orderId}/reject`;
            method = 'POST';
            body = null;
        }
        
        const response = await window.api.fetchData(endpoint, {
            method: method,
            body: body
        });
        
        if (response.success) {
            if (window.ui && window.ui.showMessage) {
                window.ui.showMessage('–ó–∞–∫–∞–∑ –æ—Ç–∫–ª–æ–Ω–µ–Ω', 'success');
            }
            loadOrders(currentOrdersPage, currentOrdersFilters);
        } else {
            if (window.ui && window.ui.showMessage) {
                window.ui.showMessage(response.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞', 'error');
            }
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        if (window.ui && window.ui.showMessage) {
            window.ui.showMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞', 'error');
        }
    }
}

// –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞
async function viewOrderDetails(orderId) {
    try {
        const response = await window.api.fetchData(`/api/v1/admin/orders/${orderId}`);
        
        if (response.data) {
            const order = response.data;
            
            const statusLabels = {
                'pending': '–û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è',
                'confirmed': '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω',
                'preparing': '–ì–æ—Ç–æ–≤–∏—Ç—Å—è',
                'inDelivery': '–í –¥–æ—Å—Ç–∞–≤–∫–µ',
                'delivered': '–î–æ—Å—Ç–∞–≤–ª–µ–Ω',
                'completed': '–ó–∞–≤–µ—Ä—à–µ–Ω',
                'cancelled': '–û—Ç–º–µ–Ω–µ–Ω'
            };
            
            const itemsHTML = order.order_items?.map(item => `
                <tr>
                    <td>${item.name || 'N/A'}</td>
                    <td>${item.size || '-'}</td>
                    <td>${item.color || '-'}</td>
                    <td>${item.quantity}</td>
                    <td>${item.price} ${order.currency || 'TJS'}</td>
                    <td><strong>${item.subtotal || (item.price * item.quantity)} ${order.currency || 'TJS'}</strong></td>
                </tr>
            `).join('') || '<tr><td colspan="6">–ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤</td></tr>';
            
            if (window.ui && window.ui.showModal) {
                window.ui.showModal('–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞', `
                    <div style="max-height: 70vh; overflow-y: auto; padding: 20px;">
                        <h3 style="margin-bottom: 20px;">–ó–∞–∫–∞–∑ ‚Ññ${order.order_number || order.id?.substring(0, 8)}</h3>
                        
                        <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 20px;">
                            <div>
                                <h4>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ</h4>
                                <p><strong>–ò–º—è:</strong> ${order.recipient_name || 'N/A'}</p>
                                <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> <a href="tel:${order.phone}">${order.phone}</a></p>
                                <p><strong>–ê–¥—Ä–µ—Å:</strong> ${order.shipping_address || 'N/A'}</p>
                                ${order.notes ? `<p><strong>–ü—Ä–∏–º–µ—á–∞–Ω–∏—è:</strong> ${order.notes}</p>` : ''}
                            </div>
                            <div>
                                <h4>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ</h4>
                                <p><strong>–°—Ç–∞—Ç—É—Å:</strong> <span class="status-badge ${order.status}">${statusLabels[order.status] || order.status}</span></p>
                                <p><strong>–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:</strong> ${order.payment_method === 'cash' ? '–ù–∞–ª–∏—á–Ω—ã–µ' : '–ö–∞—Ä—Ç–∞'}</p>
                                <p><strong>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:</strong> ${new Date(order.created_at).toLocaleString('ru-RU')}</p>
                            </div>
                        </div>
                        
                        <h4>–¢–æ–≤–∞—Ä—ã –≤ –∑–∞–∫–∞–∑–µ</h4>
                        <table class="data-table" style="margin-bottom: 20px;">
                            <thead>
                                <tr>
                                    <th>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
                                    <th>–†–∞–∑–º–µ—Ä</th>
                                    <th>–¶–≤–µ—Ç</th>
                                    <th>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</th>
                                    <th>–¶–µ–Ω–∞</th>
                                    <th>–°—É–º–º–∞</th>
                                </tr>
                            </thead>
                            <tbody>
                                ${itemsHTML}
                            </tbody>
                        </table>
                        
                        <div style="text-align: right; padding: 15px; background: #f5f5f5; border-radius: 8px;">
                            <p><strong>–°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–æ–≤:</strong> ${order.items_subtotal || 0} ${order.currency || 'TJS'}</p>
                            <p><strong>–î–æ—Å—Ç–∞–≤–∫–∞:</strong> ${order.delivery_fee || 0} ${order.currency || 'TJS'}</p>
                            <h3 style="margin-top: 10px; color: #667eea;"><strong>–ò—Ç–æ–≥–æ:</strong> ${order.total_amount || 0} ${order.currency || 'TJS'}</h3>
                        </div>
                    </div>
                `);
            }
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞:', error);
        if (window.ui && window.ui.showMessage) {
            window.ui.showMessage('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞', 'error');
        }
    }
}

// –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
async function changeOrderStatus(orderId) {
    try {
        const userRole = localStorage.getItem('userRole') || 'admin';
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º endpoint –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
        let getOrderEndpoint;
        if (userRole === 'shop_owner') {
            getOrderEndpoint = `/api/v1/shop/orders/${orderId}`;
        } else {
            getOrderEndpoint = `/api/v1/admin/orders/${orderId}`;
        }
        
        const response = await window.api.fetchData(getOrderEndpoint);
        const order = response.data;
        
        const statusOptions = {
            pending: '–û–∂–∏–¥–∞–µ—Ç',
            confirmed: '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω',
            preparing: '–ì–æ—Ç–æ–≤–∏—Ç—Å—è',
            inDelivery: '–í –¥–æ—Å—Ç–∞–≤–∫–µ',
            delivered: '–î–æ—Å—Ç–∞–≤–ª–µ–Ω',
            completed: '–ó–∞–≤–µ—Ä—à–µ–Ω',
            cancelled: '–û—Ç–º–µ–Ω–µ–Ω'
        };
        
        const statusKeys = Object.keys(statusOptions);
        
        const modal = document.createElement('div');
        modal.className = 'modal';
        modal.style.display = 'block';
        
        modal.innerHTML = `
            <div class="modal-content" style="max-width: 500px;">
                <div class="modal-header">
                    <h3><i class="fas fa-edit"></i> –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞</h3>
                    <span class="close" onclick="this.closest('.modal').remove()">&times;</span>
                </div>
                <div style="padding: 20px;">
                    <p><strong>–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:</strong> ${statusOptions[order.status] || order.status}</p>
                    <label for="new-status"><strong>–ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å:</strong></label>
                    <select id="new-status" class="form-input" style="width: 100%; margin: 10px 0;">
                        ${statusKeys.map(key => 
                            `<option value="${key}" ${key === order.status ? 'selected' : ''}>${statusOptions[key]}</option>`
                        ).join('')}
                    </select>
                </div>
                <div class="modal-actions">
                    <button type="button" class="btn btn-primary" onclick="saveOrderStatus('${orderId}')">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                    <button type="button" class="btn btn-secondary" onclick="this.closest('.modal').remove()">–û—Ç–º–µ–Ω–∞</button>
                </div>
            </div>
        `;
        
        document.body.appendChild(modal);
        
        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
        window.saveOrderStatus = async function(id) {
            const newStatus = document.getElementById('new-status').value;
            
            try {
                // –û–ø—Ä–µ–¥–µ–ª—è–µ–º endpoint –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
                let updateEndpoint;
                if (userRole === 'shop_owner') {
                    updateEndpoint = `/api/v1/shop/orders/${id}/status`;
                } else {
                    updateEndpoint = `/api/v1/admin/orders/${id}/status`;
                }
                
                const response = await window.api.fetchData(updateEndpoint, {
                    method: 'PUT',
                    body: JSON.stringify({ status: newStatus })
                });
                
                if (window.ui && window.ui.showMessage) {
                    window.ui.showMessage('–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω', 'success');
                }
                
                document.querySelector('.modal').remove();
                loadOrders(currentOrdersPage, currentOrdersFilters);
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:', error);
                if (window.ui && window.ui.showMessage) {
                    window.ui.showMessage('–û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞', 'error');
                }
            }
        };
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞:', error);
        if (window.ui && window.ui.showMessage) {
            window.ui.showMessage('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞', 'error');
        }
    }
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –¥–ª—è –∑–∞–∫–∞–∑–æ–≤
function setupOrderFilters() {
    const searchInput = document.getElementById('order-search');
    const statusFilter = document.getElementById('order-status-filter');
    const dateFromFilter = document.getElementById('order-date-from');
    const dateToFilter = document.getElementById('order-date-to');
    
    if (searchInput) {
        searchInput.addEventListener('input', () => applyOrderFilters());
    }
    
    if (statusFilter) {
        statusFilter.addEventListener('change', () => applyOrderFilters());
    }
    
    if (dateFromFilter) {
        dateFromFilter.addEventListener('change', () => applyOrderFilters());
    }
    
    if (dateToFilter) {
        dateToFilter.addEventListener('change', () => applyOrderFilters());
    }
    
    console.log('‚úÖ –§–∏–ª—å—Ç—Ä—ã –∑–∞–∫–∞–∑–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
}

// –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –¥–ª—è –∑–∞–∫–∞–∑–æ–≤
function applyOrderFilters() {
    const filters = {
        search: document.getElementById('order-search')?.value || '',
        status: document.getElementById('order-status-filter')?.value || '',
        dateFrom: document.getElementById('order-date-from')?.value || '',
        dateTo: document.getElementById('order-date-to')?.value || ''
    };
    
    console.log('üîç –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∑–∞–∫–∞–∑–æ–≤:', filters);
    
    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–∫–∞–∑—ã —Å –Ω–æ–≤—ã–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
    loadOrders(1, filters);
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
window.loadOrders = loadOrders;

// –≠–∫—Å–ø–æ—Ä—Ç
window.orders = {
    loadOrders,
    displayOrders,
    confirmOrder,
    rejectOrder,
    viewOrderDetails,
    changeOrderStatus,
    createPagination,
    setupOrderFilters,
    applyOrderFilters
};

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
window.confirmOrder = confirmOrder;
window.rejectOrder = rejectOrder;
window.viewOrderDetails = viewOrderDetails;
window.changeOrderStatus = changeOrderStatus;

