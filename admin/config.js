// ===== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–ò =====

const CONFIG = {
  // === API –ù–ê–°–¢–†–û–ô–ö–ò ===
  API: {
    // –ë–∞–∑–æ–≤—ã–π URL –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    DEV_BASE_URL: '',  // –ü—É—Å—Ç–æ –¥–ª—è same-origin —á–µ—Ä–µ–∑ Nginx

    // –ë–∞–∑–æ–≤—ã–π URL –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ ‚Äî –ø—É—Å—Ç–æ, —á—Ç–æ–±—ã —Ö–æ–¥–∏—Ç—å –Ω–∞ —Ç–æ—Ç –∂–µ —Ö–æ—Å—Ç (same-origin)
    PROD_BASE_URL: '',

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä URL
    get BASE_URL() {
      // –í–µ–∑–¥–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –ø—É—Ç–∏, —á—Ç–æ–±—ã —Ö–æ–¥–∏—Ç—å —á–µ—Ä–µ–∑ Nginx
      return this.PROD_BASE_URL; // Same-origin —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏
    },

    // –≠–Ω–¥–ø–æ–∏–Ω—Ç—ã API
    ENDPOINTS: {
      AUTH: {
        LOGIN: '/api/v1/auth/login',
        PROFILE: '/api/v1/users/profile',
      },
      PRODUCTS: {
        LIST: '/api/v1/products/',
        SHOP_LIST: '/api/v1/shop/products/',
        CREATE: '/api/v1/shop/products/',
        UPDATE: (id) => `/api/v1/shop/products/${id}`,
        DELETE: (id) => `/api/v1/shop/products/${id}`,
        GET:    (id) => `/api/v1/products/${id}`,
      },
      CATEGORIES: {
        LIST: '/api/v1/categories/',
        CREATE: '/api/v1/admin/categories/',
        UPDATE: (id) => `/api/v1/admin/categories/${id}`,
        DELETE: (id) => `/api/v1/admin/categories/${id}`,
        GET:    (id) => `/api/v1/categories/${id}`,
      },
      USERS: {
        LIST: '/api/v1/admin/users/',
        CREATE: '/api/v1/admin/users/',
        UPDATE: (id) => `/api/v1/admin/users/${id}`,
        DELETE: (id) => `/api/v1/admin/users/${id}`,
        GET:    (id) => `/api/v1/admin/users/${id}`,
      },
      ROLES: {
        LIST: '/api/v1/admin/roles/',
        CREATE: '/api/v1/admin/roles/',
        UPDATE: (id) => `/api/v1/admin/roles/${id}`,
        DELETE: (id) => `/api/v1/admin/roles/${id}`,
        GET:    (id) => `/api/v1/admin/roles/${id}`,
      },
      ORDERS: {
        LIST: '/api/v1/admin/orders/', // —Å–æ —Å–ª–µ—à–µ–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å Go Gin
        SHOP_LIST: '/api/v1/shop/orders/',
      },
      UPLOAD: {
        IMAGE: '/api/v1/upload/image',
        DELETE_IMAGE: (filename) => `/api/v1/upload/image/${filename}`,
      },
      HEALTH: '/api/health',
    },
  },

  // === –ù–ê–°–¢–†–û–ô–ö–ò –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô ===
  IMAGES: {
    FOLDERS: {
      PRODUCTS: 'products',
      VARIATIONS: 'variations',
      CATEGORIES: 'categories',
      USERS: 'users',
    },
    MAX_FILE_SIZE: 10 * 1024 * 1024, // 10MB
    ALLOWED_TYPES: ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'],
    IP_REPLACEMENTS: { // –æ—Å—Ç–∞–≤–∏–º –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π; –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ getImageUrl
      '0.0.0.0': 'localhost',
      '127.0.0.1': 'localhost',
    },
  },

  // === –ù–ê–°–¢–†–û–ô–ö–ò –°–ï–°–°–ò–ò ===
  SESSION: {
    TOKEN_LIFETIME: 24 * 60 * 60 * 1000, // 24 —á–∞—Å–∞
    STORAGE_KEYS: {
      TOKEN: 'adminToken',
      USER_ROLE: 'userRole',
      USER_DATA: 'userData',
      LAST_ACTIVITY: 'lastActivity',
      API_URL: 'api_url',
    },
  },

  // === –ù–ê–°–¢–†–û–ô–ö–ò UI ===
  UI: {
    ANIMATION_DELAYS: { TAB_SWITCH: 150, DATA_LOAD: 100, PRODUCTS_LOAD: 200 },
    MOBILE: { MIN_BUTTON_SIZE: 44, FONT_SIZE: 16 },
  },

  // === –ù–ê–°–¢–†–û–ô–ö–ò –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø ===
  LOGGING: {
    ENABLED: true,
    LEVELS: { ERROR:'‚ùå', WARNING:'‚ö†Ô∏è', INFO:'‚ÑπÔ∏è', SUCCESS:'‚úÖ', DEBUG:'üîç' },
  },
};

// ===== –£–¢–ò–õ–ò–¢–´ =====

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
function log(level, message, data = null) {
  if (!CONFIG.LOGGING.ENABLED) return;
  const prefix = CONFIG.LOGGING.LEVELS[level] || '‚ÑπÔ∏è';
  const timestamp = new Date().toLocaleTimeString();
  data ? console.log(`${prefix} [${timestamp}] ${message}`, data)
       : console.log(`${prefix} [${timestamp}] ${message}`);
}

// –ö–∞—Ä—Ç–∏–Ω–∫–∞: –í–°–ï–ì–î–ê same-origin (–æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å)
window.getImageUrl = function(url) {
  if (!url) return '';

  // –ï—Å–ª–∏ –∞–±—Å–æ–ª—é—Ç–Ω—ã–π URL —Å /images/ ‚Äî –æ—Å—Ç–∞–≤–∏–º —Ç–æ–ª—å–∫–æ –ø—É—Ç—å
  const m = String(url).match(/^https?:\/\/[^/]+(?::\d+)?(\/images\/.+)$/i);
  if (m) return m[1];

  // –ï—Å–ª–∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º / –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
  if (!/^https?:\/\//i.test(url)) {
    return url.startsWith('/') ? url : '/' + url;
  }

  // –°—Ä–µ–∂–µ–º ¬´–ø–ª–æ—Ö–∏–µ¬ª —Ö–æ—Å—Ç—ã —É /images/, –≤–∫–ª—é—á–∞—è –ø–æ—Ä—Ç 3000
  let imageUrl = url;
  ['http://0.0.0.0:8080','http://127.0.0.1:8080','http://localhost:8080','http://localhost','https://localhost',
   'http://159.89.99.252:3000','http://159.89.99.252:8080']
    .forEach((h) => { if (imageUrl.startsWith(h + '/images/')) imageUrl = imageUrl.replace(h, ''); });

  return imageUrl;
};

// URL –¥–ª—è API
window.getApiUrl = function(endpoint) {
  return (CONFIG.API.BASE_URL || '') + endpoint;
};

// –≠–∫—Å–ø–æ—Ä—Ç
window.CONFIG = CONFIG;
window.log = log;

// –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –ª–æ–≥
log('INFO', '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞', {
  baseUrl: CONFIG.API.BASE_URL,
  environment: (location.hostname === 'localhost' || location.hostname === '127.0.0.1') ? 'development' : 'production',
});
