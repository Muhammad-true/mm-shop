// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥
let API_BASE_URL = CONFIG.API.BASE_URL;
let currentProductId = null;
let currentCategoryId = null;
let adminToken = null;
let userRole = null;

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
let uploadedImages = [];
let imageUrls = [];

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –≤–∞—Ä–∏–∞—Ü–∏–π
let variations = [];

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ MM Admin Panel v3.0 –∑–∞–≥—Ä—É–∂–µ–Ω–∞!');
    console.log('üìÖ –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏:', new Date().toLocaleString());
    console.log('üåê User Agent:', navigator.userAgent);
    initializeApp();
});

// –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
async function initializeApp() {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏...');
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω –∏ —Ä–æ–ª—å
    adminToken = localStorage.getItem('adminToken');
    userRole = localStorage.getItem('userRole');
    
    console.log('üîë –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω:', adminToken ? '–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
    console.log('üë§ –ó–∞–≥—Ä—É–∂–µ–Ω–Ω–∞—è —Ä–æ–ª—å:', userRole);
    console.log('üîç localStorage adminToken:', localStorage.getItem('adminToken'));
    console.log('üîç localStorage userRole:', localStorage.getItem('userRole'));
    console.log('üîç localStorage lastActivity:', localStorage.getItem('lastActivity'));
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–∫–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∏ –≤—Ä–µ–º—è –∂–∏–∑–Ω–∏
    if (adminToken && userRole) {
        console.log('üîë –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞...');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (24 —á–∞—Å–∞)
        const lastActivity = localStorage.getItem('lastActivity');
        const now = Date.now();
        const twentyFourHours = 24 * 60 * 60 * 1000; // 24 —á–∞—Å–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
        
        if (lastActivity && (now - parseInt(lastActivity)) > twentyFourHours) {
            console.log('‚è∞ –¢–æ–∫–µ–Ω –∏—Å—Ç–µ–∫ (–ø—Ä–æ—à–ª–æ –±–æ–ª—å—à–µ 24 —á–∞—Å–æ–≤), –æ—á–∏—â–∞–µ–º...');
            localStorage.removeItem('adminToken');
            localStorage.removeItem('userRole');
            localStorage.removeItem('lastActivity');
            adminToken = null;
            userRole = null;
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞
            document.getElementById('login-modal').style.display = 'flex';
            document.getElementById('admin-content').style.display = 'none';
    } else {
            try {
                console.log('üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º API –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å...');
                console.log('üîó URL:', `${API_BASE_URL}/api/v1/users/profile`);
                console.log('üîë –¢–æ–∫–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:', adminToken ? '–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω —á–µ—Ä–µ–∑ API
                const response = await fetch(getApiUrl(CONFIG.API.ENDPOINTS.AUTH.PROFILE), {
                    headers: {
                        'Authorization': `Bearer ${adminToken}`
                    }
                });
                
                console.log('üì° –û—Ç–≤–µ—Ç API:', response.status, response.statusText);
                
                if (response.ok) {
                    const data = await response.json();
                    console.log('‚úÖ –¢–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', data.data?.user);
                    console.log('üîç –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç API:', data);
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
                    localStorage.setItem('lastActivity', now.toString());
                    
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
                    document.getElementById('login-modal').style.display = 'none';
                    document.getElementById('admin-content').style.display = 'flex';
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                    console.log('üîÑ –í—ã–∑—ã–≤–∞–µ–º updateUserInfo —Å –¥–∞–Ω–Ω—ã–º–∏:', { user: data.data?.user, userRole });
                    updateUserInfo(data.data?.user, userRole);
                    setupNavigation(userRole);
                    loadSettings();
                    
                    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
                    setTimeout(() => {
                        loadDashboard(userRole);
                        loadInitialData(userRole);
                    }, 100);
                } else {
                    console.log('‚ùå –¢–æ–∫–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–µ–Ω, –æ—á–∏—â–∞–µ–º...');
                    // –¢–æ–∫–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–µ–Ω, –æ—á–∏—â–∞–µ–º
                    localStorage.removeItem('adminToken');
                    localStorage.removeItem('userRole');
                    localStorage.removeItem('lastActivity');
                    adminToken = null;
                    userRole = null;
                    
                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞
                    document.getElementById('login-modal').style.display = 'flex';
                    document.getElementById('admin-content').style.display = 'none';
                }
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞:', error);
                // –ü—Ä–∏ –æ—à–∏–±–∫–µ —Ç–æ–∂–µ –æ—á–∏—â–∞–µ–º
                localStorage.removeItem('adminToken');
                localStorage.removeItem('userRole');
                localStorage.removeItem('lastActivity');
                adminToken = null;
                userRole = null;
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞
                document.getElementById('login-modal').style.display = 'flex';
                document.getElementById('admin-content').style.display = 'none';
            }
        }
    } else {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞
        document.getElementById('login-modal').style.display = 'flex';
        document.getElementById('admin-content').style.display = 'none';
    }
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–æ—Ä–º
    setupLoginForm();
    setupForms();
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    setupMobileNavigation();
    // setupMobileTabbar(); // –û—Ç–∫–ª—é—á–µ–Ω–æ - —É–±–∏—Ä–∞–µ–º –Ω–∏–∂–Ω–∏–π —Ç–∞–±–±–∞—Ä
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
    setTimeout(() => {
        console.log('üîÑ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏...');
        setupMobileNavigation();
    }, 500);
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏
    setupResponsiveTables();
    optimizeForMobile();
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    setupFilters();
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    setupImageUpload();
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    testConnection();
    
    console.log('‚úÖ –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
}

// –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
function updateLastActivity() {
    localStorage.setItem('lastActivity', Date.now().toString());
    console.log('üïê –í—Ä–µ–º—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–æ');
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
function loadInitialData(userRole) {
    console.log('üìä –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–æ–ª–∏:', userRole);
    
    const roleName = typeof userRole === 'object' ? userRole.name : userRole;
    
    if (roleName === 'super_admin') {
        console.log('üî± –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—É–ø–µ—Ä –∞–¥–º–∏–Ω–∞...');
        loadCategories();
        loadUsers();
        loadRoles();
        loadProducts();
        loadOrders();
    } else if (roleName === 'admin') {
        console.log('üëë –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–¥–º–∏–Ω–∞...');
        loadCategories();
        loadUsers();
        loadProducts();
        loadOrders();
    } else if (roleName === 'shop_owner') {
        console.log('üè™ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –º–∞–≥–∞–∑–∏–Ω–∞...');
        loadProducts();
        loadOrders();
    } else {
        console.log('üë§ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
        loadCategories();
        loadProducts();
    }
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–æ—Ä–º—ã –≤—Ö–æ–¥–∞
function setupLoginForm() {
    const loginForm = document.getElementById('login-form');
    loginForm.addEventListener('submit', handleLogin);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥–∞
async function handleLogin(e) {
    e.preventDefault();
    
    const phone = document.getElementById('login-phone').value;
    const password = document.getElementById('login-password').value;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
    showMessage('–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ...', 'info');
    
    try {
        const response = await fetch(getApiUrl(CONFIG.API.ENDPOINTS.AUTH.LOGIN), {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ phone, password })
        });
        
        const data = await response.json();
        console.log('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', data);
        
        if (response.ok && data.success && data.data && data.data.token) {
            adminToken = data.data.token;
            // –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –∫–∞–∫ —Å—Ç—Ä–æ–∫—É –∏–∑ –æ–±—ä–µ–∫—Ç–∞ —Ä–æ–ª–∏
            userRole = data.data.user?.role?.name || 'user';
            console.log('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥, —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω, —Ä–æ–ª—å:', userRole);
            
            // –°–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
            document.getElementById('login-modal').style.display = 'none';
            document.getElementById('admin-content').style.display = 'flex';
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω, —Ä–æ–ª—å –∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            localStorage.setItem('adminToken', data.data.token);
            localStorage.setItem('userRole', userRole);
            localStorage.setItem('lastActivity', Date.now().toString());
            localStorage.setItem('userData', JSON.stringify(data.data.user));
            
            console.log('üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ localStorage:');
            console.log('  - adminToken:', localStorage.getItem('adminToken') ? '–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
            console.log('  - userRole:', localStorage.getItem('userRole'));
            console.log('  - lastActivity:', localStorage.getItem('lastActivity'));
            console.log('  - userData:', localStorage.getItem('userData'));
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            updateUserInfo(data.data.user, userRole);
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–∞–Ω–µ–ª—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
            setupNavigation(userRole);
            loadSettings();
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–æ—Ä–º
            setupForms();
            setupFilters();
            
                // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    setupMobileNavigation();
    // setupMobileTabbar(); // –û—Ç–∫–ª—é—á–µ–Ω–æ - —É–±–∏—Ä–∞–µ–º –Ω–∏–∂–Ω–∏–π —Ç–∞–±–±–∞—Ä
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π, —á—Ç–æ–±—ã —Ç–æ–∫–µ–Ω —É—Å–ø–µ–ª —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è
            setTimeout(() => {
                console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞...');
                console.log('üë§ –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userRole);
                
                loadDashboard(userRole);
                
                // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
                const roleName = typeof userRole === 'object' ? userRole.name : userRole;
                
                if (roleName === 'super_admin') {
                    console.log('üî± –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—É–ø–µ—Ä –∞–¥–º–∏–Ω–∞...');
                    loadCategories();
                    loadUsers();
                    loadRoles();
                    loadProducts();
                    loadOrders();
                } else if (roleName === 'admin') {
                    console.log('üëë –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–¥–º–∏–Ω–∞...');
                    loadCategories();
                    loadUsers();
                    loadProducts();
                    loadOrders();
                } else if (roleName === 'shop_owner') {
                    console.log('üè™ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –º–∞–≥–∞–∑–∏–Ω–∞...');
                    loadProducts();
                    loadOrders();
                } else {
                    console.log('üë§ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
                    loadCategories();
                    loadProducts();
                }
            }, 100);
            
            const roleText = (userRole === 'super_admin' || userRole === 'admin') ? '–∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å' : '–ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–æ–º';
            showMessage(`–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –≤ ${roleText}!`, 'success');
        } else {
            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –æ—à–∏–±–æ–∫
            let errorMessage = '–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å';
            
            if (response.status === 401) {
                errorMessage = '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.';
            } else if (response.status === 403) {
                errorMessage = 'üö´ –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏.';
            } else if (response.status === 429) {
                errorMessage = '‚è≥ –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
            } else if (response.status >= 500) {
                errorMessage = 'üîß –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.';
            } else if (data.message) {
                errorMessage = data.message;
            } else if (data.error) {
                errorMessage = data.error;
            }
            
            showMessage(errorMessage, 'error');
            
            // –í—Å—Ç—Ä—è—Ö–∏–≤–∞–µ–º —Ñ–æ—Ä–º—É –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞
            const loginModal = document.getElementById('login-modal');
            loginModal.classList.add('shake');
            setTimeout(() => loginModal.classList.remove('shake'), 600);
        }
        } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', error);
        let errorMessage = '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É.';
        
        if (error.name === 'TypeError' && error.message.includes('fetch')) {
            errorMessage = 'üåê –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.';
        } else if (error.message.includes('timeout')) {
            errorMessage = '‚è∞ –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.';
        }
        
        showMessage(errorMessage, 'error');
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
function updateUserInfo(user, userRole) {
    console.log('üîÑ updateUserInfo –≤—ã–∑–≤–∞–Ω–∞ —Å –¥–∞–Ω–Ω—ã–º–∏:', { user, userRole });
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    let userName = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
    let userEmail = '';
    
    if (user) {
        if (user.name && user.name.trim() !== '') {
            userName = user.name;
        } else if (user.email && user.email.trim() !== '') {
            userName = user.email.split('@')[0]; // –ë–µ—Ä–µ–º —á–∞—Å—Ç—å –¥–æ @
        }
        userEmail = user.email || '';
    } else {
        // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–æ–±—É–µ–º –≤–∑—è—Ç—å –∏–∑ localStorage
        const savedUserData = localStorage.getItem('userData');
        if (savedUserData) {
            try {
                const userData = JSON.parse(savedUserData);
                console.log('üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userData);
                
                if (userData.name && userData.name.trim() !== '') {
                    userName = userData.name;
                } else if (userData.email && userData.email.trim() !== '') {
                    userName = userData.email.split('@')[0];
                }
                userEmail = userData.email || '';
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
            }
        }
    }
    
    console.log('üîç –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:', { 
        originalUser: user, 
        userName, 
        userEmail 
    });
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    let roleDisplay = '';
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ userRole –æ–±—ä–µ–∫—Ç–æ–º –∏–ª–∏ —Å—Ç—Ä–æ–∫–æ–π
    const roleName = typeof userRole === 'object' ? userRole.name : userRole;
    
    switch (roleName) {
        case 'admin':
            roleDisplay = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä';
            break;
        case 'shop_owner':
            roleDisplay = '–í–ª–∞–¥–µ–ª–µ—Ü –º–∞–≥–∞–∑–∏–Ω–∞';
            break;
        case 'user':
            roleDisplay = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
            break;
        default:
            roleDisplay = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã header –ø–æ –∏—Ö ID
    const headerUserName = document.getElementById('header-user-name');
    const headerUserEmail = document.getElementById('header-user-email');
    const headerUserRole = document.getElementById('header-user-role');
    
    if (headerUserName) headerUserName.textContent = userName;
    if (headerUserEmail) headerUserEmail.textContent = userEmail;
    if (headerUserRole) headerUserRole.textContent = roleDisplay;
    
    console.log('‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∞:', { userName, userEmail, roleDisplay });
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function toggleUserDropdown() {
    updateLastActivity(); // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    const dropdown = document.getElementById('user-dropdown');
    if (dropdown) {
        dropdown.classList.toggle('show');
    }
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ dropdown –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
document.addEventListener('click', function(event) {
    const userMenu = document.querySelector('.user-menu');
    const dropdown = document.getElementById('user-dropdown');
    
    if (dropdown && userMenu && !userMenu.contains(event.target)) {
        dropdown.classList.remove('show');
    }
});

// –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
function logout() {
    // –û—á–∏—â–∞–µ–º —Ç–æ–∫–µ–Ω –∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    adminToken = null;
    userRole = null;
    
    // –°–∫—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
    document.getElementById('admin-content').style.display = 'none';
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞
    document.getElementById('login-modal').style.display = 'block';
    
    // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É –≤—Ö–æ–¥–∞
    document.getElementById('login-form').reset();
    
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é
    const dropdown = document.getElementById('user-dropdown');
    if (dropdown) {
        dropdown.classList.remove('show');
    }
    
    showMessage('–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã', 'success');
}

// –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API
async function testConnection() {
    try {
        showMessage('–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API...', 'info');
        
        const response = await fetch(getApiUrl(CONFIG.API.ENDPOINTS.HEALTH));
        const data = await response.json();
        
        if (response.ok) {
            showMessage('‚úÖ API —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç! –°—Ç–∞—Ç—É—Å: ' + (data.status || 'OK'), 'success');
        } else {
            showMessage('‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç', 'error');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error);
        showMessage('‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API —Å–µ—Ä–≤–µ—Ä—É. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω.', 'error');
    }
}

// –ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É –≤–∫–ª–∞–¥–∫–∞–º–∏
function setupNavigation(userRole = 'admin') {
    console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –¥–ª—è —Ä–æ–ª–∏:', userRole);
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∞–π–¥–±–∞—Ä–∞
    const navItems = document.querySelectorAll('.nav-item');
    
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    navItems.forEach(item => {
        item.style.display = 'none';
    });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
    if (userRole === 'super_admin') {
        // –°—É–ø–µ—Ä –∞–¥–º–∏–Ω –≤–∏–¥–∏—Ç –≤—Å–µ —Ä–∞–∑–¥–µ–ª—ã –≤–∫–ª—é—á–∞—è —Ä–æ–ª–∏ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        navItems.forEach(item => {
            item.style.display = 'flex';
        });
    } else if (userRole === 'admin') {
        // –û–±—ã—á–Ω—ã–π –∞–¥–º–∏–Ω –≤–∏–¥–∏—Ç –≤—Å–µ –∫—Ä–æ–º–µ —Ä–æ–ª–µ–π
        const allowedTabs = ['dashboard', 'products', 'categories', 'users', 'orders', 'settings'];
        
        navItems.forEach(item => {
            const tabName = item.dataset.tab;
            if (allowedTabs.includes(tabName)) {
                item.style.display = 'flex';
            } else {
                item.style.display = 'none';
            }
        });
    } else if (userRole === 'shop_owner') {
        // –í–ª–∞–¥–µ–ª–µ—Ü –º–∞–≥–∞–∑–∏–Ω–∞ –≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ —Ä–∞–∑–¥–µ–ª—ã (–ë–ï–ó –∫–∞—Ç–µ–≥–æ—Ä–∏–π)
        const allowedTabs = ['dashboard', 'products', 'orders', 'settings'];
        
        navItems.forEach(item => {
            const tabName = item.dataset.tab;
            if (allowedTabs.includes(tabName)) {
                item.style.display = 'flex';
            } else {
                item.style.display = 'none';
            }
        });
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    navItems.forEach(item => {
        item.addEventListener('click', function() {
            // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            navItems.forEach(nav => nav.classList.remove('active'));
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
            this.classList.add('active');
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –≤–∫–ª–∞–¥–∫—É
            const tabName = this.dataset.tab;
            showTab(tabName, userRole);
        });
    });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—É—é –¥–æ—Å—Ç—É–ø–Ω—É—é –≤–∫–ª–∞–¥–∫—É
    const firstVisibleItem = Array.from(navItems).find(item => item.style.display !== 'none');
    if (firstVisibleItem) {
        firstVisibleItem.classList.add('active');
        const tabName = firstVisibleItem.dataset.tab;
        showTab(tabName, userRole);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫
function showTab(tabName, userRole = 'admin') {
    updateLastActivity(); // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    console.log(`üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É: ${tabName}, —Ä–æ–ª—å: ${userRole}`);
    console.log('üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ DOM –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏:', document.readyState);
    console.log('‚è∞ –í—Ä–µ–º—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è:', new Date().toISOString());
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ userRole –æ–±—ä–µ–∫—Ç–æ–º –∏–ª–∏ —Å—Ç—Ä–æ–∫–æ–π
    const roleName = typeof userRole === 'object' ? userRole.name : userRole;
    console.log('üîç –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–æ–ª—å –≤ showTab:', roleName);
    
    const navItems = document.querySelectorAll('.nav-item');
    const tabContents = document.querySelectorAll('.tab-content');
    const currentPage = document.getElementById('current-page');
    
    console.log('üîç –ù–∞–π–¥–µ–Ω–æ navItems:', navItems.length);
    console.log('üîç –ù–∞–π–¥–µ–Ω–æ tabContents:', tabContents.length);
    
    // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å–æ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    navItems.forEach(nav => nav.classList.remove('active'));
    tabContents.forEach(tab => tab.classList.remove('active'));
    
    // –ù–∞—Ö–æ–¥–∏–º –Ω—É–∂–Ω—É—é –≤–∫–ª–∞–¥–∫—É –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –µ—ë
    const targetNav = document.querySelector(`[data-tab="${tabName}"]`);
    const targetTab = document.getElementById(tabName);
    
    console.log(`üì¶ –ù–∞–π–¥–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã:`, { targetNav, targetTab });
    console.log(`üîç targetNav —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:`, !!targetNav);
    console.log(`üîç targetTab —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:`, !!targetTab);
    
    if (targetNav && targetTab) {
        targetNav.classList.add('active');
        targetTab.classList.add('active');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        const navText = targetNav.querySelector('span').textContent;
        currentPage.textContent = navText;
        
        console.log(`‚úÖ –í–∫–ª–∞–¥–∫–∞ ${tabName} –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π –¥–∞–Ω–Ω—ã—Ö
        if (tabName === 'products') {
            const container = document.getElementById('products-table');
            console.log('üîç –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä products-table –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤–∫–ª–∞–¥–∫–∏:', container);
            console.log('üîç –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', !!container);
            console.log('üîç –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä innerHTML –¥–æ—Å—Ç—É–ø–µ–Ω:', container ? typeof container.innerHTML : 'N/A');
        }
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏ (–≤—Å–µ–≥–¥–∞, –¥–∞–∂–µ –µ—Å–ª–∏ —É–∂–µ –∞–∫—Ç–∏–≤–Ω–∞)
        setTimeout(() => {
            console.log(`üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–∫–ª–∞–¥–∫–∏: ${tabName}`);
            switch (tabName) {
                case 'dashboard':
                    loadDashboard(userRole);
                    break;
                case 'products':
                    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤, —á—Ç–æ–±—ã DOM —Ç–æ—á–Ω–æ –±—ã–ª –≥–æ—Ç–æ–≤
                    setTimeout(() => {
                        console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π...');
                        loadProducts();
                        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Å–µ–ª–µ–∫—Ç–∞
                        loadCategories();
                    }, 200);
                    break;
                case 'categories':
                    loadCategories();
                    break;
                        case 'users':
            if (userRole === 'super_admin' || userRole === 'admin') {
                loadUsers();
            } else if (userRole === 'shop_owner') {
                loadShopCustomers();
            }
            break;
        case 'roles':
            if (userRole === 'super_admin') {
                loadRoles();
            }
            break;
        case 'orders':
            if (userRole === 'super_admin' || userRole === 'admin') {
                loadOrders();
            } else if (userRole === 'shop_owner') {
                loadShopOrders();
            }
            break;
                case 'settings':
                    loadSettings();
                    break;
                default:
                    console.warn(`‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞: ${tabName}`);
            }
        }, 150); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
    } else {
        console.error(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ ${tabName}`);
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞—à–±–æ—Ä–¥–∞
async function loadDashboard(userRole = 'admin') {
    updateLastActivity(); // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    try {
        console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–∞—à–±–æ—Ä–¥–∞...');
        console.log('üîë –¢–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∞:', adminToken ? '–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
        console.log('üëë –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userRole);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
        if (!adminToken) {
            console.warn('‚ö†Ô∏è –¢–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –æ—Ç–∫–ª–∞–¥—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞—à–±–æ—Ä–¥–∞...');
            setTimeout(() => loadDashboard(userRole), 500);
        return;
    }
    
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        let products = { data: [] };
        let users = { data: { users: [] } };
        let orders = { data: { orders: [] } };
        
        try {
                    // –í—ã–±–∏—Ä–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
        let productsEndpoint;
        // –í—Å–µ —Ä–æ–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –æ–±—â–∏–π —ç–Ω–¥–ø–æ–∏–Ω—Ç, –Ω–æ —Ç–æ–≤–∞—Ä—ã —Ñ–∏–ª—å—Ç—Ä—É—é—Ç—Å—è –ø–æ ownerId –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        productsEndpoint = CONFIG.API.ENDPOINTS.PRODUCTS.LIST;
        if (userRole === 'super_admin' || userRole === 'admin') {
            console.log('üëë –ê–¥–º–∏–Ω –∑–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞');
        } else {
            console.log('üè™ –í–ª–∞–¥–µ–ª–µ—Ü –º–∞–≥–∞–∑–∏–Ω–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Å–≤–æ–∏ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞ (—Ñ–∏–ª—å—Ç—Ä—É–µ—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)');
        }
            
            products = await fetchData(productsEndpoint);
            console.log('‚úÖ –¢–æ–≤–∞—Ä—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', products.products?.length || 0);
        } catch (error) {
            console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:', error.message);
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ userRole –æ–±—ä–µ–∫—Ç–æ–º –∏–ª–∏ —Å—Ç—Ä–æ–∫–æ–π
        const roleName = typeof userRole === 'object' ? userRole.name : userRole;
        console.log('üîç –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–æ–ª—å –≤ loadDashboard:', roleName);
        
        try {
            if (roleName === 'super_admin' || roleName === 'admin') {
                users = await fetchData(CONFIG.API.ENDPOINTS.USERS.LIST);
                console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', users.data?.users?.length || 0);
            } else if (roleName === 'shop_owner') {
                users = await fetchData('/api/v1/shop/customers/');
                console.log('‚úÖ –ö–ª–∏–µ–Ω—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', users.data?.customers?.length || 0);
            }
        } catch (error) {
            console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π/–∫–ª–∏–µ–Ω—Ç–æ–≤:', error.message);
        }
        
        try {
            if (roleName === 'super_admin' || roleName === 'admin') {
                orders = await fetchData(CONFIG.API.ENDPOINTS.ORDERS.LIST);
                console.log('‚úÖ –ó–∞–∫–∞–∑—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', orders.data?.orders?.length || 0);
            } else if (roleName === 'shop_owner') {
                orders = await fetchData('/api/v1/shop/orders/');
                console.log('‚úÖ –ó–∞–∫–∞–∑—ã –º–∞–≥–∞–∑–∏–Ω–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', orders.data?.orders?.length || 0);
            }
        } catch (error) {
            console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤:', error.message);
        }
        
        console.log('üìä –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã:', {
            products: products.products?.length || 0,
            users: (roleName === 'super_admin' || roleName === 'admin') ? (users.data?.users?.length || 0) : (users.data?.customers?.length || 0),
            orders: orders.data?.orders?.length || 0
        });
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å –∫—Ä–∞—Å–∏–≤—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
        const totalProducts = products.products?.length || 0;
        const totalUsers = (roleName === 'super_admin' || roleName === 'admin') ? (users.data?.users?.length || 0) : (users.data?.customers?.length || 0);
        const totalOrders = orders.data?.orders?.length || 0;
        const revenue = orders.data?.orders?.reduce((sum, order) => sum + (order.total_amount || 0), 0) || 0;
        
        // –ê–Ω–∏–º–∞—Ü–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤
        console.log('üéØ –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏:', {
            products: totalProducts,
            users: totalUsers,
            orders: totalOrders,
            revenue: revenue
        });
        
        animateCounter('total-products', totalProducts);
        animateCounter('total-users', totalUsers);
        animateCounter('total-orders', totalOrders);
        animateRevenue('total-revenue', revenue);
        
        console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞:', {
            products: totalProducts,
            users: totalUsers,
            orders: totalOrders,
            revenue: revenue
        });
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã
        displayRecentOrders(orders.data?.orders?.slice(0, 5) || []);
        
        console.log('‚úÖ –î–∞—à–±–æ—Ä–¥ –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞—à–±–æ—Ä–¥–∞:', error);
        showMessage('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–∞—à–±–æ—Ä–¥–∞: ' + error.message, 'error');
    }
}

// –ê–Ω–∏–º–∞—Ü–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤
function animateCounter(elementId, targetValue) {
    const element = document.getElementById(elementId);
    if (!element) {
        console.warn(`‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç ${elementId} –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ —Å—á–µ—Ç—á–∏–∫–∞`);
        return;
    }
    
    console.log(`üéØ –ê–Ω–∏–º–∏—Ä—É–µ–º —Å—á–µ—Ç—á–∏–∫ ${elementId}: ${targetValue}`);
    
    const startValue = 0;
    const duration = 1000; // 1 —Å–µ–∫—É–Ω–¥–∞
    const startTime = performance.now();
    
    function updateCounter(currentTime) {
        const elapsed = currentTime - startTime;
        const progress = Math.min(elapsed / duration, 1);
        
        // –ü–ª–∞–≤–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è —Å easeOutQuart
        const easeProgress = 1 - Math.pow(1 - progress, 4);
        const currentValue = Math.floor(startValue + (targetValue - startValue) * easeProgress);
        
        element.textContent = currentValue.toLocaleString();
        
        if (progress < 1) {
            requestAnimationFrame(updateCounter);
            } else {
            element.textContent = targetValue.toLocaleString();
        }
    }
    
    requestAnimationFrame(updateCounter);
}

// –ê–Ω–∏–º–∞—Ü–∏—è –¥–æ—Ö–æ–¥–∞
function animateRevenue(elementId, targetValue) {
    const element = document.getElementById(elementId);
    if (!element) return;
    
    const startValue = 0;
    const duration = 1000; // 1 —Å–µ–∫—É–Ω–¥–∞
    const startTime = performance.now();
    
    function updateRevenue(currentTime) {
        const elapsed = currentTime - startTime;
        const progress = Math.min(elapsed / duration, 1);
        
        // –ü–ª–∞–≤–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è —Å easeOutQuart
        const easeProgress = 1 - Math.pow(1 - progress, 4);
        const currentValue = Math.floor(startValue + (targetValue - startValue) * easeProgress);
        
        element.textContent = `‚ÇΩ${currentValue.toLocaleString()}`;
        
        if (progress < 1) {
            requestAnimationFrame(updateRevenue);
            } else {
            element.textContent = `‚ÇΩ${targetValue.toLocaleString()}`;
        }
    }
    
    requestAnimationFrame(updateRevenue);
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–∫–∞–∑–æ–≤
function displayRecentOrders(orders) {
    const container = document.getElementById('recent-orders');
    
    if (!container) {
        console.warn('‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä recent-orders –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }
    
    if (orders.length === 0) {
        container.innerHTML = `
            <div class="empty-state">
                <i class="fas fa-shopping-cart"></i>
                <p>–ó–∞–∫–∞–∑–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç</p>
                <small>–ö–æ–≥–¥–∞ –ø–æ—è–≤—è—Ç—Å—è –∑–∞–∫–∞–∑—ã, –æ–Ω–∏ –æ—Ç–æ–±—Ä–∞–∑—è—Ç—Å—è –∑–¥–µ—Å—å</small>
            </div>
        `;
        return;
    }
    
    const table = `
        <table>
            <thead>
                <tr>
                    <th><i class="fas fa-hashtag"></i> ID</th>
                    <th><i class="fas fa-user"></i> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</th>
                    <th><i class="fas fa-info-circle"></i> –°—Ç–∞—Ç—É—Å</th>
                    <th><i class="fas fa-ruble-sign"></i> –°—É–º–º–∞</th>
                    <th><i class="fas fa-calendar"></i> –î–∞—Ç–∞</th>
                    <th><i class="fas fa-cog"></i> –î–µ–π—Å—Ç–≤–∏—è</th>
                </tr>
            </thead>
            <tbody>
                ${orders.map(order => `
                    <tr>
                        <td><code>${order.id?.substring(0, 8)}...</code></td>
                        <td>
                            <div class="user-info">
                                <i class="fas fa-user-circle"></i>
                                <span>${order.user_id?.substring(0, 8)}...</span>
                            </div>
                        </td>
                        <td>
                            <span class="status-badge ${getStatusClass(order.status)}">
                                <i class="fas ${getStatusIcon(order.status)}"></i>
                                ${order.status || '–ù–æ–≤—ã–π'}
                            </span>
                        </td>
                        <td class="amount">
                            <strong>‚ÇΩ${(order.total_amount || 0).toLocaleString()}</strong>
                        </td>
                        <td>
                            <div class="date-info">
                                <div class="date">${new Date(order.created_at).toLocaleDateString()}</div>
                                <div class="time">${new Date(order.created_at).toLocaleTimeString()}</div>
                            </div>
                        </td>
                        <td>
                            <button class="action-btn view" onclick="viewOrder('${order.id}')" title="–ü—Ä–æ—Å–º–æ—Ç—Ä">
                                <i class="fas fa-eye"></i>
                            </button>
                        </td>
                    </tr>
                `).join('')}
            </tbody>
        </table>
    `;
    
    container.innerHTML = table;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ —Å—Ç–∞—Ç—É—Å–∞
function getStatusClass(status) {
    switch (status?.toLowerCase()) {
        case 'completed':
        case '–∑–∞–≤–µ—Ä—à–µ–Ω':
            return 'status-completed';
        case 'processing':
        case '–æ–±—Ä–∞–±–æ—Ç–∫–∞':
            return 'status-processing';
        case 'shipped':
        case '–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω':
            return 'status-shipped';
        case 'cancelled':
        case '–æ—Ç–º–µ–Ω–µ–Ω':
            return 'status-cancelled';
        default:
            return 'status-new';
    }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
function getStatusIcon(status) {
    switch (status?.toLowerCase()) {
        case 'completed':
        case '–∑–∞–≤–µ—Ä—à–µ–Ω':
            return 'fa-check-circle';
        case 'processing':
        case '–æ–±—Ä–∞–±–æ—Ç–∫–∞':
            return 'fa-clock';
        case 'shipped':
        case '–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω':
            return 'fa-shipping-fast';
        case 'cancelled':
        case '–æ—Ç–º–µ–Ω–µ–Ω':
            return 'fa-times-circle';
        default:
            return 'fa-circle';
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ —Å —É—á–µ—Ç–æ–º —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function loadProducts() {
    console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ç–æ–≤–∞—Ä–æ–≤...');
    
    // –û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é container –≤ –Ω–∞—á–∞–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏
    const container = document.getElementById('products-table');
    
    try {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        if (container) {
            container.innerHTML = `
                <div class="table-container">
                    <h3><i class="fas fa-box"></i> –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤</h3>
                    <div class="text-center" style="padding: 40px 20px;">
                        <div class="loading" style="margin: 0 auto 20px;">
                            <i class="fas fa-spinner fa-spin" style="font-size: 32px; color: #667eea;"></i>
                        </div>
                        <p style="color: #666; font-size: 14px;">–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤...</p>
                    </div>
                </div>
            `;
        }
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤—ã–±–∏—Ä–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç
        const userRole = localStorage.getItem('userRole') || 'admin';
        let endpoint;
        let title = '–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤';
        
        if (userRole === 'super_admin' || userRole === 'admin') {
            // –ê–¥–º–∏–Ω—ã –≤–∏–¥—è—Ç –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
            endpoint = CONFIG.API.ENDPOINTS.PRODUCTS.LIST;
            title = '–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ (–ê–¥–º–∏–Ω)';
            console.log('üëë –ê–¥–º–∏–Ω –∑–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ —Ç–æ–≤–∞—Ä—ã');
        } else {
            // –í–ª–∞–¥–µ–ª—å—Ü—ã –º–∞–≥–∞–∑–∏–Ω–æ–≤ –∏ –æ–±—ã—á–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –æ–±—â–∏–π —ç–Ω–¥–ø–æ–∏–Ω—Ç
            endpoint = CONFIG.API.ENDPOINTS.PRODUCTS.LIST;
            title = '–ú–æ–∏ —Ç–æ–≤–∞—Ä—ã';
            console.log('üè™ –í–ª–∞–¥–µ–ª–µ—Ü –º–∞–≥–∞–∑–∏–Ω–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ —Ç–æ–≤–∞—Ä—ã, —Ñ–∏–ª—å—Ç—Ä—É–µ–º –ø–æ ownerId');
        }
        
        console.log(`üîó –ò—Å–ø–æ–ª—å–∑—É–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç: ${endpoint}`);
        
        const response = await fetchData(endpoint);
        console.log('üì° –û—Ç–≤–µ—Ç API —Ç–æ–≤–∞—Ä–æ–≤:', response);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –æ—Ç–≤–µ—Ç–∞
        let products = [];
        console.log('üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç API:', response);
        
        if (response.data && response.data.products && Array.isArray(response.data.products)) {
            products = response.data.products;
            console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º response.data.products');
        } else if (response.products && Array.isArray(response.products)) {
            products = response.products;
            console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º response.products');
        } else if (response.data && Array.isArray(response.data)) {
            products = response.data;
            console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º response.data');
        } else if (Array.isArray(response)) {
            products = response;
            console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º response –Ω–∞–ø—Ä—è–º—É—é');
        } else {
            console.warn('‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:', response);
            products = [];
        }
        
        console.log(`üì¶ –ü–æ–ª—É—á–µ–Ω–æ ${products.length} —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ API`);
        
        // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã –ø–æ ownerId –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –º–∞–≥–∞–∑–∏–Ω–æ–≤
        if (userRole === 'shop_owner' || userRole === 'user') {
            const userData = JSON.parse(localStorage.getItem('userData'));
            const userId = userData?.id;
            
            if (userId) {
                console.log(`üîç –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã –ø–æ ownerId: ${userId}`);
                const originalCount = products.length;
                products = products.filter(product => product.ownerId === userId);
                console.log(`‚úÖ –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ: ${originalCount} ‚Üí ${products.length} —Ç–æ–≤–∞—Ä–æ–≤`);
            } else {
                console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏');
            }
        }
        
        console.log(`üì¶ –ü–æ–ª—É—á–µ–Ω–æ ${products.length} —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —Ä–æ–ª–∏ ${userRole}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        products.forEach((product, index) => {
            console.log(`üì¶ –¢–æ–≤–∞—Ä ${index + 1}: "${product.name}" - categoryId: ${product.categoryId}, category:`, product.category);
            console.log(`üì¶ –¢–æ–≤–∞—Ä ${index + 1} –≤–∞—Ä–∏–∞—Ü–∏–∏:`, product.variations);
            console.log(`üì¶ –¢–æ–≤–∞—Ä ${index + 1} –≤–∞—Ä–∏–∞—Ü–∏–∏ —Ç–∏–ø:`, typeof product.variations);
            console.log(`üì¶ –¢–æ–≤–∞—Ä ${index + 1} –≤–∞—Ä–∏–∞—Ü–∏–∏ –¥–ª–∏–Ω–∞:`, product.variations?.length);
            
            // –î–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –º–∞–≥–∞–∑–∏–Ω–æ–≤ –ø—Ä–æ–≤–µ—Ä—è–µ–º ownerId
            if (userRole === 'shop_owner' || userRole === 'user') {
                console.log(`üì¶ –¢–æ–≤–∞—Ä ${index + 1} ownerId:`, product.ownerId);
            }
        });
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–≤–∞—Ä—ã –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
        allProducts = products;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–µ—Ä–µ–¥ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
        if (!container) {
            console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä products-table –Ω–µ –Ω–∞–π–¥–µ–Ω –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–æ–≤–∞—Ä–æ–≤!');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ –≤–∫–ª–∞–¥–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
            const productsTab = document.getElementById('products');
            if (!productsTab || !productsTab.classList.contains('active')) {
                console.warn('‚ö†Ô∏è –í–∫–ª–∞–¥–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è...');
                showTab('products');
                return;
            }
            
            console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–∞–∂–µ –Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–µ —Ç–æ–≤–∞—Ä–æ–≤!');
            return;
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
        if (container) {
            const titleElement = container.querySelector('h3');
            if (titleElement) {
                titleElement.innerHTML = `<i class="fas fa-box"></i> ${title}`;
            }
        }
        
        displayProducts(products);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
        if (products.length > 0) {
            const roleText = userRole === 'shop_owner' ? '–≤–∞—à–∏—Ö' : '';
            showMessage(`–£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ ${products.length} ${roleText} —Ç–æ–≤–∞—Ä–æ–≤`, 'success');
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤:', error);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
        if (container) {
            container.innerHTML = `
                <div class="table-container">
                    <h3><i class="fas fa-box"></i> –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤</h3>
                    <div class="text-center" style="padding: 40px 20px;">
                        <div style="font-size: 48px; color: #e74c3c; margin-bottom: 20px;">
                            <i class="fas fa-exclamation-triangle"></i>
                        </div>
                        <h4 style="color: #e74c3c; margin-bottom: 10px;">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h4>
                        <p style="color: #666; font-size: 14px; margin-bottom: 20px;">${error.message}</p>
                        <button class="btn btn-primary" onclick="loadProducts()">
                            <i class="fas fa-redo"></i> –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
                        </button>
                    </div>
                </div>
            `;
        }
        
        showMessage('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤: ' + error.message, 'error');
    }
}

// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ (–¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/–∏–∑–º–µ–Ω–µ–Ω–∏—è)
async function refreshProductsList() {
    console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞ –≤–∫–ª–∞–¥–∫–µ —Ç–æ–≤–∞—Ä–æ–≤
    const productsTab = document.getElementById('products');
    if (!productsTab || !productsTab.classList.contains('active')) {
        console.warn('‚ö†Ô∏è –í–∫–ª–∞–¥–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è...');
        showTab('products');
        // –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ
        await new Promise(resolve => setTimeout(resolve, 150));
    }
    
    try {
        await loadProducts();
        console.log('‚úÖ –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω');
        return true;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤:', error);
        showMessage('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤: ' + error.message, 'error');
        return false;
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤
function displayProducts(products) {
    console.log('üîÑ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤:', products);
    
    const container = document.getElementById('products-table');
    
    if (!container) {
        console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä products-table –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        showMessage('–û—à–∏–±–∫–∞: –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.', 'error');
        return;
    }
    
    if (!Array.isArray(products)) {
        console.warn('‚ö†Ô∏è products –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º:', products);
        products = [];
    }
    
    if (products.length === 0) {
        container.innerHTML = `
            <div class="table-container">
                <h3><i class="fas fa-box"></i> –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤</h3>
                <div class="text-center" style="padding: 60px 20px;">
                    <div style="font-size: 64px; color: #ddd; margin-bottom: 20px;">
                        <i class="fas fa-box-open"></i>
                    </div>
                    <h4 style="color: #666; margin-bottom: 10px;">–¢–æ–≤–∞—Ä–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç</h4>
                    <p style="color: #999; font-size: 14px;">–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π —Ç–æ–≤–∞—Ä, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É</p>
                </div>
            </div>
        `;
        return;
    }
    
    console.log(`üìä –û—Ç–æ–±—Ä–∞–∂–∞–µ–º ${products.length} —Ç–æ–≤–∞—Ä–æ–≤`);
    
    // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    products.forEach((product, index) => {
        console.log(`üì¶ –¢–æ–≤–∞—Ä ${index + 1} –∫–∞—Ç–µ–≥–æ—Ä–∏—è:`, product.category);
        if (product.category) {
            console.log(`üì¶ –¢–æ–≤–∞—Ä ${index + 1} –∫–∞—Ç–µ–≥–æ—Ä–∏—è –¥–µ—Ç–∞–ª–∏:`, {
                id: product.category.id,
                name: product.category.name,
                Name: product.category.Name,
                displayName: product.category.displayName,
                keys: Object.keys(product.category)
            });
        }
    });
    
    try {
        const table = `
            <div class="table-container">
                <h3><i class="fas fa-box"></i> –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤</h3>
                <div class="table-responsive">
                    <table class="data-table">
                        <thead>
                            <tr>
                                <th><i class="fas fa-tag"></i> –¢–æ–≤–∞—Ä</th>
                                <th><i class="fas fa-building"></i> –ë—Ä–µ–Ω–¥</th>
                                <th><i class="fas fa-venus-mars"></i> –ü–æ–ª</th>
                                <th><i class="fas fa-folder"></i> –ö–∞—Ç–µ–≥–æ—Ä–∏—è</th>
                                <th><i class="fas fa-layer-group"></i> –í–∞—Ä–∏–∞—Ü–∏–∏</th>
                                <th><i class="fas fa-calendar"></i> –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è</th>
                                <th><i class="fas fa-cogs"></i> –î–µ–π—Å—Ç–≤–∏—è</th>
                            </tr>
                        </thead>
                        <tbody>
                            ${products.map((product, index) => `
                                <tr style="animation-delay: ${index * 0.1}s;">
                                    <td data-label="–¢–æ–≤–∞—Ä">
                                        <div style="display: flex; align-items: center; gap: 12px;">
                                            <div style="width: 50px; height: 50px; border-radius: 12px; background: linear-gradient(135deg, #667eea, #764ba2); display: flex; align-items: center; justify-content: center; color: white; font-weight: bold; font-size: 20px; box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3); position: relative; overflow: hidden;">
                                                <i class="fas fa-box"></i>
                                                <div style="position: absolute; top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(45deg, transparent 30%, rgba(255,255,255,0.1) 50%, transparent 70%); animation: shine 2s infinite;"></div>
                                            </div>
                                            <div>
                                                <div style="font-weight: 700; color: #333; font-size: 16px; margin-bottom: 4px;">${product.name}</div>
                                                <div style="font-size: 12px; color: #888; font-family: monospace; background: #f8f9fa; padding: 2px 6px; border-radius: 4px; display: inline-block;">
                                                    ${product.id?.substring(0, 8)}...
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                    <td data-label="–ë—Ä–µ–Ω–¥">
                                        <div style="display: flex; align-items: center; gap: 8px;">
                                            <i class="fas fa-building" style="color: #4ecdc4; font-size: 16px;"></i>
                                            <span style="font-weight: 600; color: #2c3e50;">${product.brand || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                                        </div>
                                    </td>
                                    <td data-label="–ü–æ–ª">
                                        <span class="badge" style="background: ${getGenderColor(product.gender)}; font-size: 12px; padding: 8px 12px;">
                                            <i class="fas ${getGenderIcon(product.gender)}" style="margin-right: 4px;"></i>
                                            ${getGenderText(product.gender)}
                                        </span>
                                    </td>
                                    <td data-label="–ö–∞—Ç–µ–≥–æ—Ä–∏—è">
                                        <div style="display: flex; align-items: center; gap: 8px;">
                                            <i class="fas fa-folder" style="color: #f093fb; font-size: 16px;"></i>
                                            <span style="font-weight: 600; color: #2c3e50;">${product.category?.name || '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'}</span>
                                        </div>
                                    </td>
                                    <td data-label="–í–∞—Ä–∏–∞—Ü–∏–∏">
                                        <div style="display: flex; align-items: center; gap: 8px;">
                                            <i class="fas fa-layer-group" style="color: #45b7d1; font-size: 16px;"></i>
                                            <span class="badge" style="background: linear-gradient(135deg, #45b7d1, #96ceb4); color: white; font-size: 12px; padding: 8px 12px;">
                                                ${product.variations?.length || 0} ${product.variations?.length === 1 ? '–≤–∞—Ä–∏–∞—Ü–∏—è' : product.variations?.length < 5 ? '–≤–∞—Ä–∏–∞—Ü–∏–∏' : '–≤–∞—Ä–∏–∞—Ü–∏–π'}
                                            </span>
                                        </div>
                                    </td>
                                    <td data-label="–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è">
                                        <div style="display: flex; align-items: center; gap: 8px;">
                                            <i class="fas fa-calendar" style="color: #f093fb; font-size: 16px;"></i>
                                            <div>
                                                <div style="font-size: 14px; color: #2c3e50; font-weight: 600;">
                                                    ${product.createdAt ? new Date(product.createdAt).toLocaleDateString('ru-RU', {
                                                        day: '2-digit',
                                                        month: '2-digit',
                                                        year: 'numeric'
                                                    }) : 'N/A'}
                                                </div>
                                                <div style="font-size: 11px; color: #7f8c8d;">
                                                    ${product.createdAt ? new Date(product.createdAt).toLocaleTimeString('ru-RU', {
                                                        hour: '2-digit',
                                                        minute: '2-digit'
                                                    }) : ''}
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                    <td data-label="–î–µ–π—Å—Ç–≤–∏—è">
                                        <div style="display: flex; gap: 8px; justify-content: center;">
                                            <button class="btn-sm btn-info" onclick="viewProductVariations('${product.id}')" title="–ü—Ä–æ—Å–º–æ—Ç—Ä –≤–∞—Ä–∏–∞—Ü–∏–π" style="min-width: 44px; min-height: 44px;">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                            <button class="btn-sm btn-primary" onclick="editProduct('${product.id}')" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä" style="min-width: 44px; min-height: 44px;">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                            <button class="btn-sm btn-danger" onclick="deleteProduct('${product.id}')" title="–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä" style="min-width: 44px; min-height: 44px;">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            `).join('')}
                        </tbody>
                    </table>
                </div>
            </div>
        `;
        
        container.innerHTML = table;
        
        console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ —Ç–æ–≤–∞—Ä–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ innerHTML:', error);
        showMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤: ' + error.message, 'error');
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
async function loadCategories() {
    try {
        const response = await fetchData(CONFIG.API.ENDPOINTS.CATEGORIES.LIST);
        console.log('üì° –û—Ç–≤–µ—Ç API –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', response);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –æ—Ç–≤–µ—Ç–∞
        let categories = [];
        if (response.success && response.data) {
            categories = response.data;
        } else if (response.categories) {
            categories = response.categories;
        } else if (response.data && Array.isArray(response.data)) {
            categories = response.data;
        } else if (Array.isArray(response)) {
            categories = response;
    } else {
            console.warn('‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', response);
            categories = [];
        }
        
        console.log(`üì¶ –ü–æ–ª—É—á–µ–Ω–æ ${categories.length} –∫–∞—Ç–µ–≥–æ—Ä–∏–π:`, categories);
        
        displayCategories(categories);
        console.log('üîÑ –í—ã–∑—ã–≤–∞–µ–º populateCategorySelects —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏:', categories);
        populateCategorySelects(categories);
        
        console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏ —Å–µ–ª–µ–∫—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error);
        showMessage('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π', 'error');
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
function displayCategories(categories) {
    const container = document.getElementById('categories-table');
    
    if (!container) {
        console.warn('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä categories-table –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }
    
    if (categories.length === 0) {
        container.innerHTML = `
            <div class="table-container">
                <h3><i class="fas fa-tags"></i> –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π</h3>
                <div class="text-center" style="padding: 60px 20px;">
                    <div style="font-size: 64px; color: #ddd; margin-bottom: 20px;">
                        <i class="fas fa-tags"></i>
                    </div>
                    <h4 style="color: #666; margin-bottom: 10px;">–ö–∞—Ç–µ–≥–æ—Ä–∏–π –ø–æ–∫–∞ –Ω–µ—Ç</h4>
                    <p style="color: #999; font-size: 14px;">–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É</p>
                </div>
            </div>
        `;
        return;
    }
    
    const table = `
        <div class="table-container">
            <h3><i class="fas fa-tags"></i> –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π</h3>
            <div class="table-responsive">
                <table class="data-table">
                    <thead>
                        <tr>
                            <th><i class="fas fa-tag"></i> –ö–∞—Ç–µ–≥–æ—Ä–∏—è</th>
                            <th><i class="fas fa-info-circle"></i> –û–ø–∏—Å–∞–Ω–∏–µ</th>
                            <th><i class="fas fa-sitemap"></i> –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è</th>
                            <th><i class="fas fa-sort"></i> –ü–æ—Ä—è–¥–æ–∫</th>
                            <th><i class="fas fa-calendar"></i> –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è</th>
                            <th><i class="fas fa-cogs"></i> –î–µ–π—Å—Ç–≤–∏—è</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${categories.map((category, index) => `
                            <tr style="animation-delay: ${index * 0.1}s;">
                                <td data-label="–ö–∞—Ç–µ–≥–æ—Ä–∏—è">
                                    <div style="display: flex; align-items: center; gap: 12px;">
                                        <div style="width: 50px; height: 50px; border-radius: 12px; background: linear-gradient(135deg, #f093fb, #f5576c); display: flex; align-items: center; justify-content: center; color: white; font-weight: bold; font-size: 20px; box-shadow: 0 4px 15px rgba(240, 147, 251, 0.3); position: relative; overflow: hidden;">
                                            <i class="fas fa-tag"></i>
                                            <div style="position: absolute; top: 0; left: 0; right: 0; bottom: 0; background: linear-gradient(45deg, transparent 30%, rgba(255,255,255,0.1) 50%, transparent 70%); animation: shine 2s infinite;"></div>
                                        </div>
                                        <div>
                                            <div style="font-weight: 700; color: #333; font-size: 16px; margin-bottom: 4px;">${category.name}</div>
                                            <div style="font-size: 12px; color: #888; font-family: monospace; background: #f8f9fa; padding: 2px 6px; border-radius: 4px; display: inline-block;">
                                                ${category.id?.substring(0, 8)}...
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td data-label="–û–ø–∏—Å–∞–Ω–∏–µ">
                                    <div style="display: flex; align-items: center; gap: 8px;">
                                        <i class="fas fa-info-circle" style="color: #4ecdc4; font-size: 16px;"></i>
                                        <span style="font-weight: 600; color: #2c3e50; max-width: 200px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;" title="${category.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}">
                                            ${category.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}
                                        </span>
                                    </div>
                                </td>
                                <td data-label="–†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è">
                                    <div style="display: flex; align-items: center; gap: 8px;">
                                        <i class="fas fa-sitemap" style="color: #45b7d1; font-size: 16px;"></i>
                                        <span style="font-weight: 600; color: #2c3e50;">${category.parent?.name || '–ö–æ—Ä–Ω–µ–≤–∞—è'}</span>
                                    </div>
                                </td>
                                <td data-label="–ü–æ—Ä—è–¥–æ–∫">
                                    <div style="display: flex; align-items: center; gap: 8px;">
                                        <i class="fas fa-sort" style="color: #f093fb; font-size: 16px;"></i>
                                        <span class="badge" style="background: linear-gradient(135deg, #45b7d1, #96ceb4); color: white; font-size: 12px; padding: 8px 12px;">
                                            ${category.sortOrder || 0}
                                        </span>
                                    </div>
                                </td>
                                <td data-label="–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è">
                                    <div style="display: flex; align-items: center; gap: 8px;">
                                        <i class="fas fa-calendar" style="color: #f093fb; font-size: 16px;"></i>
                                        <div>
                                            <div style="font-size: 14px; color: #2c3e50; font-weight: 600;">
                                                ${category.createdAt ? new Date(category.createdAt).toLocaleDateString('ru-RU', {
                                                    day: '2-digit',
                                                    month: '2-digit',
                                                    year: 'numeric'
                                                }) : 'N/A'}
                                            </div>
                                            <div style="font-size: 11px; color: #7f8c8d;">
                                                ${category.createdAt ? new Date(category.createdAt).toLocaleTimeString('ru-RU', {
                                                    hour: '2-digit',
                                                    minute: '2-digit'
                                                }) : ''}
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td data-label="–î–µ–π—Å—Ç–≤–∏—è">
                                    <div style="display: flex; gap: 8px; justify-content: center;">
                                        <button class="btn-sm btn-primary" onclick="editCategory('${category.id}')" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é" style="min-width: 44px; min-height: 44px;">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button class="btn-sm btn-danger" onclick="deleteCategory('${category.id}')" title="–£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é" style="min-width: 44px; min-height: 44px;">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        `).join('')}
                    </tbody>
                </table>
            </div>
        </div>
    `;
    
    container.innerHTML = table;
    
    // –î–æ–±–∞–≤–ª—è–µ–º data-label –∞—Ç—Ä–∏–±—É—Ç—ã –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
async function loadUsers() {
    console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    try {
        const response = await fetchData('/api/v1/admin/users/');
        console.log('üì° –û—Ç–≤–µ—Ç API –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', response);
        if (response.success) {
            console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ:', response.data.users);
            displayUsers(response.data.users);
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ API –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', response);
                }
            } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
        showMessage('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', 'error');
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
function displayUsers(users) {
    console.log('üîç displayUsers –≤—ã–∑–≤–∞–Ω–∞ —Å –¥–∞–Ω–Ω—ã–º–∏:', users);
    
    const tbody = document.getElementById('users-table-body');
    console.log('üîç –ù–∞–π–¥–µ–Ω tbody:', tbody);
    
    if (!tbody) {
        console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç users-table-body –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        return;
    }

    tbody.innerHTML = '';
    console.log('üîç –û—á–∏—Å—Ç–∏–ª–∏ tbody');
    
    if (!users || users.length === 0) {
        console.log('‚ö†Ô∏è –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è');
        tbody.innerHTML = `
            <tr>
                <td colspan="7" class="text-center">
                    <div style="padding: 40px 20px;">
                        <i class="fas fa-users" style="font-size: 48px; color: #ccc; margin-bottom: 15px;"></i>
                        <div style="font-size: 18px; color: #666; margin-bottom: 10px;">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</div>
                        <div style="font-size: 14px; color: #999;">–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"</div>
                    </div>
                </td>
            </tr>
        `;
        return;
    }
    
    users.forEach((user, index) => {
        console.log(`üîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${index + 1}:`, user);
        
        const row = document.createElement('tr');
        row.style.animationDelay = `${index * 0.1}s`;
        
        const rowHtml = `
            <td>
                <div style="display: flex; align-items: center; gap: 12px;">
                    <div style="width: 45px; height: 45px; border-radius: 50%; background: linear-gradient(135deg, #667eea, #764ba2); display: flex; align-items: center; justify-content: center; color: white; font-weight: bold; font-size: 18px; box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);">
                        ${user.name ? user.name.charAt(0).toUpperCase() : 'U'}
                    </div>
                    <div>
                        <div style="font-weight: 700; color: #333; font-size: 15px;">${user.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                        <div style="font-size: 11px; color: #888; font-family: monospace;">${user.id ? user.id.substring(0, 8) + '...' : 'N/A'}</div>
                    </div>
                </div>
            </td>
            <td>
                <div style="display: flex; align-items: center; gap: 10px;">
                    <i class="fas fa-envelope" style="color: #667eea; font-size: 16px;"></i>
                    <span style="font-weight: 500;">${user.email || 'N/A'}</span>
                </div>
            </td>
            <td>
                <div style="display: flex; align-items: center; gap: 10px;">
                    <i class="fas fa-phone" style="color: #4ecdc4; font-size: 16px;"></i>
                    <span style="font-weight: 500;">${user.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                </div>
            </td>
            <td>
                <span class="badge role-${user.role?.name || 'user'}">
                    <i class="fas fa-user-shield"></i>
                    ${user.role?.displayName || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
                </span>
            </td>
            <td>
                <span class="badge ${user.isActive ? 'role-user' : 'role-admin'}" style="background: ${user.isActive ? 'linear-gradient(135deg, #4ecdc4, #44a08d)' : 'linear-gradient(135deg, #ff6b6b, #ee5a24)'};">
                    <i class="fas ${user.isActive ? 'fa-check-circle' : 'fa-times-circle'}"></i>
                    ${user.isActive ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}
                </span>
            </td>
            <td>
                <div style="display: flex; align-items: center; gap: 8px;">
                    <i class="fas fa-calendar" style="color: #f093fb; font-size: 14px;"></i>
                    <span style="font-size: 13px; color: #666; font-weight: 500;">
                        ${user.createdAt ? new Date(user.createdAt).toLocaleDateString('ru-RU', {
                            day: '2-digit',
                            month: '2-digit',
                            year: 'numeric'
                        }) : 'N/A'}
                    </span>
                </div>
            </td>
            <td>
                <div style="display: flex; gap: 6px;">
                    <button class="btn-sm btn-primary" onclick="viewUser('${user.id}')" title="–ü—Ä–æ—Å–º–æ—Ç—Ä">
                        <i class="fas fa-eye"></i>
                    </button>
                    <button class="btn-sm btn-secondary" onclick="editUser('${user.id}')" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">
                        <i class="fas fa-edit"></i>
                    </button>
                    <button class="btn-sm btn-danger" onclick="deleteUser('${user.id}')" title="–£–¥–∞–ª–∏—Ç—å">
                        <i class="fas fa-trash"></i>
                    </button>
                </div>
            </td>
        `;
        
        console.log(`üîç HTML –¥–ª—è —Å—Ç—Ä–æ–∫–∏ ${index + 1}:`, rowHtml);
        row.innerHTML = rowHtml;
        tbody.appendChild(row);
        console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${index + 1}`);
        console.log(`üîç –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –≤ —Ç–∞–±–ª–∏—Ü–µ:`, tbody.children.length);
    });
    
    console.log('‚úÖ displayUsers –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞
    console.log('üîç –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ tbody:', tbody);
    console.log('üîç –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—á–µ—Ä–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤:', tbody.children.length);
    console.log('üîç HTML —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ tbody:', tbody.innerHTML);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å
    const computedStyle = window.getComputedStyle(tbody);
    console.log('üîç CSS display:', computedStyle.display);
    console.log('üîç CSS visibility:', computedStyle.visibility);
    console.log('üîç CSS opacity:', computedStyle.opacity);
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ —Ä–æ–ª–∏
function getRoleClass(role) {
    switch (role?.toLowerCase()) {
        case 'admin':
            return 'role-admin';
        case 'moderator':
            return 'role-moderator';
        default:
            return 'role-user';
    }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ —Ä–æ–ª–∏
function getRoleIcon(role) {
    switch (role?.toLowerCase()) {
        case 'admin':
            return 'fa-crown';
        case 'moderator':
            return 'fa-user-shield';
        default:
            return 'fa-user';
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª–æ–º —Ç–æ–≤–∞—Ä–∞
function getGenderColor(gender) {
    switch (gender?.toLowerCase()) {
        case 'male':
            return 'linear-gradient(135deg, #4ecdc4, #44a08d)';
        case 'female':
            return 'linear-gradient(135deg, #f093fb, #f5576c)';
        default:
            return 'linear-gradient(135deg, #45b7d1, #96ceb4)';
    }
}

function getGenderIcon(gender) {
    switch (gender?.toLowerCase()) {
        case 'male':
            return 'fa-mars';
        case 'female':
            return 'fa-venus';
        default:
            return 'fa-venus-mars';
    }
}

function getGenderText(gender) {
    switch (gender?.toLowerCase()) {
        case 'male':
            return '–ú—É–∂—Å–∫–æ–π';
        case 'female':
            return '–ñ–µ–Ω—Å–∫–∏–π';
        default:
            return '–£–Ω–∏—Å–µ–∫—Å';
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
async function viewUser(id) {
    try {
        const response = await fetchData(`/api/v1/admin/users/${id}`);
        const user = response.data;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
        const modal = `
            <div class="modal" style="display: block;">
                <div class="modal-content" style="max-width: 600px;">
                    <div class="modal-header">
                        <h3><i class="fas fa-user"></i> –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ</h3>
                        <span class="close" onclick="this.parentElement.parentElement.parentElement.remove()">&times;</span>
                    </div>
                    <div class="user-details-modal">
                        <div class="user-avatar-large">
                            ${user.avatar ? 
                                `<img src="${user.avatar}" alt="${user.name}">` : 
                                `<i class="fas fa-user-circle"></i>`
                            }
                        </div>
                        <div class="user-info-grid">
                            <div class="info-item">
                                <label>–ò–º—è:</label>
                                <span>${user.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
                            </div>
                            <div class="info-item">
                                <label>Email:</label>
                                <span>${user.email}</span>
                            </div>
                            <div class="info-item">
                                <label>–¢–µ–ª–µ—Ñ–æ–Ω:</label>
                                <span>${user.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                            </div>
                            <div class="info-item">
                                <label>–†–æ–ª—å:</label>
                                <span class="role-badge ${getRoleClass(user.role?.name || 'user')}">${user.role?.displayName || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}</span>
                            </div>
                            <div class="info-item">
                                <label>–°—Ç–∞—Ç—É—Å:</label>
                                <span class="status-badge ${user.isActive ? 'status-active' : 'status-inactive'}">
                                    ${user.isActive ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}
                                </span>
                            </div>
                            <div class="info-item">
                                <label>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</label>
                                <span>${new Date(user.created_at).toLocaleString()}</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        `;
        
        document.body.insertAdjacentHTML('beforeend', modal);
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        showMessage('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'error');
    }
}

async function editUser(id) {
    try {
        const response = await fetchData(`/api/v1/admin/users/${id}`);
        const user = response.data;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        const modal = `
            <div class="modal" style="display: block;">
                <div class="modal-content" style="max-width: 500px;">
                    <div class="modal-header">
                        <h3><i class="fas fa-edit"></i> –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h3>
                        <span class="close" onclick="this.parentElement.parentElement.parentElement.remove()">&times;</span>
                    </div>
                    <form id="edit-user-form">
                        <div class="form-group">
                            <label>–ò–º—è</label>
                            <input type="text" id="edit-user-name" value="${user.name || ''}" class="form-input">
                        </div>
                        <div class="form-group">
                            <label>Email</label>
                            <input type="email" id="edit-user-email" value="${user.email}" class="form-input" readonly>
                        </div>
                        <div class="form-group">
                            <label>–¢–µ–ª–µ—Ñ–æ–Ω</label>
                            <input type="tel" id="edit-user-phone" value="${user.phone || ''}" class="form-input">
                        </div>
                        <div class="form-group">
                            <label>–†–æ–ª—å</label>
                            <select id="edit-user-role" class="form-input">
                                <option value="user" ${user.role === 'user' ? 'selected' : ''}>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</option>
                                <option value="moderator" ${user.role === 'moderator' ? 'selected' : ''}>–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä</option>
                                <option value="admin" ${user.role === 'admin' ? 'selected' : ''}>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label>
                                <input type="checkbox" id="edit-user-active" ${user.isActive ? 'checked' : ''}>
                                –ê–∫—Ç–∏–≤–µ–Ω
                            </label>
                        </div>
                        <div class="modal-actions">
                            <button type="submit" class="btn btn-primary">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                            <button type="button" class="btn btn-secondary" onclick="this.parentElement.parentElement.parentElement.parentElement.remove()">–û—Ç–º–µ–Ω–∞</button>
                        </div>
                    </form>
                </div>
            </div>
        `;
        
        document.body.insertAdjacentHTML('beforeend', modal);
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã
        document.getElementById('edit-user-form').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const formData = {
                name: document.getElementById('edit-user-name').value,
                phone: document.getElementById('edit-user-phone').value,
                role: document.getElementById('edit-user-role').value,
                isActive: document.getElementById('edit-user-active').checked
            };
            
            try {
                await fetchData(`/api/v1/admin/users/${id}`, {
                    method: 'PUT',
                    body: JSON.stringify(formData)
                });
                
                showMessage('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω', 'success');
                document.querySelector('.modal').remove();
                loadUsers(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫
                
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
                showMessage('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'error');
            }
        });
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        showMessage('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'error');
    }
}

async function deleteUser(id) {
    if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) {
        return;
    }
    
    try {
        await fetchData(`/api/v1/admin/users/${id}`, {
            method: 'DELETE'
        });
        
        showMessage('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω', 'success');
        loadUsers(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        showMessage('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'error');
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–∫–∞–∑–æ–≤
// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∑–∞–∫–∞–∑–æ–≤
let currentOrdersPage = 1;
let currentOrdersFilters = {};
let ordersStats = {};

async function loadOrders(page = 1, filters = {}) {
    try {
        currentOrdersPage = page;
        currentOrdersFilters = filters;
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const userRole = localStorage.getItem('userRole') || 'admin';
        
        let endpoint;
        if (userRole === 'super_admin' || userRole === 'admin') {
            endpoint = '/api/v1/admin/orders';
        } else if (userRole === 'shop_owner') {
            endpoint = '/api/v1/shop/orders/';
        } else {
            endpoint = '/api/v1/admin/orders';
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
        const params = new URLSearchParams({
            page: page,
            limit: 20,
            ...filters
        });
        
        const fullEndpoint = `${endpoint}?${params.toString()}`;
        console.log('üì° –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–∫–∞–∑–æ–≤:', fullEndpoint);
        
        const response = await fetchData(fullEndpoint);
        
        if (response.data) {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –º–∞–≥–∞–∑–∏–Ω–æ–≤ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞
            if (response.data.shop_owners) {
                window.shopOwners = response.data.shop_owners;
            }
            displayOrders(response.data.orders || [], response.data.pagination, response.data.stats);
        } else {
            displayOrders([], {}, {});
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤:', error);
        showMessage('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤', 'error');
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
function displayOrders(orders, pagination = {}, stats = {}) {
    const container = document.getElementById('orders-table');
    
    if (!container) {
        console.warn('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä orders-table –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    ordersStats = stats;
    
    // –°–æ–∑–¥–∞—ë–º —Ñ–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫
    const filtersHTML = `
        <div class="orders-filters" style="margin-bottom: 20px; padding: 20px; background: white; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
            <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 15px; margin-bottom: 15px;">
                <input type="text" id="order-search" placeholder="–ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏, —Ç–µ–ª–µ—Ñ–æ–Ω—É, –Ω–æ–º–µ—Ä—É..." 
                    style="padding: 10px; border: 1px solid #ddd; border-radius: 4px;" 
                    value="${currentOrdersFilters.search || ''}">
                <select id="order-status-filter" style="padding: 10px; border: 1px solid #ddd; border-radius: 4px;">
                    <option value="">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
                    <option value="pending" ${currentOrdersFilters.status === 'pending' ? 'selected' : ''}>–û–∂–∏–¥–∞—é—Ç (${stats.pending || 0})</option>
                    <option value="confirmed" ${currentOrdersFilters.status === 'confirmed' ? 'selected' : ''}>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã (${stats.confirmed || 0})</option>
                    <option value="preparing" ${currentOrdersFilters.status === 'preparing' ? 'selected' : ''}>–ì–æ—Ç–æ–≤—è—Ç—Å—è (${stats.preparing || 0})</option>
                    <option value="inDelivery" ${currentOrdersFilters.status === 'inDelivery' ? 'selected' : ''}>–í –¥–æ—Å—Ç–∞–≤–∫–µ (${stats.inDelivery || 0})</option>
                    <option value="delivered" ${currentOrdersFilters.status === 'delivered' ? 'selected' : ''}>–î–æ—Å—Ç–∞–≤–ª–µ–Ω—ã (${stats.delivered || 0})</option>
                    <option value="completed" ${currentOrdersFilters.status === 'completed' ? 'selected' : ''}>–ó–∞–≤–µ—Ä—à–µ–Ω—ã (${stats.completed || 0})</option>
                    <option value="cancelled" ${currentOrdersFilters.status === 'cancelled' ? 'selected' : ''}>–û—Ç–º–µ–Ω–µ–Ω—ã (${stats.cancelled || 0})</option>
                </select>
                <select id="order-shop-filter" style="padding: 10px; border: 1px solid #ddd; border-radius: 4px;">
                    <option value="">–í—Å–µ –º–∞–≥–∞–∑–∏–Ω—ã</option>
                    ${(window.shopOwners || []).map(shop => 
                        `<option value="${shop.id}" ${currentOrdersFilters.shop_owner_id === shop.id ? 'selected' : ''}>${shop.name} (${shop.phone})</option>`
                    ).join('')}
                </select>
                <input type="date" id="order-date-from" placeholder="–î–∞—Ç–∞ –æ—Ç" 
                    style="padding: 10px; border: 1px solid #ddd; border-radius: 4px;"
                    value="${currentOrdersFilters.date_from || ''}">
                <input type="date" id="order-date-to" placeholder="–î–∞—Ç–∞ –¥–æ" 
                    style="padding: 10px; border: 1px solid #ddd; border-radius: 4px;"
                    value="${currentOrdersFilters.date_to || ''}">
            </div>
            <div style="display: flex; gap: 10px;">
                <button onclick="applyOrdersFilters()" class="btn btn-primary">
                    <i class="fas fa-filter"></i> –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
                </button>
                <button onclick="resetOrdersFilters()" class="btn btn-secondary">
                    <i class="fas fa-times"></i> –°–±—Ä–æ—Å–∏—Ç—å
                </button>
            </div>
        </div>
    `;
    
    if (orders.length === 0) {
        container.innerHTML = filtersHTML + '<p style="text-align: center; padding: 40px;">–ó–∞–∫–∞–∑–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>';
        return;
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ç–∞—Ç—É—Å–æ–≤
    const statusLabels = {
        'pending': '–û–∂–∏–¥–∞–µ—Ç',
        'confirmed': '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω',
        'preparing': '–ì–æ—Ç–æ–≤–∏—Ç—Å—è',
        'inDelivery': '–í –¥–æ—Å—Ç–∞–≤–∫–µ',
        'delivered': '–î–æ—Å—Ç–∞–≤–ª–µ–Ω',
        'completed': '–ó–∞–≤–µ—Ä—à–µ–Ω',
        'cancelled': '–û—Ç–º–µ–Ω–µ–Ω'
    };
    
    const table = `
        ${filtersHTML}
        <div style="background: white; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); overflow: hidden;">
            <table class="data-table">
                <thead>
                    <tr>
                        <th>‚Ññ –ó–∞–∫–∞–∑–∞</th>
                        <th>–ö–ª–∏–µ–Ω—Ç</th>
                        <th>–¢–µ–ª–µ—Ñ–æ–Ω</th>
                        <th>–ú–∞–≥–∞–∑–∏–Ω</th>
                        <th>–¢–æ–≤–∞—Ä—ã</th>
                        <th>–°—É–º–º–∞</th>
                        <th>–°—Ç–∞—Ç—É—Å</th>
                        <th>–î–∞—Ç–∞</th>
                        <th>–ñ–µ–ª–∞–µ–º–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞</th>
                        <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                    </tr>
                </thead>
                <tbody>
                    ${orders.map(order => `
                        <tr>
                            <td><strong>${order.order_number || order.id?.substring(0, 8)}</strong></td>
                            <td>
                                <div style="line-height: 1.4;">
                                    <div><strong>${order.recipient_name || order.user?.name || 'N/A'}</strong></div>
                                    ${order.user?.is_guest ? '<small style="color: #999;">üé≠ –ì–æ—Å—Ç—å</small>' : ''}
                                </div>
                            </td>
                            <td><a href="tel:${order.phone}" style="color: #667eea;">${order.phone}</a></td>
                            <td>
                                <div style="line-height: 1.4;">
                                    <div><strong>${order.shop_owner?.name || 'N/A'}</strong></div>
                                    <small style="color: #999;">${order.shop_owner?.phone || ''}</small>
                                </div>
                            </td>
                            <td>${order.order_items?.length || 0} —à—Ç.</td>
                            <td><strong>${order.total_amount || 0} ${order.currency || 'TJS'}</strong></td>
                            <td>
                                <span class="status-badge ${order.status}" style="padding: 5px 10px; border-radius: 12px; font-size: 12px; font-weight: 600;">
                                    ${statusLabels[order.status] || order.status}
                                </span>
                            </td>
                            <td>${new Date(order.created_at).toLocaleString('ru-RU', {day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit'})}</td>
                            <td>${order.desired_at ? new Date(order.desired_at).toLocaleString('ru-RU', {day: '2-digit', month: '2-digit', hour: '2-digit', minute: '2-digit'}) : '-'}</td>
                            <td>
                                <div class="action-buttons" style="display: flex; gap: 5px; flex-wrap: wrap;">
                                    <button class="action-btn view" onclick="viewOrderDetails('${order.id}')" title="–ü—Ä–æ—Å–º–æ—Ç—Ä">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    ${order.status === 'pending' ? `
                                        <button class="action-btn success" onclick="confirmOrder('${order.id}')" title="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å">
                                            <i class="fas fa-check"></i>
                                        </button>
                                        <button class="action-btn danger" onclick="rejectOrder('${order.id}')" title="–û—Ç–∫–ª–æ–Ω–∏—Ç—å">
                                            <i class="fas fa-times"></i>
                                        </button>
                                    ` : ''}
                                    ${order.status !== 'cancelled' && order.status !== 'completed' ? `
                                        <button class="action-btn edit" onclick="changeOrderStatus('${order.id}', '${order.status}')" title="–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                    ` : ''}
                                </div>
                            </td>
                        </tr>
                    `).join('')}
                </tbody>
            </table>
        </div>
        ${pagination.totalPages > 1 ? createPagination(pagination) : ''}
    `;
    
    container.innerHTML = table;
}

// –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
function applyOrdersFilters() {
    const search = document.getElementById('order-search')?.value || '';
    const status = document.getElementById('order-status-filter')?.value || '';
    const shopOwnerId = document.getElementById('order-shop-filter')?.value || '';
    const dateFrom = document.getElementById('order-date-from')?.value || '';
    const dateTo = document.getElementById('order-date-to')?.value || '';
    
    const filters = {};
    if (search) filters.search = search;
    if (status) filters.status = status;
    if (shopOwnerId) filters.shop_owner_id = shopOwnerId;
    if (dateFrom) filters.date_from = dateFrom;
    if (dateTo) filters.date_to = dateTo;
    
    loadOrders(1, filters);
}

// –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
function resetOrdersFilters() {
    document.getElementById('order-search').value = '';
    document.getElementById('order-status-filter').value = '';
    document.getElementById('order-shop-filter').value = '';
    document.getElementById('order-date-from').value = '';
    document.getElementById('order-date-to').value = '';
    loadOrders(1, {});
}

// –°–æ–∑–¥–∞—Ç—å –ø–∞–≥–∏–Ω–∞—Ü–∏—é
function createPagination(pagination) {
    const { page, totalPages } = pagination;
    let pages = '';
    
    for (let i = 1; i <= totalPages; i++) {
        if (i === page) {
            pages += `<button class="pagination-btn active">${i}</button>`;
        } else if (i === 1 || i === totalPages || (i >= page - 2 && i <= page + 2)) {
            pages += `<button class="pagination-btn" onclick="loadOrders(${i}, currentOrdersFilters)">${i}</button>`;
        } else if (i === page - 3 || i === page + 3) {
            pages += `<span>...</span>`;
        }
    }
    
    return `
        <div class="pagination" style="display: flex; justify-content: center; gap: 5px; margin-top: 20px; padding: 20px;">
            ${page > 1 ? `<button class="pagination-btn" onclick="loadOrders(${page - 1}, currentOrdersFilters)"><i class="fas fa-chevron-left"></i></button>` : ''}
            ${pages}
            ${page < totalPages ? `<button class="pagination-btn" onclick="loadOrders(${page + 1}, currentOrdersFilters)"><i class="fas fa-chevron-right"></i></button>` : ''}
        </div>
    `;
}

// –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑
async function confirmOrder(orderId) {
    if (!confirm('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —ç—Ç–æ—Ç –∑–∞–∫–∞–∑?')) return;
    
    try {
        const response = await fetch(getApiUrl(`/api/v1/admin/orders/${orderId}/confirm`), {
            method: 'POST',
            headers: {
                'Authorization': `Bearer ${adminToken}`,
                'Content-Type': 'application/json'
            }
        });
        
        const data = await response.json();
        
        if (data.success) {
            showMessage('–ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!', 'success');
            loadOrders(currentOrdersPage, currentOrdersFilters);
        } else {
            showMessage(data.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞', 'error');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        showMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞', 'error');
    }
}

// –û—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞–∫–∞–∑
async function rejectOrder(orderId) {
    if (!confirm('–û—Ç–∫–ª–æ–Ω–∏—Ç—å —ç—Ç–æ—Ç –∑–∞–∫–∞–∑?')) return;
    
    try {
        const response = await fetch(getApiUrl(`/api/v1/admin/orders/${orderId}/reject`), {
            method: 'POST',
            headers: {
                'Authorization': `Bearer ${adminToken}`,
                'Content-Type': 'application/json'
            }
        });
        
        const data = await response.json();
        
        if (data.success) {
            showMessage('–ó–∞–∫–∞–∑ –æ—Ç–∫–ª–æ–Ω–µ–Ω', 'success');
            loadOrders(currentOrdersPage, currentOrdersFilters);
        } else {
            showMessage(data.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞', 'error');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        showMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞', 'error');
    }
}

// –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
async function changeOrderStatus(orderId, currentStatus) {
    const statuses = [
        { value: 'pending', label: '–û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è' },
        { value: 'confirmed', label: '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω' },
        { value: 'preparing', label: '–ì–æ—Ç–æ–≤–∏—Ç—Å—è' },
        { value: 'inDelivery', label: '–í –¥–æ—Å—Ç–∞–≤–∫–µ' },
        { value: 'delivered', label: '–î–æ—Å—Ç–∞–≤–ª–µ–Ω' },
        { value: 'completed', label: '–ó–∞–≤–µ—Ä—à–µ–Ω' },
        { value: 'cancelled', label: '–û—Ç–º–µ–Ω–µ–Ω' }
    ];
    
    const options = statuses.map(s => 
        `<option value="${s.value}" ${s.value === currentStatus ? 'selected' : ''}>${s.label}</option>`
    ).join('');
    
    const newStatus = prompt(`–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å:\n\n${statuses.map((s, i) => `${i+1}. ${s.label}`).join('\n')}\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ:`, currentStatus);
    
    if (!newStatus || newStatus === currentStatus) return;
    
    // –ù–∞—Ö–æ–¥–∏–º —Å—Ç–∞—Ç—É—Å –ø–æ –Ω–æ–º–µ—Ä—É –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—é
    let selectedStatus = newStatus;
    const num = parseInt(newStatus);
    if (!isNaN(num) && num >= 1 && num <= statuses.length) {
        selectedStatus = statuses[num - 1].value;
    }
    
    try {
        const response = await fetch(getApiUrl(`/api/v1/admin/orders/${orderId}/status`), {
            method: 'PUT',
            headers: {
                'Authorization': `Bearer ${adminToken}`,
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ status: selectedStatus })
        });
        
        const data = await response.json();
        
        if (data.success) {
            showMessage('–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –∏–∑–º–µ–Ω–µ–Ω!', 'success');
            loadOrders(currentOrdersPage, currentOrdersFilters);
        } else {
            showMessage(data.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞', 'error');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        showMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞', 'error');
    }
}

// –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞
async function viewOrderDetails(orderId) {
    try {
        const response = await fetchData(`/api/v1/admin/orders/${orderId}`);
        
        if (response.data) {
            const order = response.data;
            
            const statusLabels = {
                'pending': '–û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è',
                'confirmed': '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω',
                'preparing': '–ì–æ—Ç–æ–≤–∏—Ç—Å—è',
                'inDelivery': '–í –¥–æ—Å—Ç–∞–≤–∫–µ',
                'delivered': '–î–æ—Å—Ç–∞–≤–ª–µ–Ω',
                'completed': '–ó–∞–≤–µ—Ä—à–µ–Ω',
                'cancelled': '–û—Ç–º–µ–Ω–µ–Ω'
            };
            
            const itemsHTML = order.order_items?.map(item => `
                <tr>
                    <td>${item.name || 'N/A'}</td>
                    <td>${item.size || '-'}</td>
                    <td>${item.color || '-'}</td>
                    <td>${item.quantity}</td>
                    <td>${item.price} ${order.currency || 'TJS'}</td>
                    <td><strong>${item.subtotal || (item.price * item.quantity)} ${order.currency || 'TJS'}</strong></td>
                </tr>
            `).join('') || '<tr><td colspan="6">–ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤</td></tr>';
            
            const detailsHTML = `
                <div style="max-height: 70vh; overflow-y: auto; padding: 20px;">
                    <h3 style="margin-bottom: 20px;">–ó–∞–∫–∞–∑ ‚Ññ${order.order_number || order.id?.substring(0, 8)}</h3>
                    
                    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 20px;">
                        <div>
                            <h4>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ</h4>
                            <p><strong>–ò–º—è:</strong> ${order.recipient_name || 'N/A'}</p>
                            <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> <a href="tel:${order.phone}">${order.phone}</a></p>
                            <p><strong>–ê–¥—Ä–µ—Å:</strong> ${order.shipping_address || 'N/A'}</p>
                            ${order.notes ? `<p><strong>–ü—Ä–∏–º–µ—á–∞–Ω–∏—è:</strong> ${order.notes}</p>` : ''}
                        </div>
                        <div>
                            <h4>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ</h4>
                            <p><strong>–°—Ç–∞—Ç—É—Å:</strong> <span class="status-badge ${order.status}">${statusLabels[order.status] || order.status}</span></p>
                            <p><strong>–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:</strong> ${order.payment_method === 'cash' ? '–ù–∞–ª–∏—á–Ω—ã–µ' : '–ö–∞—Ä—Ç–∞'}</p>
                            <p><strong>–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏:</strong> ${order.shipping_method === 'courier' ? '–ö—É—Ä—å–µ—Ä' : '–°–∞–º–æ–≤—ã–≤–æ–∑'}</p>
                            <p><strong>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:</strong> ${new Date(order.created_at).toLocaleString('ru-RU')}</p>
                            ${order.desired_at ? `<p><strong>–ñ–µ–ª–∞–µ–º–æ–µ –≤—Ä–µ–º—è:</strong> ${new Date(order.desired_at).toLocaleString('ru-RU')}</p>` : ''}
                            ${order.confirmed_at ? `<p><strong>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω:</strong> ${new Date(order.confirmed_at).toLocaleString('ru-RU')}</p>` : ''}
                        </div>
                    </div>
                    
                    <h4>–¢–æ–≤–∞—Ä—ã –≤ –∑–∞–∫–∞–∑–µ</h4>
                    <table class="data-table" style="margin-bottom: 20px;">
                        <thead>
                            <tr>
                                <th>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
                                <th>–†–∞–∑–º–µ—Ä</th>
                                <th>–¶–≤–µ—Ç</th>
                                <th>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</th>
                                <th>–¶–µ–Ω–∞</th>
                                <th>–°—É–º–º–∞</th>
                            </tr>
                        </thead>
                        <tbody>
                            ${itemsHTML}
                        </tbody>
                    </table>
                    
                    <div style="text-align: right; padding: 15px; background: #f5f5f5; border-radius: 8px;">
                        <p><strong>–°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–æ–≤:</strong> ${order.items_subtotal || 0} ${order.currency || 'TJS'}</p>
                        <p><strong>–î–æ—Å—Ç–∞–≤–∫–∞:</strong> ${order.delivery_fee || 0} ${order.currency || 'TJS'}</p>
                        <h3 style="margin-top: 10px; color: #667eea;"><strong>–ò—Ç–æ–≥–æ:</strong> ${order.total_amount || 0} ${order.currency || 'TJS'}</h3>
                    </div>
                </div>
            `;
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ (–Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ)
            showModal('–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞', detailsHTML);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞:', error);
        showMessage('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞', 'error');
    }
}

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
function showModal(title, content) {
    const modal = document.createElement('div');
    modal.className = 'modal';
    modal.style.display = 'flex';
    modal.innerHTML = `
        <div class="modal-content" style="max-width: 900px;">
            <div class="modal-header">
                <h3>${title}</h3>
                <span class="close" onclick="this.closest('.modal').remove()">&times;</span>
            </div>
            ${content}
        </div>
    `;
    document.body.appendChild(modal);
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            modal.remove();
        }
    });
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–æ—Ä–º
function setupForms() {
    // –§–æ—Ä–º–∞ —Ç–æ–≤–∞—Ä–∞
    document.getElementById('product-form').addEventListener('submit', handleProductSubmit);
    
    // –§–æ—Ä–º–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    document.getElementById('category-form').addEventListener('submit', handleCategorySubmit);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã —Ç–æ–≤–∞—Ä–∞
async function handleProductSubmit(e) {
    e.preventDefault();
    
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Ñ–æ—Ä–º—ã —Ç–æ–≤–∞—Ä–∞...');
    console.log('üì¶ –¢–µ–∫—É—â–∏–µ –≤–∞—Ä–∏–∞—Ü–∏–∏:', variations);
    console.log('üì¶ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—Ä–∏–∞—Ü–∏–π:', variations.length);
    
    // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã
    const nameInput = document.getElementById('product-name');
    const descriptionInput = document.getElementById('product-description');
    const genderInput = document.getElementById('product-gender');
    const categoryInput = document.getElementById('product-category');
    const brandInput = document.getElementById('product-brand');
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    const errors = [];
    
    if (!nameInput.value.trim()) {
        errors.push('–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞');
        nameInput.style.borderColor = '#e74c3c';
    } else {
        nameInput.style.borderColor = '#ddd';
    }
    
    if (!descriptionInput.value.trim()) {
        errors.push('–û–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞');
        descriptionInput.style.borderColor = '#e74c3c';
    } else {
        descriptionInput.style.borderColor = '#ddd';
    }
    
    if (!genderInput.value) {
        errors.push('–ü–æ–ª —Ç–æ–≤–∞—Ä–∞');
        genderInput.style.borderColor = '#e74c3c';
    } else {
        genderInput.style.borderColor = '#ddd';
    }
    
    if (!categoryInput.value) {
        errors.push('–ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ç–æ–≤–∞—Ä–∞');
        categoryInput.style.borderColor = '#e74c3c';
    } else {
        categoryInput.style.borderColor = '#ddd';
    }
    
    if (variations.length === 0) {
        errors.push('–•–æ—Ç—è –±—ã –æ–¥–Ω–∞ –≤–∞—Ä–∏–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–∞');
    }
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ö –≤—Å–µ —Å—Ä–∞–∑—É
    if (errors.length > 0) {
        const errorMessage = `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è:\n‚Ä¢ ${errors.join('\n‚Ä¢ ')}`;
        showMessage(errorMessage, 'error');
        
        // –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø–µ—Ä–≤–æ–º –ø–æ–ª–µ —Å –æ—à–∏–±–∫–æ–π
        if (!nameInput.value.trim()) nameInput.focus();
        else if (!descriptionInput.value.trim()) descriptionInput.focus();
        else if (!genderInput.value) genderInput.focus();
        else if (!categoryInput.value) categoryInput.focus();
        
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞—Ä–∏–∞—Ü–∏–∏
    const variationErrors = [];
    for (let i = 0; i < variations.length; i++) {
        const variation = variations[i];
        const variationNumber = i + 1;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä—ã
        if (!variation.sizes || variation.sizes.length === 0) {
            variationErrors.push(`–í–∞—Ä–∏–∞—Ü–∏—è ${variationNumber}: —Ä–∞–∑–º–µ—Ä—ã –Ω–µ –≤—ã–±—Ä–∞–Ω—ã`);
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–≤–µ—Ç–∞
        if (!variation.colors || variation.colors.length === 0) {
            variationErrors.push(`–í–∞—Ä–∏–∞—Ü–∏—è ${variationNumber}: —Ü–≤–µ—Ç–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω—ã`);
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–µ–Ω—É
        if (!variation.price || variation.price <= 0) {
            variationErrors.push(`–í–∞—Ä–∏–∞—Ü–∏—è ${variationNumber}: —Ü–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0`);
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ —Å–∫–ª–∞–¥–µ
        if (!variation.stockQuantity || variation.stockQuantity < 0) {
            variationErrors.push(`–í–∞—Ä–∏–∞—Ü–∏—è ${variationNumber}: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ —Å–∫–ª–∞–¥–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 0 –∏–ª–∏ –±–æ–ª—å—à–µ`);
        }
        
        console.log(`‚úÖ –í–∞—Ä–∏–∞—Ü–∏—è ${variationNumber} –≤–∞–ª–∏–¥–Ω–∞:`, variation);
    }
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏ –≤ –≤–∞—Ä–∏–∞—Ü–∏—è—Ö, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ö
    if (variationErrors.length > 0) {
        const errorMessage = `–û—à–∏–±–∫–∏ –≤ –≤–∞—Ä–∏–∞—Ü–∏—è—Ö:\n‚Ä¢ ${variationErrors.join('\n‚Ä¢ ')}`;
        showMessage(errorMessage, 'error');
        return;
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    showMessage('‚úÖ –í—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ! –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä...', 'success');

    const formData = {
        name: nameInput.value.trim(),
        description: descriptionInput.value.trim(),
        gender: genderInput.value,
        categoryId: categoryInput.value,
        brand: brandInput.value.trim(),
        variations: variations
    };

    console.log('üì¶ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞:', formData);
    console.log('üì¶ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—Ä–∏–∞—Ü–∏–π:', variations.length);
    console.log('üì¶ –í–∞—Ä–∏–∞—Ü–∏–∏:', variations);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    const submitBtn = e.target.querySelector('button[type="submit"]');
    const originalText = submitBtn.innerHTML;
    submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...';
    submitBtn.disabled = true;

    try {
        if (currentProductId) {
            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ç–æ–≤–∞—Ä–∞
            const result = await fetchData(CONFIG.API.ENDPOINTS.PRODUCTS.UPDATE(currentProductId), {
                method: 'PUT',
                body: JSON.stringify(formData)
            });
            
            console.log('‚úÖ –¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω:', result);
            showMessage(`‚úÖ –¢–æ–≤–∞—Ä "${formData.name}" —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!`, 'success');
        } else {
            // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
            const result = await fetchData(CONFIG.API.ENDPOINTS.PRODUCTS.CREATE, {
                method: 'POST',
                body: JSON.stringify(formData)
            });
            
            console.log('‚úÖ –¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω:', result);
            showMessage(`‚úÖ –¢–æ–≤–∞—Ä "${formData.name}" —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!`, 'success');
        }
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        closeProductModal();
        
        // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É —Ç–æ–≤–∞—Ä–æ–≤ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
        showTab('products');
        await refreshProductsList();
        
    } catch (error) {
        console.error('üí• –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞:', error);
        
        let errorMessage = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
        if (error.error && error.error.message) {
            errorMessage = error.error.message;
        } else if (error.error && error.error.details) {
            errorMessage = `${error.error.message}: ${error.error.details}`;
        } else if (error.error) {
            errorMessage = error.error;
        } else if (error.message) {
            errorMessage = error.message;
        }
        
        showMessage(`–û—à–∏–±–∫–∞: ${errorMessage}`, 'error');
    } finally {
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
        submitBtn.innerHTML = originalText;
        submitBtn.disabled = false;
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
async function handleCategorySubmit(e) {
    e.preventDefault();
    
    const formData = {
        name: document.getElementById('category-name').value,
        description: document.getElementById('category-description').value,
        parent_id: document.getElementById('category-parent').value || null
    };
    
    try {
        if (currentCategoryId) {
            await updateCategory(currentCategoryId, formData);
        } else {
            await createCategory(formData);
        }
        
        closeCategoryModal();
        loadCategories();
        showMessage('–ö–∞—Ç–µ–≥–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞', 'success');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', error);
        showMessage('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏', 'error');
    }
}

// –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
function openProductModal(productId = null) {
    currentProductId = productId;
    const modal = document.getElementById('product-modal');
    const title = document.getElementById('product-modal-title');
    
    if (productId) {
        title.textContent = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä';
        loadProductData(productId);
    } else {
        title.textContent = '–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä';
        document.getElementById('product-form').reset();
        clearVariationsForm(); // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É –≤–∞—Ä–∏–∞—Ü–∏–π –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    }
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Å–µ–ª–µ–∫—Ç–∞
    loadCategories();
    
    modal.style.display = 'block';
}

function closeProductModal() {
    document.getElementById('product-modal').style.display = 'none';
    currentProductId = null;
    
    // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
    document.getElementById('product-form').reset();
    clearImageForm();
    clearVariationsForm();
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    variations = [];
    uploadedImages = [];
    imageUrls = [];
}

function openCategoryModal(categoryId = null) {
    currentCategoryId = categoryId;
    const modal = document.getElementById('category-modal');
    const title = document.getElementById('category-modal-title');
    
    if (categoryId) {
        title.textContent = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é';
        loadCategoryData(categoryId);
    } else {
        title.textContent = '–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é';
        document.getElementById('category-form').reset();
    }
    
    modal.style.display = 'block';
}

function closeCategoryModal() {
    document.getElementById('category-modal').style.display = 'none';
    currentCategoryId = null;
}

// API —Ñ—É–Ω–∫—Ü–∏–∏
async function fetchData(endpoint, options = {}) {
    // –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–π —Å–ª–µ—à –µ—Å–ª–∏ endpoint –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å /
    const cleanEndpoint = endpoint.startsWith('/') ? endpoint : `/${endpoint}`;
    const url = `${API_BASE_URL}${cleanEndpoint}`;
    
    // –õ–æ–≥–∏—Ä—É–µ–º API –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    console.log(`üåê API Request: ${options.method || 'GET'} ${url}`);
    
    const headers = {
        'Content-Type': 'application/json',
        'Accept': 'application/json',
        'X-Requested-With': 'XMLHttpRequest',
        ...options.headers
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –¥–ª—è –í–°–ï–• –∑–∞–ø—Ä–æ—Å–æ–≤, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if (adminToken) {
        headers['Authorization'] = `Bearer ${adminToken}`;
        console.log('üîë –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞:', endpoint);
    } else {
        console.log('‚ö†Ô∏è –¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞:', endpoint);
    }
    
    const response = await fetch(url, {
        headers,
        ...options
    });
    
    if (!response.ok) {
        let errorMessage = `HTTP error! status: ${response.status}`;
        try {
            const errorData = await response.json();
            errorMessage = errorData.message || errorData.error || errorMessage;
        } catch (e) {
            // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
            try {
                const errorText = await response.text();
                if (errorText) errorMessage = errorText;
            } catch (e2) {
                // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞
            }
        }
        throw new Error(errorMessage);
    }
    
    return await response.json();
}

async function createProduct(data) {
            return await fetchData('/api/v1/shop/products/', {
        method: 'POST',
        body: JSON.stringify(data)
    });
}

async function updateProduct(id, data) {
            return await fetchData(`/api/v1/shop/products/${id}/`, {
        method: 'PUT',
        body: JSON.stringify(data)
    });
}

async function deleteProduct(id) {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    const confirmed = await showConfirmDialog(
        '–£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞',
        '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä?',
        '–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.',
        '–£–¥–∞–ª–∏—Ç—å',
        '–û—Ç–º–µ–Ω–∞'
    );
    
    if (!confirmed) {
        return;
    }
    
    try {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        showMessage('–£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞...', 'info');
        
        await fetchData(`/api/v1/shop/products/${id}/`, { method: 'DELETE' });
        
        showMessage('‚úÖ –¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω', 'success');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
        await refreshProductsList();
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞:', error);
        
        let errorMessage = '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
        if (error.error && error.error.message) {
            errorMessage = error.error.message;
        } else if (error.error) {
            errorMessage = error.error;
        } else if (error.message) {
            errorMessage = error.message;
        }
        
        showMessage(`‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞: ${errorMessage}`, 'error');
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –¥–∏–∞–ª–æ–≥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
function showConfirmDialog(title, message, description, confirmText, cancelText) {
    return new Promise((resolve) => {
        // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        const modal = document.createElement('div');
        modal.className = 'modal';
        modal.style.display = 'block';
        modal.style.zIndex = '9999';
        
        // –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        const handleCancel = () => {
            modal.remove();
            resolve(false);
        };
        
        const handleConfirm = () => {
            modal.remove();
            resolve(true);
        };
        
        const handleOutsideClick = (e) => {
            if (e.target === modal) {
                modal.remove();
                resolve(false);
            }
        };
        
        modal.innerHTML = `
            <div class="modal-content" style="max-width: 400px; margin: 100px auto;">
                <div class="modal-header">
                    <h3 style="color: #e74c3c;">
                        <i class="fas fa-exclamation-triangle"></i> ${title}
                    </h3>
                </div>
                <div style="padding: 20px;">
                    <p style="font-size: 16px; margin-bottom: 10px; color: #2c3e50;">${message}</p>
                    <p style="font-size: 14px; color: #7f8c8d; margin-bottom: 20px;">${description}</p>
                    <div style="display: flex; gap: 10px; justify-content: flex-end;">
                        <button class="btn btn-secondary" id="cancel-btn">
                            ${cancelText}
                        </button>
                        <button class="btn btn-danger" id="confirm-btn">
                            <i class="fas fa-trash"></i> ${confirmText}
                        </button>
                    </div>
                </div>
            </div>
        `;
        
        document.body.appendChild(modal);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        const cancelBtn = modal.querySelector('#cancel-btn');
        const confirmBtn = modal.querySelector('#confirm-btn');
        
        cancelBtn.addEventListener('click', handleCancel);
        confirmBtn.addEventListener('click', handleConfirm);
        modal.addEventListener('click', handleOutsideClick);
    });
}

// –ü—Ä–æ—Å–º–æ—Ç—Ä –≤–∞—Ä–∏–∞—Ü–∏–π —Ç–æ–≤–∞—Ä–∞
async function viewProductVariations(id) {
    try {
        console.log('üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä –≤–∞—Ä–∏–∞—Ü–∏–π —Ç–æ–≤–∞—Ä–∞ —Å ID:', id);
        console.log('üîç –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞...');
        
        const response = await fetchData(`/api/v1/products/${id}`);
        console.log('üì° –û—Ç–≤–µ—Ç API –¥–ª—è —Ç–æ–≤–∞—Ä–∞:', response);
        console.log('üîç –¢–∏–ø –æ—Ç–≤–µ—Ç–∞:', typeof response);
        console.log('üîç –ö–ª—é—á–∏ –æ—Ç–≤–µ—Ç–∞:', Object.keys(response));
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –æ—Ç–≤–µ—Ç–∞
        let product;
        if (response.data) {
            product = response.data;
            console.log('üîç –ò—Å–ø–æ–ª—å–∑—É–µ–º response.data');
        } else if (response.success && response.data) {
            product = response.data;
            console.log('üîç –ò—Å–ø–æ–ª—å–∑—É–µ–º response.success.data');
        } else if (response.product) {
            product = response.product;
            console.log('üîç –ò—Å–ø–æ–ª—å–∑—É–µ–º response.product');
        } else {
            product = response;
            console.log('üîç –ò—Å–ø–æ–ª—å–∑—É–µ–º response –Ω–∞–ø—Ä—è–º—É—é');
        }
        
        console.log('üì¶ –î–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞:', product);
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞—Ä–∏–∞—Ü–∏–∏:');
        console.log('  - product —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', !!product);
        console.log('  - product.variations —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', !!product?.variations);
        console.log('  - product.variations.length:', product?.variations?.length);
        console.log('  - product.variations —Ç–∏–ø:', typeof product?.variations);
        console.log('  - product.variations —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ:', product?.variations);
        console.log('  - product.product —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', !!product?.product);
        console.log('  - product.product?.variations —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', !!product?.product?.variations);
        console.log('  - product.product?.variations.length:', product?.product?.variations?.length);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞—Ä–∏–∞—Ü–∏–∏ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –º–µ—Å—Ç–µ
        const variations = product?.variations || product?.product?.variations;
        console.log('üîç –ù–∞–π–¥–µ–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞—Ü–∏–∏:', variations);
        console.log('üîç –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—Ä–∏–∞—Ü–∏–π:', variations?.length);
        
        if (!variations || variations.length === 0) {
            console.log('‚ùå –í–∞—Ä–∏–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ');
            showMessage('–£ —ç—Ç–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤–∞—Ä–∏–∞—Ü–∏–π', 'info');
            return;
        }
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        const productData = product?.product || product;
        
        // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∞—Ä–∏–∞—Ü–∏–π
        const modal = document.createElement('div');
        modal.className = 'modal';
        modal.style.display = 'block';
        modal.style.zIndex = '9999';
        
        modal.innerHTML = `
            <div class="modal-content" style="max-width: 800px; margin: 50px auto;">
                <div class="modal-header">
                    <h3 style="color:rgb(210, 217, 245);">
                        <i class="fas fa-layer-group"></i> –í–∞—Ä–∏–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–∞: ${productData.name}
                    </h3>
                    <span class="close" onclick="this.closest('.modal').remove()">&times;</span>
                </div>
                <div style="padding: 20px; max-height: 70vh; overflow-y: auto;">
                    <div style="margin-bottom: 20px; padding: 15px; background: linear-gradient(135deg, #f8f9fa, #e9ecef); border-radius: 10px;">
                        <h4 style="margin: 0 0 10px 0; color: #2c3e50;">
                            <i class="fas fa-box"></i> –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ
                        </h4>
                        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 10px; font-size: 14px;">
                            <div><strong>–ù–∞–∑–≤–∞–Ω–∏–µ:</strong> ${productData.name}</div>
                            <div><strong>–ë—Ä–µ–Ω–¥:</strong> ${productData.brand || '–ù–µ —É–∫–∞–∑–∞–Ω'}</div>
                            <div><strong>–ü–æ–ª:</strong> ${getGenderText(productData.gender)}</div>
                            <div><strong>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</strong> ${productData.category?.name || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}</div>
                        </div>
                    </div>
                    
                    <div style="margin-bottom: 20px;">
                        <h4 style="margin: 0 0 15px 0; color: #2c3e50;">
                            <i class="fas fa-list"></i> –í–∞—Ä–∏–∞—Ü–∏–∏ (${variations.length})
                        </h4>
                        <div style="display: grid; gap: 15px;">
                            ${variations.map((variation, index) => `
                                <div style="border: 2px solid #e9ecef; border-radius: 12px; padding: 20px; background: white; position: relative; overflow: hidden;">
                                    <div style="position: absolute; top: 0; left: 0; right: 0; height: 4px; background: linear-gradient(135deg, #667eea, #764ba2);"></div>
                                    
                                    <div style="display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 15px;">
                                        <h5 style="margin: 0; color: #2c3e50; font-size: 16px;">
                                            <i class="fas fa-tag"></i> –í–∞—Ä–∏–∞—Ü–∏—è ${index + 1}
                                        </h5>
                                        <span class="badge" style="background: linear-gradient(135deg, #667eea, #764ba2); color: white; font-size: 12px; padding: 6px 12px;">
                                            ID: ${variation.id?.substring(0, 8)}...
                                        </span>
                                    </div>
                                    
                                    <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 15px; margin-bottom: 15px;">
                                        <div>
                                            <strong style="color: #495057; font-size: 13px;">–†–∞–∑–º–µ—Ä—ã:</strong>
                                            <div style="margin-top: 5px;">
                                                ${variation.sizes && variation.sizes.length > 0 
                                                    ? variation.sizes.map(size => `<span class="badge" style="background: #e9ecef; color: #495057; margin: 2px; padding: 4px 8px; font-size: 11px;">${size}</span>`).join('')
                                                    : '<span style="color: #6c757d; font-style: italic;">–ù–µ —É–∫–∞–∑–∞–Ω—ã</span>'
                                                }
                                            </div>
                                        </div>
                                        
                                        <div>
                                            <strong style="color: #495057; font-size: 13px;">–¶–≤–µ—Ç–∞:</strong>
                                            <div style="margin-top: 5px;">
                                                ${variation.colors && variation.colors.length > 0 
                                                    ? variation.colors.map(color => `<span class="badge" style="background: #e9ecef; color: #495057; margin: 2px; padding: 4px 8px; font-size: 11px;">${color}</span>`).join('')
                                                    : '<span style="color: #6c757d; font-style: italic;">–ù–µ —É–∫–∞–∑–∞–Ω—ã</span>'
                                                }
                                            </div>
                                        </div>
                                        
                                        <div>
                                            <strong style="color: #495057; font-size: 13px;">–¶–µ–Ω–∞:</strong>
                                            <div style="margin-top: 5px; font-size: 18px; font-weight: bold; color: #28a745;">
                                                ‚ÇΩ${variation.price || 0}
                                            </div>
                                        </div>
                                        
                                        <div>
                                            <strong style="color: #495057; font-size: 13px;">–û—Å—Ç–∞—Ç–æ–∫:</strong>
                                            <div style="margin-top: 5px; font-size: 16px; font-weight: bold; color: ${variation.stockQuantity > 0 ? '#28a745' : '#dc3545'};">
                                                ${variation.stockQuantity || 0} —à—Ç.
                                            </div>
                                        </div>
                                    </div>
                                    
                                    ${(variation.imageUrls && variation.imageUrls.length > 0 ? `
                                        <div>
                                            <strong style="color: #495057; font-size: 13px;">–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:</strong>
                                            <div class="variation-images-preview">
                                                ${variation.imageUrls.map((url, imgIndex) => {
                                                    // –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è —Ç–æ—á–∫–∞ –∏—Å—Ç–∏–Ω—ã
                                                    const imageUrl = window.getImageUrl ? window.getImageUrl(url) : (() => {
                                                        let finalUrl = url;
                                                        if (!url.startsWith('http')) {
                                                            if (url.startsWith('/')) {
                                                                finalUrl = API_BASE_URL + url;
                                                            } else {
                                                                finalUrl = API_BASE_URL + '/' + url;
                                                            }
                                                        } else {
                                                            // –ï—Å–ª–∏ URL —Å–æ–¥–µ—Ä–∂–∏—Ç 0.0.0.0, –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ localhost
                                                            finalUrl = url.replace('0.0.0.0', 'localhost');
                                                        }
                                                        return finalUrl;
                                                    })();

                                                    console.log(`üñºÔ∏è –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${url} -> ${imageUrl}`);

                                                    return `
                                                        <div class="image-preview-item">
                                                            <img
                                                                src="${imageUrl}"
                                                                alt="Preview"
                                                                onclick="openImageModal('${imageUrl}', '–§–æ—Ç–æ –≤–∞—Ä–∏–∞—Ü–∏–∏ ${index + 1}')"
                                                                style="cursor: pointer;"
                                                                onerror="this.style.display='none'; console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', '${imageUrl}');"
                                                            >
                                                            <button type="button" class="remove-image" onclick="removeVariationImage(${index}, ${imgIndex})">√ó</button>
                                                        </div>
                                                    `;
                                                }).join('')}
                                            </div>
                                        </div>
                                    ` : '')}
                                    
                                    ${variation.sku ? `
                                        <div style="margin-top: 10px;">
                                            <strong style="color: #495057; font-size: 13px;">SKU:</strong>
                                            <span style="font-family: monospace; background: #f8f9fa; padding: 4px 8px; border-radius: 4px; font-size: 12px;">${variation.sku}</span>
                                        </div>
                                    ` : ''}
                                </div>
                            `).join('')}
                        </div>
                    </div>
                </div>
                <div style="padding: 20px; border-top: 1px solid #e9ecef; text-align: center;">
                    <button class="btn btn-primary" onclick="this.closest('.modal').remove()">
                        <i class="fas fa-times"></i> –ó–∞–∫—Ä—ã—Ç—å
                    </button>
                </div>
            </div>
        `;
        
        document.body.appendChild(modal);
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                modal.remove();
            }
        });
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∞—Ä–∏–∞—Ü–∏–π —Ç–æ–≤–∞—Ä–∞:', error);
        showMessage('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∞—Ä–∏–∞—Ü–∏–π —Ç–æ–≤–∞—Ä–∞: ' + error.message, 'error');
    }
}

// –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
async function editProduct(id) {
    console.log('üîÑ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ —Å ID:', id);
    await loadProductData(id);
}

async function createCategory(data) {
    // –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userRole = localStorage.getItem('userRole') || 'admin';
    
    // –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ —Å—É–ø–µ—Ä –∞–¥–º–∏–Ω—É
    if (userRole !== 'super_admin') {
        throw new Error('–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ —Å—É–ø–µ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É');
    }
    
    const endpoint = '/api/v1/admin/categories/';
    return await fetchData(endpoint, {
        method: 'POST',
        body: JSON.stringify(data)
    });
}

async function updateCategory(id, data) {
    // –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userRole = localStorage.getItem('userRole') || 'admin';
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–æ—Å—Ç—É–ø–Ω–æ —Å—É–ø–µ—Ä –∞–¥–º–∏–Ω—É –∏ –æ–±—ã—á–Ω–æ–º—É –∞–¥–º–∏–Ω—É
    if (userRole !== 'super_admin' && userRole !== 'admin') {
        throw new Error('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º');
    }
    
    const endpoint = `/api/v1/admin/categories/${id}/`;
    return await fetchData(endpoint, {
        method: 'PUT',
        body: JSON.stringify(data)
    });
}

async function deleteCategory(id) {
    if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –∫–∞—Ç–µ–≥–æ—Ä–∏—é?')) return;
    
    try {
        // –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const userRole = localStorage.getItem('userRole') || 'admin';
        
        // –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–æ—Å—Ç—É–ø–Ω–æ —Å—É–ø–µ—Ä –∞–¥–º–∏–Ω—É –∏ –æ–±—ã—á–Ω–æ–º—É –∞–¥–º–∏–Ω—É
        if (userRole !== 'super_admin' && userRole !== 'admin') {
            throw new Error('–£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º');
        }
        
        const endpoint = `/api/v1/admin/categories/${id}/`;
        await fetchData(endpoint, {
            method: 'DELETE'
        });
        loadCategories();
        showMessage('–ö–∞—Ç–µ–≥–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞', 'success');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', error);
        showMessage('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏', 'error');
    }
}

// –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
async function editCategory(id) {
    openCategoryModal(id);
}

// –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–∞
async function viewOrder(id) {
    try {
        const response = await fetchData(`/api/v1/admin/orders/${id}`);
        const order = response.data;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ –∏–ª–∏ alert
        alert(`–ó–∞–∫–∞–∑ #${order.id.substring(0, 8)}...\n–°—Ç–∞—Ç—É—Å: ${order.status}\n–°—É–º–º–∞: ‚ÇΩ${order.total_amount}\n–î–∞—Ç–∞: ${new Date(order.created_at).toLocaleDateString()}`);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–∞:', error);
        showMessage('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–∞', 'error');
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function loadProductData(id) {
    try {
        const response = await fetchData(`/api/v1/products/${id}`);
        console.log('üì° –û—Ç–≤–µ—Ç API –¥–ª—è —Ç–æ–≤–∞—Ä–∞:', response);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –æ—Ç–≤–µ—Ç–∞
        let product;
        if (response.product) {
            product = response.product;
        } else if (response.data) {
            product = response.data;
        } else {
            product = response;
        }
        
        console.log('üì¶ –î–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞:', product);
        
        currentProductId = id;
        document.getElementById('product-modal-title').textContent = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä';
        
        // –ó–∞–ø–æ–ª–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è
        document.getElementById('product-name').value = product.name;
        document.getElementById('product-description').value = product.description;
        document.getElementById('product-gender').value = product.gender;
        document.getElementById('product-category').value = product.categoryId;
        document.getElementById('product-brand').value = product.brand;
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∞—Ä–∏–∞—Ü–∏–∏
        if (product.variations && product.variations.length > 0) {
            variations = product.variations.map(v => ({
                id: v.id,
                sizes: v.sizes || [],
                colors: v.colors || [],
                price: v.price,
                originalPrice: v.originalPrice,
                stockQuantity: v.stockQuantity,
                sku: v.sku,
                imageUrls: v.imageUrls || [] // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ
            }));
        } else {
            variations = [];
        }
        renderVariations();
        
        document.getElementById('product-modal').style.display = 'block';
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞:', error);
        alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞');
    }
}

async function loadCategoryData(id) {
    try {
        const response = await fetchData(`/api/v1/categories/${id}`);
        console.log('üì° –û—Ç–≤–µ—Ç API –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', response);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –æ—Ç–≤–µ—Ç–∞
        let category;
        if (response.category) {
            category = response.category;
        } else if (response.data) {
            category = response.data;
        } else {
            category = response;
        }
        
        console.log('üì¶ –î–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', category);
        
        document.getElementById('category-name').value = category.name;
        document.getElementById('category-description').value = category.description || '';
        document.getElementById('category-parent').value = category.parent_id || '';
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', error);
        showMessage('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–∏', 'error');
    }
}

// –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–µ–ª–µ–∫—Ç–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
function populateCategorySelects(categories) {
    console.log('üîÑ populateCategorySelects –≤—ã–∑–≤–∞–Ω–∞ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏:', categories);
    
    const selects = [
        document.getElementById('product-category'),
        document.getElementById('category-parent'),
        document.getElementById('category-filter')
    ];
    
    console.log('üîç –ù–∞–π–¥–µ–Ω–æ —Å–µ–ª–µ–∫—Ç–æ–≤:', selects.filter(s => s).length);
    console.log('üîç product-category:', !!selects[0]);
    console.log('üîç category-parent:', !!selects[1]);
    console.log('üîç category-filter:', !!selects[2]);
    
    selects.forEach(select => {
        if (select) {
            const currentValue = select.value;
            select.innerHTML = select.id === 'category-filter' ? 
                '<option value="">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>' : 
                '<option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>';
            
            categories.forEach(category => {
                const option = document.createElement('option');
                option.value = category.id;
                option.textContent = category.name;
                select.appendChild(option);
            });
            
            select.value = currentValue;
        }
    });
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏
function loadSettings() {
    const savedUrl = localStorage.getItem('api_url');
    if (savedUrl) {
        document.getElementById('api-url').value = savedUrl;
        API_BASE_URL = savedUrl;
    }
}

function saveSettings() {
    const apiUrl = document.getElementById('api-url').value;
    localStorage.setItem('api_url', apiUrl);
    API_BASE_URL = apiUrl;
    showMessage('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã', 'success');
}

// –§–∏–ª—å—Ç—Ä—ã
function setupFilters() {
    const searchInput = document.getElementById('product-search');
    const categoryFilter = document.getElementById('category-filter');
    
    if (searchInput) {
        searchInput.addEventListener('input', filterProducts);
    }
    
    if (categoryFilter) {
        categoryFilter.addEventListener('change', filterProducts);
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤
let allProducts = [];

function filterProducts() {
    console.log('üîÑ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–æ–≤–∞—Ä–æ–≤...');
    
    const searchTerm = document.getElementById('product-search')?.value?.toLowerCase() || '';
    const categoryFilter = document.getElementById('category-filter')?.value || '';
    
    console.log('üîç –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å:', searchTerm);
    console.log('üìÇ –§–∏–ª—å—Ç—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', categoryFilter);
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã
    let filteredProducts = allProducts.filter(product => {
        // –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏ –±—Ä–µ–Ω–¥—É
        const matchesSearch = !searchTerm || 
            product.name?.toLowerCase().includes(searchTerm) ||
            product.brand?.toLowerCase().includes(searchTerm) ||
            product.description?.toLowerCase().includes(searchTerm);
        
        // –§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        const matchesCategory = !categoryFilter || 
            product.categoryId === categoryFilter || 
            (product.category && product.category.id === categoryFilter);
        
        console.log(`üîç –¢–æ–≤–∞—Ä "${product.name}": categoryId=${product.categoryId}, category.id=${product.category?.id}, filter=${categoryFilter}, matches=${matchesCategory}`);
        
        return matchesSearch && matchesCategory;
    });
    
    console.log(`üìä –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ ${filteredProducts.length} –∏–∑ ${allProducts.length} —Ç–æ–≤–∞—Ä–æ–≤`);
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
    displayProducts(filteredProducts);
}

// –£—Ç–∏–ª–∏—Ç—ã
function showMessage(text, type = 'success') {
    // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    const existingMessages = document.querySelectorAll('.message');
    existingMessages.forEach(msg => msg.remove());
    
    const message = document.createElement('div');
    message.className = `message ${type}`;
    
    // –í—ã–±–∏—Ä–∞–µ–º –∏–∫–æ–Ω–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    let icon = '‚ÑπÔ∏è';
    if (type === 'success') icon = '‚úÖ';
    else if (type === 'error') icon = '‚ùå';
    else if (type === 'warning') icon = '‚ö†Ô∏è';
    
    message.innerHTML = `
        <div class="message-content">
            <span class="message-icon">${icon}</span>
            <span class="message-text">${text}</span>
            <button class="message-close" onclick="this.parentElement.parentElement.remove()">√ó</button>
        </div>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ body –¥–ª—è –ª—É—á—à–µ–π –≤–∏–¥–∏–º–æ—Å—Ç–∏
    document.body.insertBefore(message, document.body.firstChild);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
        if (message.parentElement) {
            message.remove();
        }
    }, 4000);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
function setupImageUpload() {
    const uploadArea = document.getElementById('image-upload-area');
    const fileInput = document.getElementById('image-upload');
    const preview = document.getElementById('image-preview');
    const urlsContainer = document.getElementById('image-urls');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    if (uploadArea) {
        // –ö–ª–∏–∫ –ø–æ –æ–±–ª–∞—Å—Ç–∏ –∑–∞–≥—Ä—É–∑–∫–∏
        uploadArea.addEventListener('click', () => {
            if (fileInput) fileInput.click();
        });

        // Drag and drop
        uploadArea.addEventListener('dragover', (e) => {
            e.preventDefault();
            uploadArea.classList.add('dragover');
        });

        uploadArea.addEventListener('dragleave', () => {
            uploadArea.classList.remove('dragover');
        });

        uploadArea.addEventListener('drop', (e) => {
            e.preventDefault();
            uploadArea.classList.remove('dragover');
            const files = e.dataTransfer.files;
            handleFiles(files);
        });
    }

    if (fileInput) {
        // –í—ã–±–æ—Ä —Ñ–∞–π–ª–æ–≤
        fileInput.addEventListener('change', (e) => {
            handleFiles(e.target.files);
        });
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
async function handleFiles(files) {
    for (let file of files) {
        if (file.type.startsWith('image/')) {
            await uploadImage(file);
        }
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
async function uploadImage(file) {
    const formData = new FormData();
    formData.append('image', file);
    formData.append('folder', 'products');

    try {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ —Å —Ñ–∞–π–ª–æ–º
        showUploadStatus(`üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º ${file.name}...`, 'loading');
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏–Ω–Ω–µ—Ä –≤ –ø—Ä–µ–≤—å—é
        const preview = document.getElementById('image-preview');
        if (preview) {
            const loadingItem = document.createElement('div');
            loadingItem.className = 'image-preview-item loading';
            loadingItem.innerHTML = `
                <div class="loading-spinner">
                    <div class="spinner"></div>
                    <div class="loading-text">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
                </div>
                <div class="file-info">${file.name}</div>
            `;
            preview.appendChild(loadingItem);
        }
        
        const response = await fetch(`${API_BASE_URL}/api/v1/upload/image?folder=products`, {
            method: 'POST',
            headers: {
                'Authorization': `Bearer ${adminToken}`
            },
            body: formData
        });

        const result = await response.json();

        if (result.success) {
            // –£–¥–∞–ª—è–µ–º —Å–ø–∏–Ω–Ω–µ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            if (preview) {
                const loadingItem = preview.querySelector('.loading');
                if (loadingItem) loadingItem.remove();
            }
            
            uploadedImages.push({
                url: result.url,
                filename: result.filename
            });
            addImagePreview(result.url, result.filename);
            addImageUrl(result.url);
            showUploadStatus(`‚úÖ ${file.name} –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ!`, 'success');
        } else {
            // –£–¥–∞–ª—è–µ–º —Å–ø–∏–Ω–Ω–µ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            if (preview) {
                const loadingItem = preview.querySelector('.loading');
                if (loadingItem) loadingItem.remove();
            }
            showUploadStatus(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ${file.name}: ${result.error}`, 'error');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error);
        
        // –£–¥–∞–ª—è–µ–º —Å–ø–∏–Ω–Ω–µ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ
        const preview = document.getElementById('image-preview');
        if (preview) {
            const loadingItem = preview.querySelector('.loading');
            if (loadingItem) loadingItem.remove();
        }
        
        showUploadStatus(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ${file.name}`, 'error');
    }
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
function addImagePreview(url, filename) {
    const preview = document.getElementById('image-preview');
    if (!preview) {
        console.warn('‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç image-preview –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }
    
    const item = document.createElement('div');
    item.className = 'image-preview-item';
    item.innerHTML = `
        <img src="${url}" alt="Preview">
        <button class="remove-image" onclick="removeImage('${filename}')">√ó</button>
    `;
    preview.appendChild(item);
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
function addImageUrl(url) {
    const urlsContainer = document.getElementById('image-urls');
    if (!urlsContainer) {
        console.warn('‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç image-urls –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }
    
    const item = document.createElement('div');
    item.className = 'image-url-item';
    item.innerHTML = `
        <input type="text" value="${url}" readonly>
        <button class="remove-url" onclick="removeImageUrl('${url}')">–£–¥–∞–ª–∏—Ç—å</button>
    `;
    urlsContainer.appendChild(item);
    imageUrls.push(url);
}

// –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
async function removeImage(filename) {
    try {
        const response = await fetch(`${API_BASE_URL}/api/v1/upload/image/${filename}?folder=products`, {
            method: 'DELETE',
            headers: {
                'Authorization': `Bearer ${adminToken}`
            }
        });

        const result = await response.json();
        if (result.success) {
            // –£–¥–∞–ª—è–µ–º –∏–∑ –º–∞—Å—Å–∏–≤–æ–≤
            uploadedImages = uploadedImages.filter(img => img.filename !== filename);
            imageUrls = imageUrls.filter(url => !url.includes(filename));
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            updateImageInterface();
            showUploadStatus('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ', 'success');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:', error);
        showUploadStatus('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è', 'error');
    }
}

// –£–¥–∞–ª–µ–Ω–∏–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
function removeImageUrl(url) {
    imageUrls = imageUrls.filter(u => u !== url);
    updateImageInterface();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
function updateImageInterface() {
    const preview = document.getElementById('image-preview');
    const urlsContainer = document.getElementById('image-urls');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    if (!preview || !urlsContainer) {
        console.warn('‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç—ã image-preview –∏–ª–∏ image-urls –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
        return;
    }
    
    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–≤—å—é
    preview.innerHTML = '';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–≤—å—é –¥–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    uploadedImages.forEach(img => {
        addImagePreview(img.url, img.filename);
    });
    
    // –û—á–∏—â–∞–µ–º URL
    urlsContainer.innerHTML = '';
    
    // –î–æ–±–∞–≤–ª—è–µ–º URL
    imageUrls.forEach(url => {
        addImageUrl(url);
    });
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–∞—Ä–∏–∞—Ü–∏–∏
function addVariation() {
    const variation = {
        id: Date.now(), // –í—Ä–µ–º–µ–Ω–Ω—ã–π ID –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
        sizes: [],
        colors: [],
        price: 0,
        originalPrice: null,
        discount: 0,
        stockQuantity: 0,
        sku: '',
        imageUrls: [] // –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ
    };
    
    variations.push(variation);
    console.log('‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è –≤–∞—Ä–∏–∞—Ü–∏—è:', variation);
    console.log('üì¶ –í—Å–µ–≥–æ –≤–∞—Ä–∏–∞—Ü–∏–π:', variations.length);
    renderVariations();
}

// –£–¥–∞–ª–µ–Ω–∏–µ –≤–∞—Ä–∏–∞—Ü–∏–∏
function removeVariation(index) {
    variations.splice(index, 1);
    renderVariations();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∞—Ä–∏–∞—Ü–∏–∏
function updateVariation(index, field, value) {
    if (variations[index]) {
        variations[index][field] = value;
        console.log(`üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∞ –≤–∞—Ä–∏–∞—Ü–∏—è ${index + 1}: ${field} = ${value}`);
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
function updateVariationMulti(index, field, value, checked) {
    if (variations[index]) {
        if (!variations[index][field]) {
            variations[index][field] = [];
        }
        
        if (checked) {
            if (!variations[index][field].includes(value)) {
                variations[index][field].push(value);
            }
        } else {
            variations[index][field] = variations[index][field].filter(item => item !== value);
        }
        
        console.log(`üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∞ –≤–∞—Ä–∏–∞—Ü–∏—è ${index + 1}: ${field} =`, variations[index][field]);
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ
function updateVariationImages(index, imageUrls) {
    if (variations[index]) {
        variations[index].imageUrls = imageUrls;
    }
}

// –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤ –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π
function validateFiles(files) {
    const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];
    const maxSize = 10 * 1024 * 1024; // 10MB
    const errors = [];
    
    for (let i = 0; i < files.length; i++) {
        const file = files[i];
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
        if (!allowedTypes.includes(file.type)) {
            errors.push(`–§–∞–π–ª "${file.name}" –∏–º–µ–µ—Ç –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø: ${file.type}`);
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        if (file.size > maxSize) {
            errors.push(`–§–∞–π–ª "${file.name}" —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π: ${(file.size / 1024 / 1024).toFixed(2)}MB (–º–∞–∫—Å–∏–º—É–º 10MB)`);
        }
    }
    
    return errors;
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ –¥–ª—è –≤–∞—Ä–∏–∞—Ü–∏–∏
async function uploadVariationImages(variationIndex, input) {
    const files = Array.from(input.files);
    if (files.length === 0) return;
    
    console.log(`üì∏ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É ${files.length} —Ñ–∞–π–ª–æ–≤ –¥–ª—è –≤–∞—Ä–∏–∞—Ü–∏–∏ ${variationIndex}`);
    
    // –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π
    const validationErrors = validateFiles(files);
    if (validationErrors.length > 0) {
        alert('–û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–∞–π–ª–æ–≤:\n' + validationErrors.join('\n'));
        input.value = '';
        return;
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –≤–∞—Ä–∏–∞—Ü–∏–∏
    showVariationUploadStatus(variationIndex, `üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º ${files.length} —Ñ–∞–π–ª–æ–≤...`, 'loading');
    
    const uploadedUrls = [];
    let successCount = 0;
    let errorCount = 0;
    
    for (let i = 0; i < files.length; i++) {
        const file = files[i];
        console.log(`üìÅ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª ${i + 1}/${files.length}: ${file.name} (${file.size} –±–∞–π—Ç)`);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞
        showVariationUploadStatus(variationIndex, `üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º ${file.name} (${i + 1}/${files.length})...`, 'loading');
        
        try {
            const formData = new FormData();
            formData.append('image', file);
            
            console.log(`üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è —Ñ–∞–π–ª–∞ ${file.name}`);
            const response = await fetch(`${API_BASE_URL}/api/v1/upload/image?folder=variations`, {
                method: 'POST',
                headers: {
                    'Authorization': `Bearer ${adminToken}`
                },
                body: formData
            });
            
            console.log(`üì° –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: ${response.status} ${response.statusText}`);
            
            if (response.ok) {
                const result = await response.json();
                console.log(`‚úÖ –§–∞–π–ª ${file.name} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω:`, result);
                uploadedUrls.push(result.url);
                successCount++;
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
                showVariationUploadStatus(variationIndex, `‚úÖ ${file.name} –∑–∞–≥—Ä—É–∂–µ–Ω (${successCount}/${files.length})`, 'success');
            } else {
                const errorData = await response.json().catch(() => ({}));
                console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ ${file.name}:`, errorData);
                showVariationUploadStatus(variationIndex, `‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ${file.name}`, 'error');
                errorCount++;
            }
        } catch (error) {
            console.error(`üí• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞ ${file.name}:`, error);
            showVariationUploadStatus(variationIndex, `‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ${file.name}`, 'error');
            errorCount++;
        }
    }
    
    console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏: ${successCount} —É—Å–ø–µ—à–Ω–æ, ${errorCount} –æ—à–∏–±–æ–∫`);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Ñ–æ—Ç–æ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —É—Å–ø–µ—à–Ω—ã–µ –∑–∞–≥—Ä—É–∑–∫–∏
    if (uploadedUrls.length > 0 && variations[variationIndex]) {
        variations[variationIndex].imageUrls = [...(variations[variationIndex].imageUrls || []), ...uploadedUrls];
        console.log(`üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –≤–∞—Ä–∏–∞—Ü–∏—é ${variationIndex}, –≤—Å–µ–≥–æ —Ñ–æ—Ç–æ: ${variations[variationIndex].imageUrls.length}`);
        renderVariations();
    }
    
    // –û—á–∏—â–∞–µ–º input –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
    input.value = '';
    
    // –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
    if (successCount > 0) {
        showVariationUploadStatus(variationIndex, `üéâ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${successCount} –∏–∑ ${files.length} —Ñ–∞–π–ª–æ–≤`, 'success');
        console.log(`üéâ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ ${successCount} —Ñ–∞–π–ª–æ–≤`);
        
        // –°–∫—Ä—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            hideVariationUploadStatus(variationIndex);
        }, 3000);
    } else {
        showVariationUploadStatus(variationIndex, `‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞`, 'error');
    }
}

// –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ –∏–∑ –≤–∞—Ä–∏–∞—Ü–∏–∏
function removeVariationImage(variationIndex, imageIndex) {
    if (variations[variationIndex] && variations[variationIndex].imageUrls) {
        variations[variationIndex].imageUrls.splice(imageIndex, 1);
        renderVariations();
    }
}

// –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –≤–∞—Ä–∏–∞—Ü–∏–π
function renderVariations() {
    const container = document.getElementById('variations-list');
    
    if (variations.length === 0) {
        container.innerHTML = '<p class="no-variations">–ù–µ—Ç –≤–∞—Ä–∏–∞—Ü–∏–π. –î–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –≤–∞—Ä–∏–∞—Ü–∏—é.</p>';
        return;
    }
    
    container.innerHTML = variations.map((variation, index) => `
        <div class="variation-item" data-variation-index="${index}">
            <button type="button" class="remove-variation" onclick="removeVariation(${index})">√ó</button>
            <div class="variation-fields">
                <div class="variation-field variation-multi-select">
                    <label>–†–∞–∑–º–µ—Ä—ã</label>
                    <div class="checkbox-group">
                        <label><input type="checkbox" value="XS" ${variation.sizes?.includes('XS') ? 'checked' : ''} onchange="updateVariationMulti(${index}, 'sizes', 'XS', this.checked)"> XS</label>
                        <label><input type="checkbox" value="S" ${variation.sizes?.includes('S') ? 'checked' : ''} onchange="updateVariationMulti(${index}, 'sizes', 'S', this.checked)"> S</label>
                        <label><input type="checkbox" value="M" ${variation.sizes?.includes('M') ? 'checked' : ''} onchange="updateVariationMulti(${index}, 'sizes', 'M', this.checked)"> M</label>
                        <label><input type="checkbox" value="L" ${variation.sizes?.includes('L') ? 'checked' : ''} onchange="updateVariationMulti(${index}, 'sizes', 'L', this.checked)"> L</label>
                        <label><input type="checkbox" value="XL" ${variation.sizes?.includes('XL') ? 'checked' : ''} onchange="updateVariationMulti(${index}, 'sizes', 'XL', this.checked)"> XL</label>
                        <label><input type="checkbox" value="XXL" ${variation.sizes?.includes('XXL') ? 'checked' : ''} onchange="updateVariationMulti(${index}, 'sizes', 'XXL', this.checked)"> XXL</label>
                    </div>
                    <div class="checkbox-group">
                        <label><input type="checkbox" value="36" ${variation.sizes?.includes('36') ? 'checked' : ''} onchange="updateVariationMulti(${index}, 'sizes', '36', this.checked)"> 36</label>
                        <label><input type="checkbox" value="37" ${variation.sizes?.includes('37') ? 'checked' : ''} onchange="updateVariationMulti(${index}, 'sizes', '37', this.checked)"> 37</label>
                        <label><input type="checkbox" value="38" ${variation.sizes?.includes('38') ? 'checked' : ''} onchange="updateVariationMulti(${index}, 'sizes', '38', this.checked)"> 38</label>
                        <label><input type="checkbox" value="39" ${variation.sizes?.includes('39') ? 'checked' : ''} onchange="updateVariationMulti(${index}, 'sizes', '39', this.checked)"> 39</label>
                        <label><input type="checkbox" value="40" ${variation.sizes?.includes('40') ? 'checked' : ''} onchange="updateVariationMulti(${index}, 'sizes', '40', this.checked)"> 40</label>
                        <label><input type="checkbox" value="41" ${variation.sizes?.includes('41') ? 'checked' : ''} onchange="updateVariationMulti(${index}, 'sizes', '41', this.checked)"> 41</label>
                        <label><input type="checkbox" value="42" ${variation.sizes?.includes('42') ? 'checked' : ''} onchange="updateVariationMulti(${index}, 'sizes', '42', this.checked)"> 42</label>
                        <label><input type="checkbox" value="43" ${variation.sizes?.includes('43') ? 'checked' : ''} onchange="updateVariationMulti(${index}, 'sizes', '43', this.checked)"> 43</label>
                        <label><input type="checkbox" value="44" ${variation.sizes?.includes('44') ? 'checked' : ''} onchange="updateVariationMulti(${index}, 'sizes', '44', this.checked)"> 44</label>
                        <label><input type="checkbox" value="45" ${variation.sizes?.includes('45') ? 'checked' : ''} onchange="updateVariationMulti(${index}, 'sizes', '45', this.checked)"> 45</label>
                        <label><input type="checkbox" value="46" ${variation.sizes?.includes('46') ? 'checked' : ''} onchange="updateVariationMulti(${index}, 'sizes', '46', this.checked)"> 46</label>
                    </div>
                </div>
                <div class="variation-field variation-multi-select">
                    <label>–¶–≤–µ—Ç–∞</label>
                    <div class="checkbox-group">
                        <label><input type="checkbox" value="–ö—Ä–∞—Å–Ω—ã–π" ${variation.colors?.includes('–ö—Ä–∞—Å–Ω—ã–π') ? 'checked' : ''} onchange="updateVariationMulti(${index}, 'colors', '–ö—Ä–∞—Å–Ω—ã–π', this.checked)"> –ö—Ä–∞—Å–Ω—ã–π</label>
                        <label><input type="checkbox" value="–°–∏–Ω–∏–π" ${variation.colors?.includes('–°–∏–Ω–∏–π') ? 'checked' : ''} onchange="updateVariationMulti(${index}, 'colors', '–°–∏–Ω–∏–π', this.checked)"> –°–∏–Ω–∏–π</label>
                        <label><input type="checkbox" value="–ó–µ–ª–µ–Ω—ã–π" ${variation.colors?.includes('–ó–µ–ª–µ–Ω—ã–π') ? 'checked' : ''} onchange="updateVariationMulti(${index}, 'colors', '–ó–µ–ª–µ–Ω—ã–π', this.checked)"> –ó–µ–ª–µ–Ω—ã–π</label>
                        <label><input type="checkbox" value="–ñ–µ–ª—Ç—ã–π" ${variation.colors?.includes('–ñ–µ–ª—Ç—ã–π') ? 'checked' : ''} onchange="updateVariationMulti(${index}, 'colors', '–ñ–µ–ª—Ç—ã–π', this.checked)"> –ñ–µ–ª—Ç—ã–π</label>
                        <label><input type="checkbox" value="–ß–µ—Ä–Ω—ã–π" ${variation.colors?.includes('–ß–µ—Ä–Ω—ã–π') ? 'checked' : ''} onchange="updateVariationMulti(${index}, 'colors', '–ß–µ—Ä–Ω—ã–π', this.checked)"> –ß–µ—Ä–Ω—ã–π</label>
                        <label><input type="checkbox" value="–ë–µ–ª—ã–π" ${variation.colors?.includes('–ë–µ–ª—ã–π') ? 'checked' : ''} onchange="updateVariationMulti(${index}, 'colors', '–ë–µ–ª—ã–π', this.checked)"> –ë–µ–ª—ã–π</label>
                        <label><input type="checkbox" value="–°–µ—Ä—ã–π" ${variation.colors?.includes('–°–µ—Ä—ã–π') ? 'checked' : ''} onchange="updateVariationMulti(${index}, 'colors', '–°–µ—Ä—ã–π', this.checked)"> –°–µ—Ä—ã–π</label>
                        <label><input type="checkbox" value="–ö–æ—Ä–∏—á–Ω–µ–≤—ã–π" ${variation.colors?.includes('–ö–æ—Ä–∏—á–Ω–µ–≤—ã–π') ? 'checked' : ''} onchange="updateVariationMulti(${index}, 'colors', '–ö–æ—Ä–∏—á–Ω–µ–≤—ã–π', this.checked)"> –ö–æ—Ä–∏—á–Ω–µ–≤—ã–π</label>
                        <label><input type="checkbox" value="–†–æ–∑–æ–≤—ã–π" ${variation.colors?.includes('–†–æ–∑–æ–≤—ã–π') ? 'checked' : ''} onchange="updateVariationMulti(${index}, 'colors', '–†–æ–∑–æ–≤—ã–π', this.checked)"> –†–æ–∑–æ–≤—ã–π</label>
                        <label><input type="checkbox" value="–§–∏–æ–ª–µ—Ç–æ–≤—ã–π" ${variation.colors?.includes('–§–∏–æ–ª–µ—Ç–æ–≤—ã–π') ? 'checked' : ''} onchange="updateVariationMulti(${index}, 'colors', '–§–∏–æ–ª–µ—Ç–æ–≤—ã–π', this.checked)"> –§–∏–æ–ª–µ—Ç–æ–≤—ã–π</label>
                        <label><input type="checkbox" value="–û—Ä–∞–Ω–∂–µ–≤—ã–π" ${variation.colors?.includes('–û—Ä–∞–Ω–∂–µ–≤—ã–π') ? 'checked' : ''} onchange="updateVariationMulti(${index}, 'colors', '–û—Ä–∞–Ω–∂–µ–≤—ã–π', this.checked)"> –û—Ä–∞–Ω–∂–µ–≤—ã–π</label>
                    </div>
                </div>
                <div class="variation-field">
                    <label>–¶–µ–Ω–∞ (‚ÇΩ)</label>
                    <input type="number" 
                           value="${variation.price}" 
                           onchange="updateVariation(${index}, 'price', parseFloat(this.value) || 0)"
                           min="0" 
                           step="0.01" 
                           placeholder="0.00">
                </div>
                <div class="variation-field">
                    <label>–°–∫–∏–¥–∫–∞ (–≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö 0-100%)</label>
                    <input type="number" 
                           value="${variation.discount || 0}" 
                           onchange="updateVariation(${index}, 'discount', parseInt(this.value) || 0)"
                           min="0" 
                           max="100" 
                           placeholder="0"
                           title="–ù–∞–ø—Ä–∏–º–µ—Ä: 15 = —Å–∫–∏–¥–∫–∞ 15%">
                </div>
                <div class="variation-field">
                    <label>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</label>
                    <input type="number" 
                           value="${variation.stockQuantity}" 
                           onchange="updateVariation(${index}, 'stockQuantity', parseInt(this.value) || 0)"
                           min="0" 
                           placeholder="0">
                </div>
                <div class="variation-field">
                    <label>SKU</label>
                    <input type="text" 
                           value="${variation.sku}" 
                           onchange="updateVariation(${index}, 'sku', this.value)"
                           placeholder="SKU">
                </div>
                <div class="variation-field variation-image-upload">
                    <label>–§–æ—Ç–æ –¥–ª—è —ç—Ç–æ–π –≤–∞—Ä–∏–∞—Ü–∏–∏ (–º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ)</label>
                    <input type="file" 
                           accept="image/*" 
                           multiple
                           onchange="uploadVariationImages(${index}, this)"
                           style="padding: 8px;">
                           ${(variation.imageUrls && variation.imageUrls.length > 0 ? `
                            <div class="variation-images-preview">
                              ${variation.imageUrls.map((url, imgIndex) => {
                                // –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è —Ç–æ—á–∫–∞ –∏—Å—Ç–∏–Ω—ã
                                const imageUrl = window.getImageUrl(url);
                          
                                console.log(`üñºÔ∏è –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${url} -> ${imageUrl}`);
                          
                                return `
                                  <div class="image-preview-item">
                                    <img
                                      src="${imageUrl}"
                                      alt="Preview"
                                      onclick="openImageModal('${imageUrl}', '–§–æ—Ç–æ –≤–∞—Ä–∏–∞—Ü–∏–∏ ${index + 1}')"
                                      style="cursor: pointer;"
                                      onerror="this.style.display='none'; console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', '${imageUrl}');"
                                    >
                                    <button type="button" class="remove-image" onclick="removeVariationImage(${index}, ${imgIndex})">√ó</button>
                                  </div>
                                `;
                              }).join('')}
                            </div>
                          ` : '')}
                </div>
            </div>
        </div>
    `).join('');
}

// –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã –≤–∞—Ä–∏–∞—Ü–∏–π
function clearVariationsForm() {
    variations = [];
    renderVariations();
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏
function showUploadStatus(message, type) {
    const container = document.querySelector('.image-upload-container');
    let status = container.querySelector('.upload-status');
    
    if (!status) {
        status = document.createElement('div');
        status.className = 'upload-status';
        container.appendChild(status);
    }
    
    status.textContent = message;
    status.className = `upload-status ${type}`;
    
    if (type === 'success') {
        setTimeout(() => {
            status.remove();
        }, 3000);
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –≤–∞—Ä–∏–∞—Ü–∏–∏
function showVariationUploadStatus(variationIndex, message, type) {
    const variationItem = document.querySelector(`[data-variation-index="${variationIndex}"]`);
    if (!variationItem) return;
    
    let status = variationItem.querySelector('.variation-upload-status');
    
    if (!status) {
        status = document.createElement('div');
        status.className = 'variation-upload-status';
        variationItem.appendChild(status);
    }
    
    status.innerHTML = `
        <div class="upload-status-content ${type}">
            <div class="status-icon">
                ${type === 'loading' ? '<div class="spinner"></div>' : 
                  type === 'success' ? '‚úÖ' : '‚ùå'}
            </div>
            <div class="status-message">${message}</div>
        </div>
    `;
    status.className = `variation-upload-status ${type}`;
}

// –°–∫—Ä—ã—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –≤–∞—Ä–∏–∞—Ü–∏–∏
function hideVariationUploadStatus(variationIndex) {
    const variationItem = document.querySelector(`[data-variation-index="${variationIndex}"]`);
    if (!variationItem) return;
    
    const status = variationItem.querySelector('.variation-upload-status');
    if (status) {
        status.remove();
    }
}

// –û—Ç–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
function openImageModal(imageUrl, alt = '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ') {
    const modal = document.createElement('div');
    modal.className = 'modal image-modal';
    modal.style.display = 'flex';
    modal.style.zIndex = '10000';
    
    modal.innerHTML = `
        <div class="modal-content image-modal-content">
            <div class="modal-header">
                <h3>–ü—Ä–æ—Å–º–æ—Ç—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</h3>
                <span class="close" onclick="this.closest('.modal').remove()">&times;</span>
            </div>
            <div class="image-modal-body">
                <img src="${imageUrl}" alt="${alt}" class="modal-image">
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            modal.remove();
        }
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ Escape
    document.addEventListener('keydown', function closeOnEscape(e) {
        if (e.key === 'Escape') {
            modal.remove();
            document.removeEventListener('keydown', closeOnEscape);
        }
    });
}

// –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
function clearImageForm() {
    uploadedImages = [];
    imageUrls = [];
    
    // –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ)
    const imagePreviewElement = document.getElementById('image-preview');
    const imageUrlsElement = document.getElementById('image-urls');
    const imageUploadElement = document.getElementById('image-upload');
    
    if (imagePreviewElement) {
        imagePreviewElement.innerHTML = '';
    }
    
    if (imageUrlsElement) {
        imageUrlsElement.innerHTML = '';
    }
    
    if (imageUploadElement) {
        imageUploadElement.value = '';
    }
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –∏—Ö
window.onclick = function(event) {
    const productModal = document.getElementById('product-modal');
    const categoryModal = document.getElementById('category-modal');
    
    if (event.target === productModal) {
        closeProductModal();
    }
    
    if (event.target === categoryModal) {
        closeCategoryModal();
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ HTML
window.openProductModal = openProductModal;
window.closeProductModal = closeProductModal;
window.openCategoryModal = openCategoryModal;
window.closeCategoryModal = closeCategoryModal;
window.editProduct = loadProductData;
window.editCategory = loadCategoryData;
window.deleteProduct = deleteProduct;
window.deleteCategory = deleteCategory;
window.saveSettings = saveSettings;
window.openUserModal = openUserModal;
window.closeUserModal = closeUserModal;
window.openRoleModal = openRoleModal;
window.closeRoleModal = closeRoleModal;
window.showVariationUploadStatus = showVariationUploadStatus;
window.hideVariationUploadStatus = hideVariationUploadStatus;
window.openImageModal = openImageModal;

// ===== –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê –°–ò–°–¢–ï–ú–´ =====

/**
 * üöÄ –°–∏—Å—Ç–µ–º–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã, –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
 */
function systemMonitor() {
    console.log('üîç === –°–ò–°–¢–ï–ú–ù–´–ô –ú–û–ù–ò–¢–û–†–ò–ù–ì ===');
    
    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±—Ä–∞—É–∑–µ—Ä–µ
    console.log('üåê –ë—Ä–∞—É–∑–µ—Ä:', {
        userAgent: navigator.userAgent,
        language: navigator.language,
        cookieEnabled: navigator.cookieEnabled,
        onLine: navigator.onLine,
        platform: navigator.platform
    });
    
    // –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
    const perf = performance.getEntriesByType('navigation')[0];
    console.log('‚ö° –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:', {
        loadTime: perf ? Math.round(perf.loadEventEnd - perf.loadEventStart) + 'ms' : 'N/A',
        domContentLoaded: perf ? Math.round(perf.domContentLoadedEventEnd - perf.domContentLoadedEventStart) + 'ms' : 'N/A',
        totalTime: perf ? Math.round(perf.loadEventEnd - perf.navigationStart) + 'ms' : 'N/A'
    });
    
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ localStorage
    console.log('üíæ localStorage:', {
        adminToken: localStorage.getItem('adminToken') ? '–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
        userRole: localStorage.getItem('userRole') || '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞',
        lastActivity: localStorage.getItem('lastActivity') || '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ',
        userData: localStorage.getItem('userData') ? '–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
    });
    
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ DOM
    console.log('üèóÔ∏è DOM:', {
        readyState: document.readyState,
        title: document.title,
        url: window.location.href,
        viewport: {
            width: window.innerWidth,
            height: window.innerHeight
        }
    });
    
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ API
    console.log('üåê API:', {
        baseUrl: API_BASE_URL,
        config: CONFIG ? '–ó–∞–≥—Ä—É–∂–µ–Ω' : '–ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω',
        endpoints: CONFIG ? Object.keys(CONFIG.API.ENDPOINTS) : 'N/A'
    });
    
    // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    console.log('üîß –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:', {
        adminToken: adminToken ? '–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
        userRole: userRole || '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞',
        currentProductId: currentProductId || '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω',
        currentCategoryId: currentCategoryId || '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω',
        variations: variations ? variations.length : 0,
        uploadedImages: uploadedImages ? uploadedImages.length : 0
    });
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API
    testAPIConnection();
    
    console.log('üîç === –ú–û–ù–ò–¢–û–†–ò–ù–ì –ó–ê–í–ï–†–®–ï–ù ===');
}

/**
 * üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API
 */
async function testAPIConnection() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API...');
    
    try {
        const startTime = performance.now();
        const response = await fetch(`${API_BASE_URL}/health`);
        const endTime = performance.now();
        const responseTime = Math.round(endTime - startTime);
        
        if (response.ok) {
            const data = await response.json();
            console.log('‚úÖ API –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ:', {
                status: response.status,
                responseTime: responseTime + 'ms',
                data: data
            });
        } else {
            console.log('‚ö†Ô∏è API –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ:', {
                status: response.status,
                responseTime: responseTime + 'ms',
                statusText: response.statusText
            });
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API:', {
            message: error.message,
            type: error.name
        });
    }
}

/**
 * üßπ –û—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∏ —Å–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
 */
function systemReset() {
    console.log('üßπ –°–±—Ä–æ—Å —Å–∏—Å—Ç–µ–º—ã...');
    
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã? –≠—Ç–æ –æ—á–∏—Å—Ç–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É.')) {
        // –û—á–∏—â–∞–µ–º localStorage
        localStorage.clear();
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        adminToken = null;
        userRole = null;
        currentProductId = null;
        currentCategoryId = null;
        variations = [];
        uploadedImages = [];
        imageUrls = [];
        
        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
        window.location.reload();
    }
}

/**
 * üìä –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º—ã
 */
function exportSystemData() {
    console.log('üìä –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º—ã...');
    
    const systemData = {
        timestamp: new Date().toISOString(),
        localStorage: {
            adminToken: localStorage.getItem('adminToken') ? '–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
            userRole: localStorage.getItem('userRole'),
            lastActivity: localStorage.getItem('lastActivity'),
            userData: localStorage.getItem('userData')
        },
        globals: {
            adminToken: adminToken ? '–ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
            userRole: userRole,
            currentProductId: currentProductId,
            currentCategoryId: currentCategoryId,
            variationsCount: variations.length,
            imagesCount: uploadedImages.length
        },
        environment: {
            userAgent: navigator.userAgent,
            url: window.location.href,
            timestamp: Date.now()
        }
    };
    
    // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    const dataStr = JSON.stringify(systemData, null, 2);
    const dataBlob = new Blob([dataStr], {type: 'application/json'});
    const url = URL.createObjectURL(dataBlob);
    
    const link = document.createElement('a');
    link.href = url;
    link.download = `system-data-${Date.now()}.json`;
    link.click();
    
    URL.revokeObjectURL(url);
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã');
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
window.systemMonitor = systemMonitor;
window.testAPIConnection = testAPIConnection;
window.systemReset = systemReset;
window.exportSystemData = exportSystemData; 

// ===== –§–£–ù–ö–¶–ò–ò –î–õ–Ø –†–ê–ë–û–¢–´ –° –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø–ú–ò =====

function openUserModal() {
    document.getElementById('user-modal').style.display = 'block';
    loadRolesForSelect();
}

function closeUserModal() {
    document.getElementById('user-modal').style.display = 'none';
    document.getElementById('user-form').reset();
}

async function loadRolesForSelect() {
    try {
        console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–æ–ª–∏ –¥–ª—è —Å–µ–ª–µ–∫—Ç–∞...');
        const response = await fetchData('/api/v1/admin/roles/');
        console.log('üì° –û—Ç–≤–µ—Ç API —Ä–æ–ª–µ–π –¥–ª—è —Å–µ–ª–µ–∫—Ç–∞:', response);
        
        if (response.success && response.data && response.data.roles) {
            const roleSelect = document.getElementById('modal-user-role');
            console.log('üîç –ù–∞–π–¥–µ–Ω —Å–µ–ª–µ–∫—Ç —Ä–æ–ª–µ–π:', roleSelect);
            
            if (roleSelect) {
                roleSelect.innerHTML = '<option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å</option>';
                
                response.data.roles.forEach(role => {
                    console.log('‚ûï –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–ª—å –≤ —Å–µ–ª–µ–∫—Ç:', role);
                    const option = document.createElement('option');
                    option.value = role.id;
                    option.textContent = role.displayName || role.name;
                    roleSelect.appendChild(option);
                });
                
                console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${response.data.roles.length} —Ä–æ–ª–µ–π –≤ —Å–µ–ª–µ–∫—Ç`);
            } else {
                console.error('‚ùå –°–µ–ª–µ–∫—Ç —Ä–æ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω!');
            }
        } else {
            console.error('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ API —Ä–æ–ª–µ–π:', response);
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–æ–ª–µ–π –¥–ª—è —Å–µ–ª–µ–∫—Ç–∞:', error);
        showMessage('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–æ–ª–µ–π: ' + error.message, 'error');
    }
}

// ===== –§–£–ù–ö–¶–ò–ò –î–õ–Ø –†–ê–ë–û–¢–´ –° –†–û–õ–Ø–ú–ò =====

async function loadRoles() {
    console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–æ–ª–∏...');
    try {
        const response = await fetchData('/api/v1/admin/roles/');
        console.log('üì° –û—Ç–≤–µ—Ç API –¥–ª—è —Ä–æ–ª–µ–π:', response);
        if (response.success) {
            console.log('‚úÖ –†–æ–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ:', response.data.roles);
            displayRoles(response.data.roles);
        } else {
            console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ API –¥–ª—è —Ä–æ–ª–µ–π:', response);
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–æ–ª–µ–π:', error);
        showMessage('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–æ–ª–µ–π', 'error');
    }
}

function displayRoles(roles) {
    console.log('üîÑ displayRoles –≤—ã–∑–≤–∞–Ω–∞ —Å –¥–∞–Ω–Ω—ã–º–∏:', roles);
    const tbody = document.getElementById('roles-table-body');
    console.log('üîç –ù–∞–π–¥–µ–Ω tbody:', tbody);
    if (!tbody) {
        console.error('‚ùå tbody –¥–ª—è —Ä–æ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        return;
    }

    tbody.innerHTML = '';
    
    if (!roles || roles.length === 0) {
        tbody.innerHTML = `
            <tr>
                <td colspan="7" class="text-center">
                    <div style="padding: 40px 20px;">
                        <i class="fas fa-user-shield" style="font-size: 48px; color: #ccc; margin-bottom: 15px;"></i>
                        <div style="font-size: 18px; color: #666; margin-bottom: 10px;">–†–æ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</div>
                        <div style="font-size: 14px; color: #999;">–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é —Ä–æ–ª—å, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å —Ä–æ–ª—å"</div>
                    </div>
                </td>
            </tr>
        `;
        return;
    }
    
    roles.forEach((role, index) => {
        const row = document.createElement('tr');
        row.style.animationDelay = `${index * 0.1}s`;
        
        row.innerHTML = `
            <td>
                <div style="display: flex; align-items: center; gap: 12px;">
                    <div style="width: 45px; height: 45px; border-radius: 50%; background: linear-gradient(135deg, #f093fb, #f5576c); display: flex; align-items: center; justify-content: center; color: white; font-weight: bold; font-size: 18px; box-shadow: 0 4px 15px rgba(240, 147, 251, 0.3);">
                        <i class="fas fa-user-shield"></i>
                    </div>
                    <div>
                        <div style="font-weight: 700; color: #333; font-size: 15px;">${role.displayName}</div>
                        <div style="font-size: 11px; color: #888; font-family: monospace;">${role.name}</div>
                    </div>
                </div>
            </td>
            <td>
                <div style="display: flex; align-items: center; gap: 10px;">
                    <i class="fas fa-eye" style="color:rgb(206, 213, 245); font-size: 16px;"></i>
                    <span style="font-weight: 500;">${role.displayName}</span>
                </div>
            </td>
            <td>
                <div style="display: flex; align-items: center; gap: 10px;">
                    <i class="fas fa-info-circle" style="color: #4ecdc4; font-size: 16px;"></i>
                    <span style="font-weight: 500; max-width: 200px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;" title="${role.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}">
                        ${role.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}
                    </span>
                </div>
            </td>
            <td>
                <div style="display: flex; align-items: center; gap: 8px;">
                    <i class="fas fa-key" style="color: #f093fb; font-size: 14px;"></i>
                    <span style="font-size: 13px; color: #666; font-weight: 500;">
                        ${role.permissions ? role.permissions.split(',').length : 0} —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
                    </span>
                </div>
            </td>
            <td>
                <span class="badge ${role.isActive ? 'role-user' : 'role-admin'}" style="background: ${role.isActive ? 'linear-gradient(135deg, #4ecdc4, #44a08d)' : 'linear-gradient(135deg, #ff6b6b, #ee5a24)'};">
                    <i class="fas ${role.isActive ? 'fa-check-circle' : 'fa-times-circle'}"></i>
                    ${role.isActive ? '–ê–∫—Ç–∏–≤–Ω–∞' : '–ù–µ–∞–∫—Ç–∏–≤–Ω–∞'}
                </span>
            </td>
            <td>
                <div style="display: flex; align-items: center; gap: 8px;">
                    <i class="fas fa-users" style="color: #45b7d1; font-size: 14px;"></i>
                    <span class="badge" style="background: linear-gradient(135deg, #45b7d1, #96ceb4); color: white;">
                        ${role.userCount || 0}
                    </span>
                </div>
            </td>
            <td>
                <div style="display: flex; gap: 6px;">
                    <button class="btn-sm btn-primary" onclick="viewRole('${role.id}')" title="–ü—Ä–æ—Å–º–æ—Ç—Ä">
                        <i class="fas fa-eye"></i>
                    </button>
                    <button class="btn-sm btn-secondary" onclick="editRole('${role.id}')" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å" ${role.isSystem ? 'disabled' : ''}>
                        <i class="fas fa-edit"></i>
                    </button>
                    <button class="btn-sm btn-danger" onclick="deleteRole('${role.id}')" title="–£–¥–∞–ª–∏—Ç—å" ${role.isSystem ? 'disabled' : ''}>
                        <i class="fas fa-trash"></i>
                    </button>
                </div>
            </td>
        `;
        tbody.appendChild(row);
    });
}

function openRoleModal() {
    document.getElementById('role-modal').style.display = 'block';
}

function closeRoleModal() {
    document.getElementById('role-modal').style.display = 'none';
    document.getElementById('role-form').reset();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    const userForm = document.getElementById('user-form');
    if (userForm) {
        userForm.addEventListener('submit', handleUserSubmit);
    }
    
    const roleForm = document.getElementById('role-form');
    
    if (roleForm) {
        roleForm.addEventListener('submit', handleRoleSubmit);
    }
    
    // –ú–æ–±–∏–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è
    setupMobileNavigation();
    
    // –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å
    
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–≥–æ —Ç–∞–ø–±–∞—Ä–∞
    // setupMobileTabbar(); // –û—Ç–∫–ª—é—á–µ–Ω–æ - —É–±–∏—Ä–∞–µ–º –Ω–∏–∂–Ω–∏–π —Ç–∞–±–±–∞—Ä
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
function setupMobileNavigation() {
    console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏...');
    
    // –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
    function initMobileNav() {
        const mobileNavToggle = document.getElementById('mobile-nav-toggle');
        const sidebar = document.querySelector('.sidebar');
        
        console.log('üîç –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:');
        console.log('  - mobileNavToggle:', !!mobileNavToggle);
        console.log('  - sidebar:', !!sidebar);
        
        if (!mobileNavToggle || !sidebar) {
            console.log('‚ö†Ô∏è –ú–æ–±–∏–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø–æ–≤—Ç–æ—Ä—è–µ–º —á–µ—Ä–µ–∑ 100ms...');
            setTimeout(initMobileNav, 100);
            return;
        }
        
        console.log('‚úÖ –≠–ª–µ–º–µ–Ω—Ç—ã –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –Ω–∞–π–¥–µ–Ω—ã, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º...');
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        const newToggle = mobileNavToggle.cloneNode(true);
        mobileNavToggle.parentNode.replaceChild(newToggle, mobileNavToggle);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å/—Å–∫—Ä—ã–≤–∞—Ç—å —Å–∞–π–¥–±–∞—Ä –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
        newToggle.addEventListener('click', (e) => {
            e.preventDefault();
            e.stopPropagation();
            console.log('üì± –ö–ª–∏–∫ –ø–æ –º–æ–±–∏–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏');
            sidebar.classList.toggle('show');
            console.log('üîç –°–∞–π–¥–±–∞—Ä –≤–∏–¥–∏–º—ã–π:', sidebar.classList.contains('show'));
        });
        
        // –ó–∞–∫—Ä—ã—Ç—å —Å–∞–π–¥–±–∞—Ä –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
        document.addEventListener('click', (e) => {
            if (!sidebar.contains(e.target) && !newToggle.contains(e.target)) {
                sidebar.classList.remove('show');
            }
        });
        
        // –ê–≤—Ç–æ–∑–∞–∫—Ä—ã—Ç–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –ø—É–Ω–∫—Ç—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        const navItems = sidebar.querySelectorAll('.nav-item a, .nav-item button');
        navItems.forEach(item => {
            item.addEventListener('click', () => {
                console.log('üì± –ö–ª–∏–∫ –ø–æ –ø—É–Ω–∫—Ç—É –Ω–∞–≤–∏–≥–∞—Ü–∏–∏, –∑–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é');
                sidebar.classList.remove('show');
            });
        });
        
        // –ê–≤—Ç–æ–∑–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –ª–æ–≥–æ—Ç–∏–ø –∏–ª–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫
        const logo = sidebar.querySelector('.logo, .sidebar-header');
        if (logo) {
            logo.addEventListener('click', () => {
                console.log('üì± –ö–ª–∏–∫ –ø–æ –ª–æ–≥–æ—Ç–∏–ø—É, –∑–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é');
                sidebar.classList.remove('show');
            });
        }
        
        // –ê–≤—Ç–æ–∑–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –≤–∫–ª–∞–¥–æ–∫ (–¥–ª—è –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π showTab)
        const originalShowTab = window.showTab;
        if (originalShowTab) {
            window.showTab = function(tabName) {
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ–º
                if (window.innerWidth <= 768) {
                    console.log('üì± –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏, –∑–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é');
                    sidebar.classList.remove('show');
                }
                // –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
                return originalShowTab.call(this, tabName);
            };
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º/—Å–∫—Ä—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
        function checkMobile() {
            const isMobile = window.innerWidth <= 768;
            
            if (isMobile) {
                newToggle.style.display = 'block';
                sidebar.classList.remove('show');
                console.log('üì± –ú–æ–±–∏–ª—å–Ω—ã–π —Ä–µ–∂–∏–º: –∫–Ω–æ–ø–∫–∞ –ø–æ–∫–∞–∑–∞–Ω–∞');
            } else {
                newToggle.style.display = 'none';
                sidebar.classList.remove('show');
                console.log('üíª –î–µ—Å–∫—Ç–æ–ø–Ω—ã–π —Ä–µ–∂–∏–º: –∫–Ω–æ–ø–∫–∞ —Å–∫—Ä—ã—Ç–∞');
            }
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
        checkMobile();
        window.addEventListener('resize', checkMobile);
        
        console.log('‚úÖ –ú–æ–±–∏–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
    }
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    initMobileNav();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü
function setupResponsiveTables() {
    const tables = document.querySelectorAll('.data-table');
    
    tables.forEach(table => {
        const rows = table.querySelectorAll('tbody tr');
        
        rows.forEach(row => {
            const cells = row.querySelectorAll('td');
            
            cells.forEach((cell, index) => {
                const header = table.querySelector(`thead th:nth-child(${index + 1})`);
                if (header) {
                    cell.setAttribute('data-label', header.textContent.trim());
                }
            });
        });
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
function optimizeForMobile() {
    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –∫–Ω–æ–ø–æ–∫ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
    const buttons = document.querySelectorAll('.btn, .btn-sm');
    buttons.forEach(btn => {
        btn.style.minHeight = '44px';
        btn.style.minWidth = '44px';
    });
    
    // –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º —Ñ–æ—Ä–º—ã –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
    const inputs = document.querySelectorAll('.form-input');
    inputs.forEach(input => {
        input.style.fontSize = '16px'; // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –∑—É–º –Ω–∞ iOS
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É —Å–≤–∞–π–ø–æ–≤ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    let startX = 0;
    let startY = 0;
    
    document.addEventListener('touchstart', (e) => {
        startX = e.touches[0].clientX;
        startY = e.touches[0].clientY;
    });
    
    document.addEventListener('touchend', (e) => {
        const endX = e.changedTouches[0].clientX;
        const endY = e.changedTouches[0].clientY;
        const diffX = startX - endX;
        const diffY = startY - endY;
        
        // –°–≤–∞–π–ø –≤–ª–µ–≤–æ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è —Å–∞–π–¥–±–∞—Ä–∞
        if (diffX > 50 && Math.abs(diffY) < 50) {
            document.querySelector('.sidebar').classList.remove('show');
        }
        
        // –°–≤–∞–π–ø –≤–ø—Ä–∞–≤–æ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Å–∞–π–¥–±–∞—Ä–∞
        if (diffX < -50 && Math.abs(diffY) < 50) {
            document.querySelector('.sidebar').classList.add('show');
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–±–∏–ª—å–Ω—ã–º —Ç–∞–ø–±–∞—Ä–æ–º
function setupMobileTabbar() {
    const mobileTabbar = document.getElementById('mobile-tabbar');
    
    function checkMobileAndShowTabbar() {
        if (window.innerWidth <= 768) {
            mobileTabbar.style.display = 'flex';
            mobileTabbar.classList.add('show');
        } else {
            mobileTabbar.style.display = 'none';
        }
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–∞–ø–±–∞—Ä –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
    checkMobileAndShowTabbar();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    window.addEventListener('resize', checkMobileAndShowTabbar);
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç—ã —Ç–∞–ø–±–∞—Ä–∞
    const tabbarItems = document.querySelectorAll('.tabbar-item');
    tabbarItems.forEach(item => {
        item.addEventListener('click', () => {
            // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            tabbarItems.forEach(tab => tab.classList.remove('active'));
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
            item.classList.add('active');
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –≤–∫–ª–∞–¥–∫—É
            const tabName = item.dataset.tab;
            switchTab(tabName);
        });
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫ –≤ –º–æ–±–∏–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ
function switchTab(tabName) {
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –≤–∫–ª–∞–¥–∫–∏
    const tabContents = document.querySelectorAll('.tab-content');
    tabContents.forEach(content => {
        content.classList.remove('active');
    });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –≤–∫–ª–∞–¥–∫—É
    const selectedTab = document.getElementById(`${tabName}-tab`);
    if (selectedTab) {
        selectedTab.classList.add('active');
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ —Ç–∞–ø–±–∞—Ä–µ
    const tabbarItems = document.querySelectorAll('.tabbar-item');
    tabbarItems.forEach(item => {
        item.classList.remove('active');
        if (item.dataset.tab === tabName) {
            item.classList.add('active');
        }
    });
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–∫–ª–∞–¥–∫–∏
    switch (tabName) {
        case 'dashboard':
            loadDashboard();
            break;
        case 'products':
            loadProducts();
            break;
        case 'categories':
            loadCategories();
            break;
        case 'users':
            loadUsers();
            break;
        case 'roles':
            loadRoles();
            break;
        case 'orders':
            loadOrders();
            break;
        case 'settings':
            loadSettings();
            break;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ (–¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –º–∞–≥–∞–∑–∏–Ω–∞)
async function loadCustomers() {
    try {
        showMessage('–ó–∞–≥—Ä—É–∑–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤...', 'info');
        
        const response = await fetchData('/api/v1/shop/customers/');
        
        if (response.customers) {
            displayCustomers(response.customers);
            showMessage('‚úÖ –ö–ª–∏–µ–Ω—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã', 'success');
        } else {
            showMessage('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤', 'error');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤:', error);
        showMessage('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤', 'error');
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤
function displayCustomers(customers) {
    const container = document.getElementById('customers-tab');
    if (!container) return;
    
    if (!customers || customers.length === 0) {
        container.innerHTML = `
            <div class="empty-state">
                <i class="fas fa-users"></i>
                <p>–ö–ª–∏–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
                <small>–ö–ª–∏–µ–Ω—Ç—ã –ø–æ—è–≤—è—Ç—Å—è –∑–¥–µ—Å—å –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</small>
            </div>
        `;
        return;
    }
    
    let html = `
        <div class="content-header">
            <h2><i class="fas fa-users"></i> –ö–ª–∏–µ–Ω—Ç—ã –º–∞–≥–∞–∑–∏–Ω–∞</h2>
            <div class="filters">
                <div class="filter-group">
                    <input type="text" class="filter-input" placeholder="–ü–æ–∏—Å–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤..." onkeyup="filterCustomers(this.value)">
                </div>
            </div>
        </div>
        <div class="table-container">
            <h3>–°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤ (${customers.length})</h3>
            <div class="table-responsive">
                <table class="data-table">
                    <thead>
                        <tr>
                            <th>üë§ –ö–ª–∏–µ–Ω—Ç</th>
                            <th>üìß Email</th>
                            <th>üì± –¢–µ–ª–µ—Ñ–æ–Ω</th>
                            <th>üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</th>
                            <th>üõí –ó–∞–∫–∞–∑–æ–≤</th>
                            <th>üí∞ –°—É–º–º–∞ –∑–∞–∫–∞–∑–æ–≤</th>
                            <th>‚öôÔ∏è –î–µ–π—Å—Ç–≤–∏—è</th>
                        </tr>
                    </thead>
                    <tbody>
    `;
    
    customers.forEach(customer => {
        const orderCount = customer.orderCount || 0;
        const totalSpent = customer.totalSpent || 0;
        
        html += `
            <tr>
                <td data-label="–ö–ª–∏–µ–Ω—Ç">
                    <div class="user-info">
                        <div class="user-avatar">
                            <i class="fas fa-user"></i>
                        </div>
                        <div>
                            <div class="user-name">${customer.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                            <div class="user-phone">${customer.phone || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                        </div>
                    </div>
                </td>
                <td data-label="Email">
                    <div class="email-info">
                        <span class="email">${customer.email}</span>
                        ${customer.emailVerified ? '<span class="verified-badge">‚úì</span>' : '<span class="unverified-badge">‚úó</span>'}
                    </div>
                </td>
                <td data-label="–¢–µ–ª–µ—Ñ–æ–Ω">${customer.phone || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</td>
                <td data-label="–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏">
                    <div class="date-info">
                        <div class="date">${new Date(customer.createdAt).toLocaleDateString()}</div>
                        <div class="time">${new Date(customer.createdAt).toLocaleTimeString()}</div>
                    </div>
                </td>
                <td data-label="–ó–∞–∫–∞–∑–æ–≤">
                    <span class="badge badge-info">${orderCount}</span>
                </td>
                <td data-label="–°—É–º–º–∞ –∑–∞–∫–∞–∑–æ–≤">
                    <span class="amount">${totalSpent.toLocaleString()} ‚ÇΩ</span>
                </td>
                <td data-label="–î–µ–π—Å—Ç–≤–∏—è">
                    <div class="action-buttons">
                        <button class="btn btn-sm btn-primary" onclick="viewCustomer('${customer.id}')">
                            <i class="fas fa-eye"></i>
                        </button>
                        <button class="btn btn-sm btn-info" onclick="viewCustomerOrders('${customer.id}')">
                            <i class="fas fa-shopping-cart"></i>
                        </button>
                    </div>
                </td>
            </tr>
        `;
    });
    
    html += `
                    </tbody>
                </table>
            </div>
        </div>
    `;
    
    container.innerHTML = html;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤
function filterCustomers(searchTerm) {
    const rows = document.querySelectorAll('#customers-tab .data-table tbody tr');
    
    rows.forEach(row => {
        const text = row.textContent.toLowerCase();
        const matches = text.includes(searchTerm.toLowerCase());
        row.style.display = matches ? '' : 'none';
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–ª–∏–µ–Ω—Ç–∞
async function viewCustomer(customerId) {
    try {
        const response = await fetchData(`/api/v1/shop/customers/${customerId}/`);
        
        if (response.customer) {
            const customer = response.customer;
            
            const modal = document.createElement('div');
            modal.className = 'modal';
            modal.style.display = 'block';
            
            modal.innerHTML = `
                <div class="modal-content">
                    <div class="modal-header">
                        <h3><i class="fas fa-user"></i> –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ</h3>
                        <span class="close" onclick="this.closest('.modal').remove()">&times;</span>
                    </div>
                    <div style="padding: 20px;">
                        <div class="user-avatar-large">
                            <i class="fas fa-user"></i>
                        </div>
                        <div class="user-info-grid">
                            <div class="info-item">
                                <label>–ò–º—è:</label>
                                <span>${customer.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
                            </div>
                            <div class="info-item">
                                <label>Email:</label>
                                <span>${customer.email}</span>
                            </div>
                            <div class="info-item">
                                <label>–¢–µ–ª–µ—Ñ–æ–Ω:</label>
                                <span>${customer.phone || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
                            </div>
                            <div class="info-item">
                                <label>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</label>
                                <span>${new Date(customer.createdAt).toLocaleString()}</span>
                            </div>
                            <div class="info-item">
                                <label>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤:</label>
                                <span>${customer.orderCount || 0}</span>
                            </div>
                            <div class="info-item">
                                <label>–û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–æ–≤:</label>
                                <span>${(customer.totalSpent || 0).toLocaleString()} ‚ÇΩ</span>
                            </div>
                        </div>
                    </div>
                </div>
            `;
            
            document.body.appendChild(modal);
            
            // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            modal.addEventListener('click', (e) => {
                if (e.target === modal) {
                    modal.remove();
                }
            });
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª–∏–µ–Ω—Ç–µ:', error);
        showMessage('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª–∏–µ–Ω—Ç–µ', 'error');
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–∫–∞–∑–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞
async function viewCustomerOrders(customerId) {
    try {
        const response = await fetchData(`/api/v1/shop/customers/${customerId}/orders/`);
        
        if (response.orders) {
            // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –∑–∞–∫–∞–∑–∞–º–∏ –∫–ª–∏–µ–Ω—Ç–∞
            showMessage(`–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${response.orders.length} –∑–∞–∫–∞–∑–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞`, 'info');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞:', error);
        showMessage('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞', 'error');
    }
}

async function handleUserSubmit(e) {
    e.preventDefault();
    
    const formData = {
        name: document.getElementById('modal-user-name').value,
        email: document.getElementById('modal-user-email').value,
        password: document.getElementById('modal-user-password').value,
        phone: document.getElementById('modal-user-phone').value,
        isActive: document.getElementById('user-active').checked
    };
    
    const roleId = document.getElementById('modal-user-role').value;
    if (roleId) {
        formData.roleId = roleId;
    }
    
    console.log('üîç –û—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ:', formData);
    
    try {
        const response = await fetch(`${API_BASE_URL}/api/v1/admin/users/`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${adminToken}`
            },
            body: JSON.stringify(formData)
        });
        
        const data = await response.json();
        console.log('üîç –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', data);
        console.log('üîç –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);
        
        if (response.ok && data.success) {
            showMessage('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!', 'success');
            closeUserModal();
            loadUsers();
        } else {
            showMessage(data.message || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'error');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        showMessage('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'error');
    }
}

async function handleRoleSubmit(e) {
    e.preventDefault();
    
    const formData = {
        name: document.getElementById('role-name').value,
        displayName: document.getElementById('role-display-name').value,
        description: document.getElementById('role-description').value,
        permissions: document.getElementById('role-permissions').value || '{}'
    };
    
    try {
        const response = await fetch(`${API_BASE_URL}/api/v1/admin/roles/`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${adminToken}`
            },
            body: JSON.stringify(formData)
        });
        
        const data = await response.json();
        
        if (response.ok && data.success) {
            showMessage('–†–æ–ª—å —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!', 'success');
            closeRoleModal();
            loadRoles();
        } else {
            showMessage(data.message || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ–ª–∏', 'error');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ–ª–∏:', error);
        showMessage('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ–ª–∏', 'error');
    }
}

